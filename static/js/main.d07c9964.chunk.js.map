{"version":3,"sources":["modules/Map.ts","modules/Flight.ts","modules/MapDao.ts","modules/Session.ts","modules/SessionDao.ts","modules/LevelDao.ts","modules/LevelSelection.tsx","modules/MapSelection.tsx","modules/ATCNavbar.tsx","modules/Audio.ts","modules/Message.ts","modules/Home.tsx","modules/CommandPane.tsx","modules/MessageConverters.ts","modules/CockpitLogger.tsx","modules/FlightProcessor.ts","modules/TrafficSimulator.ts","modules/RadarMap.ts","modules/RadarPane.tsx","modules/OptionPane.tsx","modules/QueuePane.tsx","modules/InfoPane.tsx","modules/AudioDialog.ts","modules/SpeechPane.tsx","modules/CommandInterpreter.ts","modules/SessionPane.tsx","modules/SpeechRecogn.tsx","modules/DialogTest.tsx","App.tsx","index.tsx"],"names":["MapNodeType","GeoLocationSchema","type","properties","lat","lon","required","MapNodeAlignment","MapNodeTypeSchema","enum","Object","values","MapRouteType","MapNodeSchema","anyOf","allOf","id","alignment","hdg","AreaMapSetSchema","maps","additionalProperties","name","descr","center","nodes","routes","items","edges","minItems","maxItems","isRunway","node","Runway","FlightType","url","homepage","RADS_PER_DEG","Math","PI","DEGS_PER_RAD","NMS_PER_RAD","mapDao","_subj","this","AsyncSubject","ajax","getJSON","pipe","map","body","obj","Validator","validate","throwError","tap","undefined","error","console","subscribe","getMaps","flatMap","mapSet","from","_","filter","latRad","lonRad","z","sin","c","cos","to","v0","versor","v1","acos","min","max","loc","origin","dLon","nms","xy","atan2","hft","normAngle","hdgSingle","htf","normHdg","round","a","hdgTo","d","distance","angle","location","ds","hdgRad","_nodes","mapValues","coords","x","y","range","value","xmin","xmax","ymin","ymax","FlightStatus","FlightTypeSchema","FlightSchema","status","speed","alt","toAlt","rwy","at","turnTo","loopTimer","holdHdg","fix","right","exit","voice","SessionSchema","version","const","level","t","noFlights","noLandedOk","noLandedKo","noExitOk","noExitKo","noCollision","entries","flights","atcVoice","KEY","session","text","localStorage","getItem","JSON","parse","log","sessionDao","getSessions","sess","defer","s","of","EMPTY","err","setItem","stringify","levelId","mapId","uuidv4","putSession","levelDao","levels","list","find","LevelSelection","onSelect","listOnSelect","Card","style","width","Header","ListGroup","variant","Item","action","key","active","eventKey","onClick","MapSelection","ATCNavBar","home","serviceStatus","successRate","wrongRate","collisionRate","Container","fluid","Col","Badge","pill","sprintf","Navbar","Text","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","synthVoices","synth","v","voices","asyncSynth","asObservable","synthSay","cmds","forEach","cmd","m","exec","length","parseInt","msg","utt","SpeechSynthesisUtterance","speak","interval","take","window","speechSynthesis","getVoices","lang","toLowerCase","startsWith","getSynth","first","MessageTag","Command","Report","Confirmation","ErrorCode","Home","props","state","bindAll","th","setState","toArray","sessions","map1","floor","random","toString","create","Jumbotron","Row","CardDeck","handleLevel","handleMap","ButtonToolbar","aria-label","ButtonGroup","Button","handleStart","disabled","handleLoad","Component","orMsgOp","predicates","findIndex","f","tagMsgOp","tag","tags","indexOf","isSpeechError","Error","isError","parserError","SelectionStatus","isVoice","VoiceMessage","buildClimbCommand","flightId","atcId","flightLevel","concat","Climb","buildDescendCommand","Descend","buildMaintainCommand","Maintain","buildTakeoffCommand","ClearedToTakeoff","buildLandCommand","ClearedToLand","buildFlyToCommand","via","FlyToVia","FlyTo","buildHoldCommand","HoldAt","HoldCurrentPosition","buildHoldShortCommand","HoldShort","buildAtGroundMessage","flight","atc","Negative","FlightAtGround","buildInvalidFlightLevelMessage","InvalidFlightLevel","buildBeaconNotFoundMessage","BeaconNotFound","buildReadbackMessage","command","assign","Readback","buildOutOfAreaMessage","FlightReport","report","LeavingOutOfArea","buildEnterToMessage","EnterTo","dest","buildEnterLeaveMessage","EnterLeave","buildDepartureToMessage","ReadyToDepartureTo","buildDepartureLeaveMessage","ReadyToDepartureLeave","buildRunwayVacated","RunwayVacated","buildGoodDayMessage","confirmation","GoodDay","buildRogerMessage","Roger","buildClearedToLeaveMessage","ClearedToLeave","buildFlightNotFoundMessage","FlightNotFound","buildUnitellegibleMessage","speech","Unitellegible","Style","FlightLveles","CommandSelection","onAbort","onChangeFlightLevel","onTurnHeading","onClearToLand","onHold","Body","vertical","FlightSelection","ids","keys","sort","RunwaySelection","runways","DestinationSelection","Entry","Beacon","numCol1","ceil","nodes1","nodes2","drop","ConditionButtons","ConditionSelection","HoldCondition","FlightLevelSelection","flightLevels","orderBy","identity","fl","CommandPane","FlightId","FlightLevel","onCommand","WaitingForTakeoff","Turn","TurnCondition","when","LandingRunway","HoldingCondition","handleAbort","handleChangeFlightLevel","handleTurnHeading","handleClearToLand","handleHold","handleFlightLevelSelect","handleTurnConditionSelect","handleTurnHeadingSelect","handleRunwaySelect","handleHoldConditionSelect","handleFlightSelection","predicate","isFromFlight","fTags","apply","anyTagMsgOp","isFromAtc","TextBuilderPattern","Flight","templ","ATC","AudioBuilderPattern","TokenRegex","Builder","message","_message","_map","sections","split","prefixSplits","prefix","match","tokens","tok","fnId","substring","fn","join","errCode","SpellingWords","freeze","b","e","g","h","i","j","k","l","n","o","p","q","r","u","w","RunwaySuffix","spell","word","sp","spellId","TextBuilder","pattern","applyTemplate","AudioBuilder","_session","CockpitLogger","maxMessages","_log","messages","takeRight","toast","dark","SECS_PER_HOUR","MINS_PER_SEC","FEET_PER_NM","RADIUS_PER_KNOTS","VALIDATION_PROPS","setMod","set","deleteMod","delete","setLocationMod","FlightProcessor","_flight","_messages","_props","addMessage","FlyingTo","ClearedTo","climbMsg","GoingAroundMissingApproach","GoingAroundMissingRunway","PassingFlightLevel","flightTempl","vspeed","landingAngle","tan","landingAlt","om","rwyId","radial","mm","outerMarker","approachDistance","da","outerMarkerAlt","withMessages","invalid","trace","flightMap","fromJS","modifiers","flight1","reduce","modifier","toJS","withFlight","dt","maxAngle","route","abs","sign","newHdg","cpt","onPassing","newFlight","turnedTo","moveHoriz","moveVert","rwyNode","rwyHdg","pLPnt","pRPnt","dL","dR","sigma1","sigma","asin","entry","pivot","template","speed360","speed0","speedByAlt","toHdg","updater","lp","update","turnedRight","nextPos","newAlt","newSpeed","result","addPassingFlightLevelDialog","minAlt","approachAlt","processClimbCommand","processDescendCommand","processMaintainCommand","processTakeoffCommand","processFlyToCommand","processClearedToLandCommand","processHoldCommand","validateATC","holdingDuration","atNode","HoldingToAt","HoldingFrom","RunwayNotFound","buildRunwayNotFoundMessage","clearToLandDistance","RunwayTooDistant","maxApproachAlt","FlightTooHigh","buildTooHighMessage","Approaching","Turning","ATCNotFound","validateFlightLevelCommand","cmdAlt","Landing","Aligning","Flying","flightRwy","FlightNotAtGround","buildNotAtGroundMessage","InvalidRunway","buildInvalidRunwayMessage","processTimePhase1","processExit","processTimeFlyingTo","processTimeFlying","processTimeTurning","processTimeApproaching","processTimeAligning","processTimeLanding","processTimeHoldingFrom","HoldingTo","processTimeHoldingTo","HoldingFromAt","processTimeHoldingFromNode","processTimeHoldingToNode","outboundTrack","hdg1","flyTo","exitNode","findKey","isEntryNode","nodeHdg","diff","Exited","approachJunction","maxTurn","dc","angle1","goAroundAlt","addMissingApproachDialog","approachVert","f1","turnedRightTo","turnedLeftTo","landVert","landingHdgRange","runwayNode","addMissingRunwayDialog","Landed","shifting","midleMarker","df","sqrt","fPts","apprAlt","addFlyingToDialog","DefaultSimProps","jetProb","safeEntryDelay","entryAlt","exitAlt","collisionDistance","collisionAlt","exitDistance","conditionDistance","J","A","flightVoices","rndFlightId","tmpl","mode","String","fromCharCode","choose","buildSimulator","TrafficSimulator","holdShort","addMessages","fp","processCommand","newSession","setIn","withSession","processFlights","filterForLanded","filterForOutOfArea","filterForExited","filterCollision","processForNewFlight","addTime","flightsAry","collision","Set","add","partition","has","collided","notCollided","noCollided","notCollidedMap","groupBy","Collision","exited","notExited","exitedOk","exitedKo","ok","ko","notExitedMap","okMessages","Leaving","koMessages","LeavingMissingDearture","pts","inArea","inAreaMap","landed","notLanded","landedOk","landedKo","notLandedMap","fromPairs","WrongRunwayVacated","size","processed","processTime","newFlights","maxPlane","flightFreq","lambda","exp","rndPoisson","tmp","createFlight","entryTimeout","prob","candidates","createEntryCandidates","createExitCandidates","Jet","Airplane","fromRwy","flightSpeed","sessionMap1","sessionMap","next","toRwy","addDepartureToDialog","addDepartureLeaveDialog","addEnterToDialog","addEnterLeaveDialog","RadarMap","nodeMap","height","borders","offsetX","offsetY","scale","xscale","yscale","scale1","pointByNm","pointByNode","pointByNodeId","dx","dy","defaults","dxnms","dynms","moveByNm","gs10","logGs","log10","pow","xRange","yRange","topLeft","bottomRight","ZOOM_SCALE","RadarConf","ImageConf","PlaneConf","x1","x2","y1","y2","FlightLevels","Node","pt","radarMap","textPt","radius","textPos","nodeClass","textClass","cx","cy","FlightGraph","altitude","pointByGeo","collisionRadius","showColllision","collisionClassName","trans","rotate","txt1","txt2","x3","x4","y3","y4","txtClassName","transform","GridMarker","gridSize","x0","y0","gridMarkerText","Grid","rect","gxmin","gxmax","gymin","gymax","xidx","yidx","upnms","dwnnms","lnms","rpnms","Route","routePath","cl","RadarPane","dragging","ev","button","preventDefault","pivotX","clientX","pivotY","clientY","fit","rm","shiftKey","zoom","deltaY","factor","moveByPts","onMouseMove","handleMove","onMouseDown","handleDown","onMouseUp","handleUp","onMouseLeave","onWheel","handleWheel","handleZoomIn","icon","faSearchPlus","handleZoomOut","faSearchMinus","handleFit","faSearch","DefaultSpeeds","OptionsPane","muted","onMuted","listeningEnabled","onListeningEnabled","speeds","onSpeed","Accordion","defaultActiveKey","as","Form","Group","controlId","Label","Check","label","onChange","checked","parseFloat","target","toLines","toFl","st","line1","line2","QueuePane","lines","sortBy","InfoPane","logger","AudioDialog","_recogn","_speeches","_listening","_buffer","_speech","_listenEnabled","Subject","BehaviorSubject","self","ondefault","onresult","onend","onnomatch","onerror","SpeechRecognition","webkitSpeechRecognition","recognition","continuous","interimResults","maxAlternatives","onspeechend","onstart","onaudiostart","onsoundstart","onspeechstart","onsoundend","onaudioend","createRecogn","results","transcript","handleSpeech","onSpeech","onListening","onRecognized","speeches","listening","speaking","notSpeaking","inter","speakingPooling","polling","combineLatest","cleared","handleCleared","trim","parseSpeech","isCompleted","bfr","listenEnabled","startListening","rec","recogn","start","SpeechPane","InputGroup","Prepend","faMicrophone","faMicrophoneSlash","Similitudes","climb","descend","fly","maintain","runway","isString","el","Context","cursor","data","stack","dropRight","speechToMessage","ctx","peek","ParserError","_ctx","errorIfEnd","token","peekn","push","pushHold","toUpperCase","isSimilar","expected","optWord","ctx1","optDict","all","exprs","expr","ifThenElse","whenDef","whenUndef","ifDropThenElse","any","repeat","reducer","acc","ctx2","must","errorCode","regex","optNum","test","zero","one","wine","two","three","four","for","five","six","seven","eight","nine","niner","naina","optAlpha","alpha","bravo","charlie","delta","echo","foxtrot","golf","hotel","india","indian","juliet","kilo","lima","mike","november","oscar","papa","quebec","rebec","prebec","romeo","sierra","tango","uniform","uniforms","uniformed","victor","viktor","picture","whiskey","whisky","yankee","zulu","optAlphaNum","beaconId","london","paris","munich","milan","frankfurt","optRunway","left","optClimb","optDescend","optMaintain","optFlyTo","optHold","optLand","optTakeoff","muteMessage","SessionPane1","clock","ts","audioDialog","handleSpeechMessage","handleListening","getSession","sessionId","getMap","indices","flightVoices1","reject","handleClock","handleMessages","ts1","ts2","sim","transition","texts","build","putMessages","txt","clips","say","cancel","isCommand","handleCommand","xs","handleSpeed","handleMuted","handleListenEnabled","SessionPane","useParams","SpeechRecogn","_recognition","errorHandler","event","handleResult","listen","column","sm","Control","plaintext","readOnly","defaultValue","DialogTest","errors","splice","Alert","dismissible","show","onClose","handleCloseAlert","FormGroup","handleVoice","NoMatch","App","basename","position","autoClose","hideProgressBar","pauseOnFocusLoss","pauseOnHover","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d07c9964.chunk.js","sourcesContent":["import { Schema, Validator } from 'jsonschema';\n\nexport interface GeoLocation {\n    readonly lat: number;\n    readonly lon: number;\n}\n\nexport const GeoLocationSchema: Schema = {\n    type: 'object',\n    properties: {\n        lat: { type: 'number' },\n        lon: { type: 'number' },\n    },\n    required: ['lat', 'lon']\n};\n\nexport enum MapNodeType {\n    Beacon = 'beacon',\n    Entry = 'entry',\n    OuterMarker = 'om',\n    Runway = 'runway'\n}\n\nconst MapNodeTypeSchema: Schema = {\n    type: 'string',\n    enum: Object.values(MapNodeType)\n};\n\nexport enum MapNodeAlignment {\n    N = 'N',\n    NE = 'NE',\n    E = 'E',\n    SE = 'SE',\n    S = 'S',\n    SW = 'SW',\n    W = 'W',\n    NW = 'NW'\n}\n\nconst MapNodeAlignmentSchema: Schema = {\n    type: 'string',\n    enum: Object.values(MapNodeAlignment)\n};\n\n\nexport interface BasicMapNode extends GeoLocation {\n    readonly id: string;\n    readonly type: MapNodeType;\n    readonly alignment: MapNodeAlignment;\n}\n\nconst BasicMapNodeSchema: Schema = {\n    allOf: [\n        GeoLocationSchema,\n        {\n            type: \"object\",\n            properties: {\n                id: { type: 'string' },\n                type: MapNodeTypeSchema,\n                alignment: MapNodeAlignmentSchema\n            },\n            required: ['id', 'type', 'alignment']\n        }\n    ]\n};\n\nexport interface HeadingMapNode extends BasicMapNode {\n    readonly hdg: number;\n}\n\nconst HeadingMapNodeSchema: Schema = {\n    allOf: [\n        GeoLocationSchema,\n        {\n            type: 'object',\n            properties: { hdg: { type: 'integer' }, },\n            required: ['hdg']\n        }\n    ]\n};\n\nexport type MapNode = HeadingMapNode | BasicMapNode;\n\nconst MapNodeSchema: Schema = {\n    anyOf: [\n        BasicMapNodeSchema,\n        HeadingMapNodeSchema,\n    ]\n};\n\nexport enum MapRouteType {\n    Connection = 'connection',\n    Entry = 'entry',\n    Land = 'land',\n    LandConnection = 'landConnection',\n    Takeoff = 'takeoff',\n}\n\nconst MapRouteTypeSchema: Schema = {\n    type: 'string',\n    enum: Object.values(MapRouteType)\n}\n\nexport interface MapRoute {\n    readonly type: MapRouteType;\n    readonly edges: string[];\n}\n\nconst MapRouteSchema: Schema = {\n    type: 'object',\n    properties: {\n        type: MapRouteTypeSchema,\n        edges: {\n            type: 'array',\n            items: [\n                { type: 'string' }\n            ],\n            minItems: 2,\n            maxItems: 2\n        }\n    },\n    required: ['type', 'edges']\n}\n\nexport interface AreaMap {\n    readonly id: string;\n    readonly name: string;\n    readonly descr: string;\n    readonly center: GeoLocation;\n    readonly nodes: Record<string, MapNode>;\n    readonly routes: MapRoute[];\n}\n\nconst AreaMapSchema: Schema = {\n    type: 'object',\n    properties: {\n        id: { type: 'string' },\n        name: { type: 'string' },\n        descr: { type: 'string' },\n        center: GeoLocationSchema,\n        nodes: {\n            type: 'object',\n            additionalProperties: MapNodeSchema\n        },\n        routes: {\n            type: 'array',\n            items: MapRouteSchema\n        }\n    },\n    required: ['id', 'name', 'descr', 'center', 'nodes', 'routes']\n};\n\nexport interface AreaMapSet {\n    readonly maps: Record<string, AreaMap>;\n}\nexport const AreaMapSetSchema: Schema = {\n    type: 'object',\n    properties: {\n        maps: {\n            type: 'object',\n            additionalProperties: AreaMapSchema\n        }\n    },\n    required: ['maps']\n};\n\n\nexport interface RadarNode { node: MapNode, coords: number[] }\n\nexport interface FlightMap {\n    readonly nodes: Record<string, RadarNode>,\n    readonly xmin: number;\n    readonly xmax: number;\n    readonly ymin: number;\n    readonly ymax: number;\n    readonly range: number;\n}\n\nexport function validateAreaMapSet(obj: any): AreaMapSet {\n    new Validator().validate(obj, AreaMapSetSchema, { throwError: true });\n    return obj as AreaMapSet;\n}\n\nexport function isRunway(node: MapNode): node is HeadingMapNode {\n    return node.type === MapNodeType.Runway;\n}\n\nexport function isEntryNode(node: MapNode): node is HeadingMapNode {\n    return node.type === MapNodeType.Entry;\n}\n","import { LocatedVector } from \"./MapDao\";\nimport { Validator } from 'jsonschema';\nimport { GeoLocation, GeoLocationSchema } from './Map';\n\nexport enum FlightType {\n    Jet = 'J',\n    Airplane = 'A'\n}\n\nconst FlightTypeSchema = {\n    type: 'string',\n    enum: Object.values(FlightType)\n};\n\nexport enum FlightStatus {\n    WaitingForTakeoff = 'waiting-for-takeoff',\n    Flying = 'flying',\n    FlyingTo = 'flying-to',\n    Turning = 'turning',\n    Approaching = 'approaching',\n    Aligning = 'aligning',\n    Landing = 'landing',\n    HoldingFromAt = 'holding-from-at',\n    HoldingToAt = 'holding-to-at',\n    HoldingFrom = 'holding-from',\n    HoldingTo = 'holding-to',\n    Landed = 'landed',\n    Exited = 'exited'\n}\n\nconst FlightStatusSchema = {\n    type: 'string',\n    enum: Object.values(FlightStatus)\n};\n\nexport interface Flight extends LocatedVector {\n    readonly id: string;\n    readonly type: FlightType;\n    readonly status: FlightStatus;\n    readonly speed: number;\n    readonly alt: number;\n    readonly toAlt: number;\n    readonly to: string;\n    readonly from: string;\n    readonly rwy?: string;\n    readonly at?: string;\n    readonly turnTo?: string;\n    readonly loopTimer?: number;\n    readonly holdHdg?: number;\n    readonly fix?: GeoLocation;\n    readonly right?: boolean;\n    readonly exit?: string;\n    readonly voice?: string;\n}\n\nexport const FlightSchema = {\n    type: 'object',\n    properties: {\n        id: { type: 'string' },\n        type: FlightTypeSchema,\n        status: FlightStatusSchema,\n        speed: { type: 'integer' },\n        alt: { type: 'integer' },\n        toAlt: { type: 'integer' },\n        to: { type: 'string' },\n        from: { type: 'string' },\n        rwy: { type: 'string' },\n        at: { type: 'string' },\n        turnTo: { type: 'string' },\n        loopTimer: { type: 'number' },\n        holdHdg: { type: 'integer' },\n        fix: GeoLocationSchema,\n        right: { type: 'boolean' },\n        exit: { type: 'string' },\n        voice: { type: 'string' }\n    },\n    required: ['id', 'type', 'status', 'speed', 'alt', 'toAlt', 'to', 'from']\n};\n\nexport function validateFlight(obj: any) {\n    new Validator().validate(obj, FlightSchema, { throwError: true });\n    return obj;\n}\n","\nimport { ajax } from 'rxjs/ajax';\nimport { filter, flatMap, map, tap } from 'rxjs/operators';\nimport _ from 'lodash';\nimport { AsyncSubject, from, Observable } from 'rxjs';\nimport { AreaMap, AreaMapSet, GeoLocation, MapNode, validateAreaMapSet } from './Map';\nimport { homepage } from '../../package.json';\n\nconst url = `/${homepage}/data/maps.json`;\nconst NMS_PER_DEG = 60;\nconst RADS_PER_DEG = Math.PI / 180;\nconst DEGS_PER_RAD = 180 / Math.PI;\nconst NMS_PER_RAD = NMS_PER_DEG / RADS_PER_DEG;\n\nexport interface LocatedVector extends GeoLocation {\n    readonly hdg: number;\n}\n\nexport interface RouteInfo {\n    readonly hdg: number;\n    readonly d: number;\n    readonly angle: number;\n    readonly from: boolean;\n    readonly to: boolean;\n}\n\n/** */\nclass MapDao {\n    private _subj: AsyncSubject<AreaMapSet>;\n\n    /** */\n    constructor() {\n        this._subj = new AsyncSubject();\n        ajax.getJSON<any>(url).pipe(\n            map(body => validateAreaMapSet(body)),\n            tap(undefined,\n                error => {\n                    console.error(error);\n                })).subscribe(this._subj);\n    }\n\n    /** */\n    getMaps(): Observable<AreaMapSet> {\n        return this._subj;\n    }\n\n    /**\n     * \n     * @param id \n     */\n    getMap(id: string): Observable<AreaMap> {\n        return this.getMaps().pipe(\n            flatMap(mapSet => from(_.values(mapSet.maps))),\n            filter(map => map.id === id)\n        );\n    }\n\n    /**\n     * Returns the versor of location double[3]\n     * \n     * @param location {lat lon}\n     */\n    versor({ lat, lon }: GeoLocation): number[] {\n        const latRad = lat * RADS_PER_DEG;\n        const lonRad = lon * RADS_PER_DEG;\n        const z = Math.sin(latRad);\n        const c = Math.cos(latRad);\n        const x = c * Math.sin(lonRad);\n        const y = c * Math.cos(lonRad);\n        return [x, y, z];\n    }\n\n    /**\n     * Returns the distance in nm\n     * \n     * @param from source location {lat, lon}\n     * @param to  destination location {lat, lon}\n     */\n    distance(to: GeoLocation, from: GeoLocation): number {\n        const v0 = this.versor(from);\n        const v1 = this.versor(to);\n        const c = v0[0] * v1[0] + v0[1] * v1[1] + v0[2] * v1[2];\n        const result = Math.acos(Math.min(Math.max(-1, c), 1)) * NMS_PER_RAD;\n        return result;\n    }\n\n    /**\n     * Returns the longitude difference in range (-180, 180)\n     * @param {*} loc the location\n     * @param {*} origin the origin\n     */\n    private dLon(loc: GeoLocation, origin: GeoLocation): number {\n        var dLon = (loc.lon - origin.lon);\n        if (dLon >= 180)\n            dLon -= 360;\n        if (dLon < -180)\n            dLon += 360;\n        return dLon;\n    }\n\n    /**\n     * Returns the xy coordinates in nm {x, y}\n     * @param {*} loc the location\n     * @param {*} origin the origin\n     */\n    xy(loc: GeoLocation, origin: GeoLocation): number[] {\n        const x = this.dLon(loc, origin) * NMS_PER_DEG * Math.cos(loc.lat * RADS_PER_DEG);\n        const y = (loc.lat - origin.lat) * NMS_PER_DEG;\n        return [x, y];\n    }\n\n    /**\n     * \n     * @param {*} to \n     * @param {*} from \n     */\n    private hdgSingle(to: GeoLocation, from: GeoLocation): number {\n        const nms = this.xy(to, from);\n        const deg = Math.atan2(nms[0], nms[1]) * DEGS_PER_RAD;\n        return deg;\n    }\n\n    /**\n     * \n     * @param to \n     * @param from \n     */\n    hdg(to: GeoLocation, from: GeoLocation): number {\n        const hft = this.normAngle(this.hdgSingle(to, from));\n        const htf = this.normAngle(this.hdgSingle(from, to) + 180);\n        const hdg = this.normHdg(Math.round(hft + this.normAngle((htf - hft) / 2)));\n        return hdg;\n    }\n\n    /**\n     * \n     * @param hdg \n     */\n    normHdg(hdg: number): number {\n        return hdg > 360 ? hdg - 360 : hdg <= 0 ? hdg + 360 : hdg;\n    }\n\n    /**\n     * \n     * @param a \n     */\n    normAngle(a: number): number {\n        return a >= 180 ? a - 360 : a < -180 ? a + 360 : a;\n    }\n\n    /**\n     * Returns the route info to fly to a location {d, hdg, angle, from, to}\n     * \n     * @param from the origin location or flight\n     * @param to the target location\n     * @param hdg the from direction\n     */\n    route(from: LocatedVector | GeoLocation, to: GeoLocation, hdg?: number): RouteInfo {\n        if (hdg === undefined) {\n            hdg = (from as LocatedVector).hdg;\n        }\n        const hdgTo = this.hdg(to, from);\n        const d = this.distance(from, to);\n        const angle = this.normAngle(Math.round(hdgTo - hdg));\n        const toFlag = angle < 90 && angle > -90;\n        const fromFlag = angle > 90 || angle < -90;\n        return { hdg: hdgTo, d, angle, from: fromFlag, to: toFlag };\n    }\n\n    /**\n     * \n     * @param location \n     * @param hdg \n     * @param ds \n     */\n    radial(location: GeoLocation, hdg: number, ds: number): GeoLocation {\n        const { lat, lon } = location;\n        const hdgRad = hdg * RADS_PER_DEG;\n        const dlat = ds * Math.cos(hdgRad) / NMS_PER_DEG;\n        const dlon = ds * Math.sin(hdgRad) / Math.cos(lat * RADS_PER_DEG) / NMS_PER_DEG;\n        const newLat = lat + dlat;\n        const newLon = lon + dlon;\n        return { lat: newLat, lon: newLon };\n    }\n\n    /**\n     * Returns the coordinates in nm {center:{lat, lon}, nodes:[{node:any, coords:[double]}]}\n     * @param {*} nodes locations {id:{lat, long}, ...}\n     * @param {*} center center {lat, long}\n     */\n    coords(nodes: Record<string, MapNode>, center: GeoLocation) {\n        const _nodes = _(nodes)\n            .mapValues(node => {\n                return {\n                    node: node,\n                    coords: this.xy(node, center)\n                };\n            })\n        const x = _nodes.map(node => node.coords[0]);\n        const y = _nodes.map(node => node.coords[1]);\n\n        const range = _(nodes).values().map(node =>\n            this.distance(center, node)\n        ).max() || 0;\n        const result = {\n            nodes: _nodes.value(),\n            xmin: x.min() || 0,\n            xmax: x.max() || 0,\n            ymin: y.min() || 0,\n            ymax: y.max() || 0,\n            range\n        };\n        return result;\n    }\n}\n\nexport const mapDao = new MapDao();\n","import { Flight, FlightSchema } from \"./Flight\";\nimport { Validator } from 'jsonschema';\n\nexport const CURRENT_VERSION = '1.1';\n\nexport type Session = Readonly<{\n    id: string;\n    version: string;\n    level: string;\n    map: string;\n    t: number;\n    entries: Record<string, number>;\n    flights: Record<string, Flight>;\n    noFlights: number;\n    noLandedOk: number;\n    noLandedKo: number;\n    noExitOk: number;\n    noExitKo: number;\n    noCollision: number;\n    atcVoice?: string;\n}>;\n\nexport const SessionSchema = {\n    type: 'object',\n    properties: {\n        id: { type: 'string' },\n        version: { type: 'string', const: CURRENT_VERSION },\n        level: { type: 'string' },\n        map: { type: 'string' },\n        t: { type: 'number' },\n        noFlights: { type: 'integer' },\n        noLandedOk: { type: 'integer' },\n        noLandedKo: { type: 'integer' },\n        noExitOk: { type: 'integer' },\n        noExitKo: { type: 'integer' },\n        noCollision: { type: 'integer' },\n        entries: {\n            type: 'object',\n            additionalProperties: { type: 'number' }\n        },\n        flights: {\n            type: 'object',\n            additionalProperties: FlightSchema\n        },\n        atcVoice: { type: 'string' }\n    },\n    required: ['id', 'version', 'level', 'map', 't',\n        'noFlights', 'noLandedOk', 'noLandedKo', 'noExitOk', 'noCollision', 'entries',\n        'flights']\n}\n\n/**\n * \n * @param obj \n */\nexport function validateSession(obj: any): Session {\n    new Validator().validate(obj, SessionSchema, { throwError: true });\n    return obj as Session;\n}","import { defer, EMPTY, Observable, of } from \"rxjs\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { Session, CURRENT_VERSION, validateSession } from \"./Session\";\nimport { filter } from \"rxjs/operators\";\n\nconst KEY = 'atc.session';\n\nfunction session(): Session | undefined {\n    const text = localStorage.getItem(KEY);\n    if (text !== null) {\n        try {\n            return validateSession(JSON.parse(text));\n        } catch (error) {\n            console.log(error);\n            throw error;\n        }\n    }\n}\n\n/**\n * \n */\nclass SessionDao {\n\n    /**\n     * \n     * @param id \n     */\n    getSession(id: string): Observable<Session> {\n        const result = this.getSessions().pipe(\n            filter(sess => !!sess && sess.id === id)\n        );\n        return result;\n    }\n\n    /** */\n    getSessions(): Observable<Session> {\n        return defer(() => {\n            try {\n                const s = session();\n                return !s ? EMPTY : of(s);\n            } catch (err) {\n                return EMPTY;\n            }\n        });\n    }\n\n    /**\n     * \n     * @param session \n     */\n    putSession(session: Session) {\n        localStorage.setItem(KEY, JSON.stringify(session));\n        return session;\n    }\n\n    /**\n     * \n     * @param levelId \n     * @param mapId \n     */\n    create(levelId: string, mapId: string, atcVoice?: string): Session {\n        const session = {\n            id: uuidv4(),\n            version: CURRENT_VERSION,\n            level: levelId,\n            map: mapId,\n            t: 0,\n            entries: {},\n            flights: {},\n            noFlights: 0,\n            noLandedOk: 0,\n            noLandedKo: 0,\n            noExitOk: 0,\n            noExitKo: 0,\n            noCollision: 0,\n            atcVoice\n        };\n        return this.putSession(session);\n    }\n}\n\nexport const sessionDao = new SessionDao();\n","\nimport { AsyncSubject, Observable } from 'rxjs';\nimport { ajax } from 'rxjs/ajax';\nimport { map, tap } from 'rxjs/operators';\nimport _ from 'lodash';\nimport { Level, LevelList } from './Level';\nimport { homepage } from '../../package.json';\n\nconst url = `/${homepage}/data/levels.json`;\n\nclass LevelDao {\n    private _subj: AsyncSubject<LevelList>;\n\n    /** */\n    constructor() {\n        this._subj = new AsyncSubject();\n        ajax.getJSON<LevelList>(url).pipe(\n            tap(undefined, error => {\n                console.error(error);\n            })).subscribe(this._subj);\n    }\n\n    /** */\n    levels(): Observable<LevelList> {\n        return this._subj;\n    }\n\n    /**\n     * \n     * @param id \n     */\n    level(id: string): Observable<Level | undefined> {\n        return this.levels().pipe(\n            map(list => _.find(list.levels, { id: id }))\n        );\n    }\n}\n\nexport const levelDao = new LevelDao();\n","import React from 'react';\nimport { Card, ListGroup } from 'react-bootstrap';\nimport _ from 'lodash';\nimport { Level } from './Level';\n\n/**\n * \n */\nexport const LevelSelection: React.FC<{\n  readonly value?: string,\n  readonly values?: Level[],\n  readonly onSelect?: (value: string) => void\n}> = ({ value, values = [], onSelect }) => {\n\n  const listOnSelect = (value: string) => () => {\n    if (!!onSelect) {\n      onSelect(value);\n    }\n  }\n\n  return (\n    <Card style={{ width: '18rem' }}>\n      <Card.Header>Game Level</Card.Header>\n      <ListGroup variant=\"flush\">\n        {_.map(values, level =>\n          (\n            <ListGroup.Item action key={level.id}\n              active={!!value && value === level.id}\n              eventKey={level.id}\n              onClick={listOnSelect(level.id)}>{level.name}</ListGroup.Item>\n          )\n        )}\n      </ListGroup>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Card, ListGroup } from 'react-bootstrap';\nimport _ from 'lodash';\nimport { AreaMap } from './Map';\n\n/**\n * \n * @param param0 \n */\nexport const MapSelection: React.FC<{\n  readonly value?: string;\n  readonly values?: AreaMap[];\n  readonly onSelect?: (value: string) => void;\n}> = ({ value, values = [], onSelect }) => {\n\n  const onClick = (value: string) => () => {\n    if (!!onSelect) {\n      onSelect(value);\n    }\n  };\n\n  return (\n    <Card style={{ width: '18rem' }}>\n      <Card.Header>Map</Card.Header>\n      <ListGroup variant=\"flush\">\n        {_.map(values, map => {\n          return (\n            <ListGroup.Item key={map.id}\n              eventKey={map.id}\n              active={value === map.id}\n              action onClick={onClick(map.id)}>\n              {map.descr}\n            </ListGroup.Item>\n          );\n        })\n        }\n      </ListGroup>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Badge, Col, Container, Nav, Navbar } from 'react-bootstrap';\nimport { sprintf } from 'sprintf-js';\nimport { Session } from './Session';\nimport { version, homepage } from '../../package.json';\n\n/**\n * \n * @param param0 \n */\nexport const ATCNavBar: React.FC<{ session?: Session }> = ({ session }) => {\n  const home = `/${homepage}`;\n  var serviceStatus = undefined;\n  if (!session) {\n    serviceStatus = (\n      <Navbar.Text></Navbar.Text>\n    );\n  } else {\n    const { noFlights, noLandedOk, noLandedKo, noExitKo, noExitOk, noCollision, t } = session as Session;\n    const successRate = !!t ? (noLandedOk + noExitOk) * 3600 / t : 0;\n    const wrongRate = !!noFlights ? (noExitKo + noLandedKo) / noFlights * 100 : 0;\n    const collisionRate = !!noFlights ? noCollision / noFlights * 100 : 0;\n\n    serviceStatus = (\n      <Container fluid>\n        <Col>\n          <span>\n            <Badge variant=\"info\" pill>Inbound: {sprintf('%d', noFlights)}</Badge>\n          </span>\n        </Col >\n        <Col>\n          <span>\n            <Badge variant=\"success\" pill>Success: {sprintf('%.1f fph', successRate)}</Badge>\n          </span>\n        </Col >\n        <Col>\n          <span>\n            <Badge variant=\"warning\" pill>Wrong: {sprintf('%.0f%%', wrongRate)}</Badge>\n          </span>\n        </Col >\n        <Col>\n          <span>\n            <Badge variant=\"danger\" pill>Collision: {sprintf('%.0f%%', collisionRate)}</Badge>\n          </span>\n        </Col >\n        <Col>\n          <span>\n            <Badge variant=\"success\">Right landed: {sprintf('%d', noLandedOk)}</Badge>\n          </span>\n        </Col >\n        <Col>\n          <span>\n            <Badge variant=\"success\">Right left: {sprintf('%d', noExitOk)}</Badge>\n          </span>\n        </Col >\n        <Col>\n          <span>\n            <Badge variant=\"warning\">Wrong landed: {sprintf('%d', noLandedKo)}</Badge>\n          </span>\n        </Col >\n        <Col>\n          <span><Badge variant=\"warning\">Wrong left: {sprintf('%d', noExitKo)}</Badge></span>\n        </Col>\n        <Col>\n          <span>\n            <Badge variant=\"danger\">Collisions: {sprintf('%d', noCollision)}</Badge>\n          </span>\n        </Col >\n      </Container >\n    );\n  }\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" >\n      <Navbar.Brand href=\"http://www.mmarini.org\">www.mmarini.org</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href={home}>ATC {version}</Nav.Link>\n        </Nav>\n        <Navbar.Text>\n        </Navbar.Text >\n      </Navbar.Collapse>\n      <Nav className=\"mr-auto\">\n        {serviceStatus}\n      </Nav>\n    </Navbar >\n  );\n};\n","import { AsyncSubject, interval, Observable } from \"rxjs\";\nimport { bufferCount, filter, first, flatMap, map, take, tap } from \"rxjs/operators\";\n\nconst ReadingPollingInterval = 100;\nconst SpeakingPollingInterval = 100;\n\n/**\n * \n * @param voices \n */\nfunction filterEng(voices: SpeechSynthesisVoice[]): SpeechSynthesisVoice[] {\n    return voices.filter(voice => voice.lang.toLowerCase().startsWith('en'));\n}\n\n/**\n * \n */\nfunction getSynth() {\n    const synth = window.speechSynthesis;\n    const result = { synth, voices: synth ? filterEng(synth.getVoices()) : [] };\n    return result;\n}\n\n/**\n * Returns the single observable with the list of voices\n */\nexport function synthVoices(): Observable<SpeechSynthesisVoice[]> {\n    return synth().pipe(\n        map(v => v.voices)\n    );\n}\n\n/**\n * \n */\nexport function speakingPooling(inter: number = SpeakingPollingInterval): Observable<boolean> {\n    return interval(inter).pipe(\n        flatMap(() => synth()),\n        map(v => v.synth.speaking)\n    );\n}\n\n/**\n * \n */\nexport function speakingChange() {\n    return (obs: Observable<boolean>) =>\n        (obs).pipe(\n            bufferCount(2, 1),\n            filter(x => x[0] !== x[1]),\n            map(x => x[1])\n        );\n}\n\nconst asyncSynth = new AsyncSubject<{\n    synth: SpeechSynthesis,\n    voices: SpeechSynthesisVoice[]\n}>();\n\ninterval(ReadingPollingInterval).pipe(\n    take(100),\n    map(() => getSynth()),\n    filter(v => v.voices.length > 0),\n    first()\n).subscribe(asyncSynth);\n\n/**\n * \n */\nexport function synth() {\n    return asyncSynth.asObservable();\n}\n\n/**\n * Returns the single observable that synthetizes a list of commands or empty observable \n * if cannot synthetize\n * @param {*} cmds the commad list 'voiceIndex text'\n */\nexport function synthSay(cmds: string[]): Observable<any> {\n    return synth().pipe(\n        tap(({ synth, voices }) => {\n            cmds.forEach(cmd => {\n                const m = /(\\d+)\\b(.*)/.exec(cmd);\n                if (m != null && m.length === 3) {\n                    const voice = voices[parseInt(m[1])];\n                    const msg = m[2];\n                    if (voice) {\n                        const utt = new SpeechSynthesisUtterance(msg);\n                        utt.voice = voice;\n                        // utt.rate = 1.2;\n                        synth.speak(utt);\n                    }\n                }\n            })\n        })\n    );\n}\n","import _ from 'lodash';\nimport { sprintf } from 'sprintf-js';\nimport { Flight } from './Flight';\n\nexport enum MessageTag {\n    Command = 'command',\n    Confirmation = 'confirmation',\n    Error = 'error',\n    FlightReport = 'flight-report',\n    Negative = 'negative',\n    Readback = 'readback',\n    VoiceMessage = 'voice'\n}\n\nexport enum Command {\n    ClearedToLand = 'cleared-to-land',\n    ClearedToTakeoff = 'cleared-to-takeoff',\n    Climb = 'climb',\n    Descend = 'descend',\n    FlyTo = 'fly-to',\n    FlyToVia = 'fly-to-via',\n    Maintain = 'maintain',\n    HoldAt = 'hold-at',\n    HoldCurrentPosition = 'hold-current-position',\n    HoldShort = 'hold-short'\n}\n\nexport enum Report {\n    Collision = 'collision',\n    EnterTo = 'enter-to',\n    EnterLeave = 'enter-leave',\n    FlyingTo = 'flying-to',\n    GoingAroundMissingApproach = 'going-around-missing-approach',\n    GoingAroundMissingRunway = 'going-around-missing-runway',\n    Leaving = 'leaving',\n    LeavingMissingDearture = 'leaving-missing-departure',\n    LeavingOutOfArea = 'leaving-out-of-area',\n    PassingFlightLevel = 'passing-flight-level',\n    ReadyToDepartureTo = 'ready-to-departure-to',\n    ReadyToDepartureLeave = 'ready-to-departure-leave',\n    RunwayVacated = 'runway-vacated',\n    WrongRunwayVacated = 'wrong-runway-vacated'\n}\n\nexport enum Confirmation {\n    ClearedTo = 'cleared-to',\n    ClearedToLeave = 'cleared-to-leave',\n    GoodDay = 'good-day',\n    Roger = 'roger'\n}\n\nexport enum ErrorCode {\n    ATCNotFound = 'atc-not-found',\n    BeaconNotFound = 'beacon-not-found',\n    FlightAtGround = 'flight-at-ground',\n    FlightNotAtGround = 'flight-not-at-ground',\n    FlightNotFound = 'flight-not-found',\n    FlightTooHigh = 'flight-too-high',\n    InvalidFlightLevel = 'invalid-flight-level',\n    InvalidRunway = 'invalid-runway',\n    RunwayNotFound = 'runway-not-found',\n    RunwayTooDistant = 'runway-too-distant',\n    Unitellegible = 'unintelligible'\n};\n\nexport interface AbstractMessage {\n    readonly from?: string;\n    readonly to?: string;\n    readonly tags: MessageTag[];\n};\n\nexport interface AbstractCommandMessage extends AbstractMessage {\n    readonly cmd: Command;\n}\n\nexport interface FlightLevelCommandMessage extends AbstractCommandMessage {\n    readonly flightLevel: string;\n}\n\nexport interface TakeoffCommandMessage extends FlightLevelCommandMessage {\n    readonly rwy: string;\n}\n\nexport interface LandCommandMessage extends AbstractCommandMessage {\n    readonly rwy: string;\n}\n\nexport interface FlyToCommandMessage extends AbstractCommandMessage {\n    readonly turnTo: string;\n    readonly via?: string;\n}\n\nexport interface HoldAtCommandMessage extends AbstractCommandMessage {\n    readonly at?: string;\n}\n\nexport type CommandMessage = FlightLevelCommandMessage | TakeoffCommandMessage | LandCommandMessage | FlyToCommandMessage | HoldAtCommandMessage;\n\n\nexport interface BasicReportMessage extends AbstractMessage {\n    readonly report: Report;\n}\n\nexport interface DestinationMessage extends BasicReportMessage {\n    readonly dest: string;\n}\n\nexport interface RunwayMessage extends BasicReportMessage {\n    readonly rwy: string;\n}\n\nexport interface DepartureMessage extends DestinationMessage, RunwayMessage { };\n\nexport interface EnterMessage extends DestinationMessage {\n    readonly via: string;\n}\n\nexport interface FlightLevelMessage extends BasicReportMessage {\n    readonly flightLevel: string;\n}\n\nexport type ReportMessage = BasicReportMessage | DestinationMessage | EnterMessage | FlightLevelMessage | RunwayMessage | DepartureMessage;\n\nexport interface BasicConfirmationMessage extends AbstractMessage {\n    readonly confirmation: Confirmation\n}\n\nexport interface ClearedToDestinationMessage extends BasicConfirmationMessage {\n    readonly dest: string\n}\n\nexport type ConfirmationMessage = ClearedToDestinationMessage | BasicConfirmationMessage;\n\nexport interface BasicNegativeMessage extends AbstractMessage {\n    readonly error: ErrorCode\n}\n\nexport interface IdNegativeMessage extends BasicNegativeMessage {\n    readonly id: string;\n}\n\nexport type NegativeResponse = BasicNegativeMessage | IdNegativeMessage;\n\nexport interface AbstractErrorMessage extends AbstractMessage {\n    readonly error: ErrorCode\n}\n\nexport interface ErrorIdNotFoundMessage extends AbstractErrorMessage {\n    readonly id: string\n}\n\nexport interface SpeechErrorMessage extends AbstractErrorMessage {\n    readonly speech: string;\n    readonly parserError: string;\n}\n\nexport type Message = CommandMessage | ReportMessage | ConfirmationMessage\n    | BasicNegativeMessage | ErrorIdNotFoundMessage;\n\nexport type MessagePredicate = (msg: Message) => boolean;\n\n/**\n * \n * @param msg \n */\nexport function anyMsgOp(msg: Message): boolean { return true; }\n\n/**\n * \n * @param msg \n */\nexport function noneMsgOp(msg: Message): boolean { return false; }\n\n/**\n * \n * @param predicates \n */\nexport function andMsgOp(predicates: MessagePredicate[]): MessagePredicate {\n    return (msg: Message) => _.findIndex(predicates, (f, i) => !f(msg)) < 0;\n}\n\n/**\n * \n * @param predicates \n */\nexport function orMsgOp(...predicates: MessagePredicate[]): MessagePredicate {\n    return (msg: Message) => _.findIndex(predicates, f => f(msg)) >= 0;\n}\n\n/**\n * \n * @param predicate \n */\nexport function notMsgOp(predicate: MessagePredicate): MessagePredicate { return (msg: Message) => !predicate(msg); }\n\n/**\n * \n * @param tag \n */\nexport function tagMsgOp(tag: MessageTag): MessagePredicate { return (msg: Message) => msg.tags.indexOf(tag) >= 0; }\n\n/**\n * \n * @param msg \n */\nexport function isCommand(msg: Message): msg is CommandMessage {\n    return tagMsgOp(MessageTag.Command)(msg);\n}\n\nexport function isError(msg: Message): msg is AbstractErrorMessage {\n    return tagMsgOp(MessageTag.Error)(msg);\n}\n\nexport function isSpeechError(msg: Message): msg is SpeechErrorMessage {\n    return isError(msg) && (msg as SpeechErrorMessage).parserError !== undefined;\n}\n\nexport const isVoice = tagMsgOp(MessageTag.VoiceMessage);\n\n/**\n * \n * @param tags \n */\nexport function anyTagMsgOp(...tags: MessageTag[]): MessagePredicate {\n    const fTags = _.map(tags, t => tagMsgOp(t));\n    return orMsgOp.apply(undefined, fTags);\n}\n\n/**\n * \n * @param flightId \n * @param atcId \n * @param flightLevel \n * @parms tags\n */\nexport function buildClimbCommand(flightId: string, atcId: string, flightLevel: string, tags?: MessageTag[]): FlightLevelCommandMessage {\n    return {\n        from: atcId,\n        tags: _.concat([MessageTag.Command], tags || []),\n        to: flightId,\n        cmd: Command.Climb,\n        flightLevel\n    };\n}\n\n/**\n * \n * @param flightId \n * @param atcId\n * @param flightLevel \n * @param tags\n */\nexport function buildDescendCommand(flightId: string, atcId: string, flightLevel: string, tags?: MessageTag[]): FlightLevelCommandMessage {\n    return {\n        from: atcId,\n        tags: _.concat([MessageTag.Command], tags || []),\n        to: flightId,\n        cmd: Command.Descend,\n        flightLevel\n    };\n}\n\n/**\n * \n * @param {*} flightId \n * @param {*} atcId\n * @param {*} flightLevel \n */\nexport function buildMaintainCommand(flightId: string, atcId: string, flightLevel: string, tags?: MessageTag[]): FlightLevelCommandMessage {\n    return {\n        from: atcId,\n        tags: _.concat([MessageTag.Command], tags || []),\n        to: flightId,\n        cmd: Command.Maintain,\n        flightLevel\n    };\n}\n\n/**\n * \n * @param flightId \n * @param atcId \n * @param rwy \n * @param flightLevel \n */\nexport function buildTakeoffCommand(flightId: string, atcId: string, rwy: string, flightLevel: string, tags?: MessageTag[]): TakeoffCommandMessage {\n    return {\n        from: atcId,\n        tags: _.concat([MessageTag.Command], tags || []),\n        to: flightId,\n        cmd: Command.ClearedToTakeoff,\n        flightLevel,\n        rwy\n    };\n}\n\n/**\n * \n * @param flightId \n * @param atcId \n * @param rwy \n */\nexport function buildLandCommand(flightId: string, atcId: string, rwy: string, tags?: MessageTag[]): LandCommandMessage {\n    return {\n        from: atcId,\n        tags: _.concat([MessageTag.Command], tags || []),\n        to: flightId,\n        cmd: Command.ClearedToLand,\n        rwy\n    };\n}\n\n/**\n * \n * @param flightId \n * @param atcId \n * @param to \n * @param via \n */\nexport function buildFlyToCommand(flightId: string, atcId: string, to: string, via?: string, tags?: MessageTag[]): FlyToCommandMessage {\n    return {\n        from: atcId,\n        tags: _.concat([MessageTag.Command], tags || []),\n        to: flightId,\n        cmd: via ? Command.FlyToVia : Command.FlyTo,\n        turnTo: to,\n        via\n    };\n}\n\n/**\n * \n * @param flightId \n * @param atcId \n * @param at \n */\nexport function buildHoldCommand(flightId: string, atcId: string, at?: string, tags?: MessageTag[]): HoldAtCommandMessage {\n    return {\n        from: atcId,\n        tags: _.concat([MessageTag.Command], tags || []),\n        to: flightId,\n        cmd: at ? Command.HoldAt : Command.HoldCurrentPosition,\n        at\n    };\n}\n\n/**\n * \n * @param flightId \n * @param atcId \n * @param at \n */\nexport function buildHoldShortCommand(flightId: string, atcId: string, at: string, tags?: MessageTag[]): HoldAtCommandMessage {\n    return {\n        from: atcId,\n        tags: [MessageTag.Command],\n        to: flightId,\n        cmd: Command.HoldShort,\n        at\n    };\n}\n\n/**\n * \n * @param flight \n * @param atc \n */\nexport function buildATCNotFoundMessage(flight: string, atc: string): BasicNegativeMessage {\n    return {\n        from: flight,\n        to: atc,\n        tags: [MessageTag.Negative],\n        error: ErrorCode.ATCNotFound\n    };\n}\n\n/**\n * \n * @param flight \n * @param atc \n * @param rwy\n */\nexport function buildAtGroundMessage(flight: string, atc: string, rwy: string): IdNegativeMessage {\n    return {\n        from: flight,\n        to: atc,\n        tags: [MessageTag.Negative],\n        error: ErrorCode.FlightAtGround,\n        id: rwy\n    };\n}\n\n/**\n * \n * @param flight \n * @param atc \n * @param rwy\n */\nexport function buildNotAtGroundMessage(flight: string, atc: string, rwy: string): IdNegativeMessage {\n    return {\n        from: flight,\n        to: atc,\n        tags: [MessageTag.Negative],\n        error: ErrorCode.FlightNotAtGround,\n        id: rwy\n    };\n}\n\n/**\n * \n * @param flight \n * @param atc \n */\nexport function buildTooHighMessage(flight: string, atc: string): BasicNegativeMessage {\n    return {\n        from: flight,\n        to: atc,\n        tags: [MessageTag.Negative],\n        error: ErrorCode.FlightTooHigh\n    };\n}\n\n/**\n * \n * @param flight \n * @param atc \n */\nexport function buildTooDistanthMessage(flight: string, atc: string): BasicNegativeMessage {\n    return {\n        from: flight,\n        to: atc,\n        tags: [MessageTag.Negative],\n        error: ErrorCode.RunwayTooDistant\n    };\n}\n\nexport function buildInvalidFlightLevelMessage(flight: string, atc: string, flightLevel: string): IdNegativeMessage {\n    return {\n        from: flight,\n        to: atc,\n        tags: [MessageTag.Negative],\n        error: ErrorCode.InvalidFlightLevel,\n        id: flightLevel\n    };\n}\n\nexport function buildRunwayNotFoundMessage(flight: string, atc: string, rwy: string): IdNegativeMessage {\n    return {\n        from: flight,\n        to: atc,\n        tags: [MessageTag.Negative],\n        error: ErrorCode.RunwayNotFound,\n        id: rwy\n    };\n}\n\n/**\n * \n * @param flight \n * @param atc \n * @param id\n */\nexport function buildBeaconNotFoundMessage(flight: string, atc: string, id: string): IdNegativeMessage {\n    return {\n        from: flight,\n        to: atc,\n        tags: [MessageTag.Negative],\n        error: ErrorCode.BeaconNotFound,\n        id\n    };\n}\n\n/**\n * \n * @param flight \n * @param atc \n */\nexport function buildInvalidRunwayMessage(flight: string, atc: string, rwy: string): IdNegativeMessage {\n    return {\n        from: flight,\n        to: atc,\n        tags: [MessageTag.Negative],\n        error: ErrorCode.InvalidRunway,\n        id: rwy\n    };\n}\n\n/**\n * \n * @param command \n */\nexport function buildReadbackMessage(command: CommandMessage): CommandMessage {\n    return _.assign({}, command, {\n        from: command.to,\n        to: command.from,\n        tags: [MessageTag.Readback]\n    });\n}\n\n/**\n * \n * @param flight \n * @param report \n */\nexport function buildCollisionMessage(flight: string, atc: string): BasicReportMessage {\n    return {\n        from: flight,\n        to: atc,\n        tags: [MessageTag.FlightReport],\n        report: Report.Collision\n    };\n}\n\n/**\n * \n * @param flight \n * @param atc \n */\nexport function buildOutOfAreaMessage(flight: string, atc: string): BasicReportMessage {\n    return {\n        from: flight,\n        to: atc,\n        tags: [MessageTag.FlightReport],\n        report: Report.LeavingOutOfArea\n    };\n}\n\n/**\n * \n * @param flight \n * @param atc \n */\nexport function buildEnterToMessage(flight: Flight, atc: string): EnterMessage {\n    return {\n        from: flight.id,\n        to: atc,\n        tags: [MessageTag.FlightReport],\n        report: Report.EnterTo,\n        dest: flight.to,\n        via: flight.from\n    };\n}\n\n/**\n * \n * @param flight \n * @param atc \n */\nexport function buildEnterLeaveMessage(flight: Flight, atc: string): EnterMessage {\n    return {\n        from: flight.id,\n        to: atc,\n        tags: [MessageTag.FlightReport],\n        report: Report.EnterLeave,\n        dest: flight.to,\n        via: flight.from\n    };\n}\n\n/**\n * \n * @param flight \n * @param atc \n */\nexport function buildFlyingToMessage(flight: Flight, atc: string): DestinationMessage {\n    return {\n        from: flight.id,\n        to: atc,\n        tags: [MessageTag.FlightReport],\n        report: Report.FlyingTo,\n        dest: flight.at as string\n    };\n}\n\n/**\n * \n * @param flight \n * @param atc \n */\nexport function buildLeavingMessage(flight: Flight, atc: string): DestinationMessage {\n    return {\n        from: flight.id,\n        to: atc,\n        tags: [MessageTag.FlightReport],\n        report: Report.Leaving,\n        dest: flight.exit as string\n    };\n}\n\n/**\n * \n * @param flight \n * @param atc \n */\nexport function buildLeavingMissingDepartureMessage(flight: Flight, atc: string): DestinationMessage {\n    return {\n        from: flight.id,\n        to: atc,\n        tags: [MessageTag.FlightReport],\n        report: Report.LeavingMissingDearture,\n        dest: flight.exit as string\n    };\n}\n\n/**\n * \n * @param flight \n * @param atc \n * @param flightLevel \n */\n\nexport function buildPassingFlightLevelMessage(flight: string, atc: string, flightLevel: string | number): FlightLevelMessage {\n    return {\n        from: flight,\n        to: atc,\n        tags: [MessageTag.FlightReport],\n        report: Report.PassingFlightLevel,\n        flightLevel: typeof flightLevel === 'string' ? flightLevel : sprintf('%03d', Math.round(flightLevel / 100))\n    };\n}\n\n/**\n * \n * @param flight \n * @param atc \n * @param flightLevel \n */\nexport function buildMissingApproachMessage(flight: string, atc: string, flightLevel: string | number): FlightLevelMessage {\n    return {\n        from: flight,\n        to: atc,\n        tags: [MessageTag.FlightReport],\n        report: Report.GoingAroundMissingApproach,\n        flightLevel: typeof flightLevel === 'string' ? flightLevel : sprintf('%03d', Math.round(flightLevel / 100))\n    };\n}\n\n/**\n * \n * @param flight \n * @param atc \n * @param flightLevel \n */\nexport function buildMissingRunwayMessage(flight: string, atc: string, flightLevel: string | number): FlightLevelMessage {\n    return {\n        from: flight,\n        to: atc,\n        tags: [MessageTag.FlightReport],\n        report: Report.GoingAroundMissingRunway,\n        flightLevel: typeof flightLevel === 'string' ? flightLevel : sprintf('%03d', Math.round(flightLevel / 100))\n    };\n}\n\n/**\n * \n * @param flight \n * @param atc \n */\nexport function buildDepartureToMessage(flight: Flight, atc: string): DepartureMessage {\n    return {\n        from: flight.id,\n        to: atc,\n        tags: [MessageTag.FlightReport],\n        report: Report.ReadyToDepartureTo,\n        rwy: flight.from,\n        dest: flight.to\n    };\n}\n\n/**\n * \n * @param flight \n * @param atc \n */\nexport function buildDepartureLeaveMessage(flight: Flight, atc: string): DepartureMessage {\n    return {\n        from: flight.id,\n        to: atc,\n        tags: [MessageTag.FlightReport],\n        report: Report.ReadyToDepartureLeave,\n        rwy: flight.from,\n        dest: flight.to\n    };\n}\n\n/**\n * \n * @param flight \n * @param atc \n */\nexport function buildRunwayVacated(flight: Flight, atc: string): RunwayMessage {\n    if (!flight.rwy) {\n        throw new Error('missing runway');\n    }\n    return {\n        from: flight.id,\n        to: atc,\n        tags: [MessageTag.FlightReport],\n        report: Report.RunwayVacated,\n        rwy: flight.rwy\n    };\n}\n\n/**\n * \n * @param flight \n * @param atc \n */\nexport function buildWrongRunwayVacated(flight: Flight, atc: string): RunwayMessage {\n    return {\n        from: flight.id,\n        to: atc,\n        tags: [MessageTag.FlightReport],\n        report: Report.WrongRunwayVacated,\n        rwy: flight.rwy as string\n    };\n}\n\n/**\n * Returns a goodday message\n * @param atcId \n * @param flightId \n */\nexport function buildGoodDayMessage(atcId: string, flightId: string): BasicConfirmationMessage {\n    return {\n        from: atcId,\n        to: flightId,\n        tags: [MessageTag.Confirmation],\n        confirmation: Confirmation.GoodDay\n    }\n}\n\n/**\n * Returns a roger message\n * @param atcId \n * @param flightId \n */\nexport function buildRogerMessage(atcId: string, flightId: string): BasicConfirmationMessage {\n    return {\n        from: atcId,\n        to: flightId,\n        tags: [MessageTag.Confirmation],\n        confirmation: Confirmation.Roger\n    }\n}\n\n/**\n * Returns a cleared to beacon message\n * @param atcId \n * @param flightId \n * @param dest \n */\nexport function buildClearedToMessage(atcId: string, flightId: string, dest: string): ClearedToDestinationMessage {\n    return {\n        from: atcId,\n        to: flightId,\n        tags: [MessageTag.Confirmation],\n        confirmation: Confirmation.ClearedTo,\n        dest\n    }\n}\n/**\n * Returns a cleared to leave message\n * @param atcId \n * @param flightId \n * @param dest \n */\nexport function buildClearedToLeaveMessage(atcId: string, flightId: string, dest: string): ClearedToDestinationMessage {\n    return {\n        from: atcId,\n        to: flightId,\n        tags: [MessageTag.Confirmation],\n        confirmation: Confirmation.ClearedToLeave,\n        dest\n    }\n}\n\nexport function buildFlightNotFoundMessage(atcId: string, flightId: string): AbstractErrorMessage {\n    return {\n        from: atcId,\n        to: flightId,\n        tags: [MessageTag.Error],\n        error: ErrorCode.FlightNotFound\n    };\n}\n\nexport function buildUnitellegibleMessage(speech: string, parserError: string): SpeechErrorMessage {\n    return {\n        tags: [MessageTag.Error, MessageTag.VoiceMessage],\n        error: ErrorCode.Unitellegible,\n        speech, parserError\n    };\n\n}","import React, { Component } from 'react';\nimport { Button, ButtonGroup, ButtonToolbar, CardDeck, Col, Container, Jumbotron, Row } from 'react-bootstrap';\nimport _ from 'lodash';\nimport { mapDao } from './MapDao';\nimport { sessionDao } from './SessionDao';\nimport { levelDao } from './LevelDao';\nimport { tap, toArray } from 'rxjs/operators';\nimport { LevelSelection } from './LevelSelection';\nimport { MapSelection } from './MapSelection';\nimport { AreaMapSet } from './Map';\nimport { LevelList } from './Level';\nimport { Session } from './Session';\nimport { ATCNavBar } from './ATCNavbar';\nimport { synthVoices } from './Audio';\nimport { homepage } from '../../package.json';\n\ninterface HomeState {\n  readonly map?: string;\n  readonly maps?: AreaMapSet;\n  readonly level?: string;\n  readonly levels?: LevelList;\n  readonly sessions?: Session[];\n}\n/**\n * \n */\nclass Home extends Component<{}, HomeState> {\n\n  /**\n   * \n   * @param props \n   */\n  constructor(props: {}) {\n    super(props);\n    this.state = {};\n    _.bindAll(this, ['handleLevel', 'handleMap', 'handleStart', 'handleLoad']);\n  }\n\n  /**\n   * \n   */\n  componentDidMount() {\n    const th = this;\n    mapDao.getMaps().pipe(\n      tap(maps => {\n        th.setState({ maps, map: 'LON' });\n      })\n    ).subscribe();\n\n    levelDao.levels().pipe(\n      tap(levels => {\n        th.setState({ levels, level: levels.levels[0].id });\n      })\n    ).subscribe()\n\n    sessionDao.getSessions().pipe(\n      toArray(),\n      tap((sessions: Session[]) => {\n        th.setState({ sessions });\n      })\n    ).subscribe();\n  }\n\n  /**\n   * \n   */\n  handleStart() {\n    const { level = '', map: map1 = '' } = this.state;\n    synthVoices().pipe(\n      tap(voices => {\n        const atcVoice = voices.length > 0\n          ? Math.floor(Math.random() * voices.length).toString()\n          : undefined;\n        const session = sessionDao.create(level, map1, atcVoice);\n        window.location.href = `/${homepage}#/sessions/${session.id}`;\n      })\n    ).subscribe();\n  }\n\n  handleLoad() {\n    const { sessions } = this.state;\n    if (sessions) {\n      window.location.href = `/${homepage}#/sessions/${sessions[0].id}`\n    }\n  }\n\n  /**\n   * \n   * @param level \n   */\n  handleLevel(level: string) {\n    this.setState({ level });\n  }\n\n  /**\n   * \n   * @param map \n   */\n  handleMap(map: string) {\n    this.setState({ map });\n  }\n\n  /**\n   * \n   */\n  render() {\n    const { levels = { levels: [] }, level, maps = { maps: {} }, map, sessions } = this.state;\n\n    return (\n      <Container fluid>\n        <ATCNavBar />\n        <Container>\n          <Jumbotron>\n            <h1>ATC</h1>\n            <Container>\n              <Row>\n                <Col>\n                  <CardDeck>\n                    <LevelSelection value={level} values={levels.levels} onSelect={this.handleLevel} />\n                    <MapSelection value={map} values={_.values(maps.maps)} onSelect={this.handleMap} />\n                  </CardDeck>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <ButtonToolbar aria-label=\"Buttons\">\n                    <ButtonGroup className=\"mr-2\" aria-label=\"Start\">\n                      <Button onClick={this.handleStart} >Start</Button>\n                    </ButtonGroup>\n                    <ButtonGroup className=\"mr-2\" aria-label=\"Load\">\n                      <Button disabled={!sessions || sessions.length === 0}\n                        onClick={this.handleLoad}>Load last game</Button>\n                    </ButtonGroup>\n                  </ButtonToolbar>\n                </Col>\n              </Row>\n            </Container>\n          </Jumbotron>\n          <p>Your goal is to route safely the planes in your area.</p>\n          <p>You need to:</p>\n          <ul>\n            <li>take off planes waiting at runways</li>\n            <li>land the planes at destination runways</li>\n            <li>fly the planes via the leaving beacons at altitude\n\t\t\t\tof 36000 feet.</li>\n          </ul>\n          <p>You must avoid:</p>\n          <ul>\n            <li>planes collinsion, the collision happend when\n            the distance between two planes are lower then 4 nautic miles and\n\t\t\t\tthe altitude difference is lower then 1000 feet</li>\n            <li>leaving to a wrong beacons</li>\n            <li>landing to a wrong runway</li>\n          </ul>\n          <p>You can zoom the map using the mouse wheel and shift key or move the map by dragging it with the left mouse button</p>\n          <p>A click with the center mouse button fits the map to the viewport.</p>\n        </Container>\n      </Container >\n    );\n  }\n}\n\nexport default Home;\n","import React, { FunctionComponent, Component } from 'react';\nimport { Button, ButtonGroup, Card, Col, Container, Row } from 'react-bootstrap';\nimport _ from 'lodash';\nimport { Flight, FlightStatus } from './Flight';\nimport { AreaMap, MapNodeType } from './Map';\nimport { buildClimbCommand, buildDescendCommand, buildFlyToCommand, buildHoldCommand, buildLandCommand, buildMaintainCommand, buildTakeoffCommand, CommandMessage } from './Message';\nimport { Session } from './Session';\n\nenum SelectionStatus {\n    FlightId = \"flight-id\",\n    Command = \"command\",\n    FlightLevel = \"flight-level\",\n    Turn = \"turn\",\n    TurnCondition = \"turn-condition\",\n    LandingRunway = \"landing-runway\",\n    HoldingCondition = \"holding-condition\"\n}\n\nconst FlightLveles = ['040', '080', '120', '160', '200', '240', '280', '320', '360'];\n\n/**\n * \n * @param param0 \n */\nconst CommandSelection: FunctionComponent<Readonly<Partial<{\n    flight: string;\n    onAbort: () => void;\n    onChangeFlightLevel: () => void;\n    onTurnHeading: () => void;\n    onClearToLand: () => void;\n    onClearToTakeoff: () => void;\n    onHold: () => void;\n}>>> = ({ flight, onAbort, onChangeFlightLevel, onTurnHeading, onClearToLand, onHold }) => {\n    return (\n        <Card bg=\"dark\" text=\"white\">\n            <Card.Header>\n                Flight {flight}\n            </Card.Header>\n            <Card.Body>\n                <ButtonGroup vertical>\n                    <Button variant=\"warning\"\n                        onClick={() => { if (!!onAbort) { onAbort() } }}>Abort</Button>\n                    <Button variant=\"secondary\"\n                        onClick={() => { if (!!onChangeFlightLevel) { onChangeFlightLevel() } }}>Change flight level</Button>\n                    <Button variant=\"secondary\"\n                        onClick={() => { if (!!onTurnHeading) { onTurnHeading() } }}>Fly to</Button>\n                    <Button variant=\"secondary\"\n                        onClick={() => { if (!!onClearToLand) { onClearToLand() } }}>Clear to land</Button>\n                    <Button variant=\"secondary\"\n                        onClick={() => { if (!!onHold) { onHold() } }}>Hold</Button>\n                </ButtonGroup>\n            </Card.Body>\n        </Card>\n    );\n}\n\n/**\n * \n * @param flights \n * @param onSelect \n */\nconst FlightSelection: FunctionComponent<Readonly<Partial<{\n    flights: Record<string, Flight>;\n    onSelect: (id: string) => void\n}>>> = ({ flights, onSelect }) => {\n    const ids = flights ? _(flights).keys().sort().value() : [];\n    return (\n        <Card bg=\"dark\" text=\"white\">\n            <Card.Header>Select flight</Card.Header>\n            <Card.Body>\n                <ButtonGroup vertical>\n                    {ids.map(id => (\n                        <Button key={id} variant=\"secondary\"\n                            onClick={() => { if (onSelect) { onSelect(id) } }\n                            }>{id}</Button>\n                    ))}\n                </ButtonGroup>\n            </Card.Body>\n        </Card >\n    );\n}\n\n/**\n * \n * @param param0 \n */\nconst RunwaySelection: FunctionComponent<Readonly<Partial<{\n    flight: string;\n    map: AreaMap;\n    onAbort: () => void;\n    onSelect: (id: string) => void;\n}>>> = ({ flight, map, onAbort, onSelect }) => {\n    const runways = map ? _(map.nodes)\n        .filter({ type: MapNodeType.Runway })\n        .map('id')\n        .sort().value() : [];\n\n    return (\n        <Card bg=\"dark\" text=\"white\">\n            <Card.Header>\n                Flight {flight}<br />\n                clear to land\n            </Card.Header>\n            <Card.Body>\n                <ButtonGroup vertical>\n                    <Button\n                        onClick={() => { if (!!onAbort) { onAbort() } }}\n                        variant=\"warning\">Abort</Button>\n                    {runways.map(id => (\n                        <Button key={id}\n                            onClick={() => { if (!!onSelect) { onSelect(id) } }}\n                            variant=\"secondary\" >{id}</Button>\n                    ))}\n                </ButtonGroup>\n            </Card.Body>\n        </Card >\n    );\n}\n\n/**\n * \n * @param param0 \n */\nconst DestinationSelection: FunctionComponent<Readonly<Partial<{\n    flight: string;\n    map: AreaMap;\n    onAbort: () => void;\n    onSelect: (id: string) => void;\n}>>> = ({ flight, map, onAbort, onSelect }) => {\n    const nodes = map ? _(map.nodes)\n        .filter(node =>\n            node.type === MapNodeType.Entry\n            || node.type === MapNodeType.Beacon)\n        .map('id').sort().value()\n        : [];\n    const numCol1 = Math.ceil((nodes.length + 1) / 2) - 1;\n    const nodes1 = _.take(nodes, numCol1);\n    const nodes2 = _.drop(nodes, numCol1);\n\n    return (\n        <Card bg=\"dark\" text=\"white\">\n            <Card.Header>\n                Flight {flight}<br />\n                turn to\n            </Card.Header>\n            <Card.Body>\n                <Container fluid>\n                    <Row>\n                        <Col>\n                            <ButtonGroup vertical>\n                                <Button\n                                    onClick={() => { if (!!onAbort) { onAbort() } }}\n                                    variant=\"warning\">Abort</Button>\n                                {nodes1.map(id => (\n                                    <Button key={id}\n                                        onClick={() => { if (!!onSelect) { onSelect(id) } }}\n                                        variant=\"secondary\" >{id}</Button>\n                                ))}\n                            </ButtonGroup>\n                        </Col>\n                        <Col>\n                            <ButtonGroup vertical>\n                                {nodes2.map(id => (\n                                    <Button key={id}\n                                        onClick={() => { if (!!onSelect) { onSelect(id) } }}\n                                        variant=\"secondary\" >{id}</Button>\n                                ))}\n                            </ButtonGroup>\n                        </Col>\n                    </Row>\n                </Container>\n            </Card.Body >\n        </Card >\n    );\n}\n\n/**\n * \n * @param param0 \n */\nconst ConditionButtons: FunctionComponent<Readonly<Partial<{\n    map: AreaMap;\n    onAbort: () => void;\n    onSelect: (id?: string) => void\n}>>> = ({ map, onAbort, onSelect }) => {\n    const nodes = map ? _(map.nodes)\n        .filter(node =>\n            node.type === MapNodeType.Entry\n            || node.type === MapNodeType.Beacon)\n        .map('id')\n        .sort().value()\n        : [];\n\n    const numCol1 = Math.ceil((nodes.length + 2) / 2) - 2;\n    const nodes1 = _.take(nodes, numCol1);\n    const nodes2 = _.drop(nodes, numCol1);\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col>\n                    <ButtonGroup vertical>\n                        <Button\n                            onClick={() => { if (!!onAbort) { onAbort() } }}\n                            variant=\"warning\">Abort</Button>\n                        <Button\n                            onClick={() => { if (!!onSelect) { onSelect() } }}\n                            variant=\"primary\">Now</Button>\n                        {nodes1.map(id => (\n                            <Button key={id}\n                                onClick={() => { if (!!onSelect) { onSelect(id) } }}\n                                variant=\"secondary\" >{id}</Button>\n                        ))}\n                    </ButtonGroup>\n                </Col>\n                <Col>\n                    <ButtonGroup vertical>\n                        {nodes2.map(id => (\n                            <Button key={id}\n                                onClick={() => { if (!!onSelect) { onSelect(id) } }}\n                                variant=\"secondary\" >{id}</Button>\n                        ))}\n                    </ButtonGroup>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\n\n/**\n * \n * @param param0 \n */\nconst ConditionSelection: FunctionComponent<Readonly<Partial<{\n    flight: string;\n    node: string;\n    map: AreaMap;\n    onAbort: () => void;\n    onSelect: (id: string | undefined) => void;\n}>>> = ({ flight, node, map, onAbort, onSelect }) => {\n    return (\n        <Card bg=\"dark\" text=\"white\">\n            <Card.Header>\n                Flight {flight}<br />\n                turn to {node}<br />\n                at beacon\n            </Card.Header>\n            <Card.Body>\n                <ConditionButtons\n                    map={map}\n                    onAbort={onAbort}\n                    onSelect={onSelect} />\n            </Card.Body>\n        </Card >\n    );\n}\n\n/**\n * \n * @param param0 \n */\nconst HoldCondition: FunctionComponent<Readonly<Partial<{\n    flight: string;\n    map: AreaMap;\n    onAbort: () => void;\n    onSelect: (id: string | undefined) => void;\n}>>> = ({ flight, map, onAbort, onSelect }) => {\n    return (\n        <Card bg=\"dark\" text=\"white\">\n            <Card.Header>\n                Flight {flight}<br />\n                hold on at\n            </Card.Header>\n            <Card.Body>\n                <ConditionButtons\n                    map={map}\n                    onAbort={onAbort}\n                    onSelect={onSelect} />\n            </Card.Body>\n        </Card >\n    );\n}\n\n/**\n * \n * @param param0 \n */\nconst FlightLevelSelection: FunctionComponent<Readonly<Partial<{\n    flight: string,\n    onAbort: () => void,\n    onSelect: (fl: string) => void\n}>>> = ({ flight, onAbort, onSelect }) => {\n    const flightLevels = _(FlightLveles).orderBy(_.identity, 'desc').value();\n    return (\n        <Card bg=\"dark\" text=\"white\">\n            <Card.Header>\n                Flight {flight}<br />\n                change flight level\n                </Card.Header>\n            <Card.Body>\n                <ButtonGroup vertical>\n                    <Button variant=\"warning\"\n                        onClick={() => { if (!!onAbort) { onAbort() } }}>Abort</Button>\n                    {flightLevels.map(fl => (\n                        <Button key={fl} variant=\"secondary\"\n                            className={`fl-${fl}`}\n                            onClick={() => { if (!!onSelect) { onSelect(fl) } }}> FL {fl}</Button>\n                    ))}\n                </ButtonGroup>\n            </Card.Body>\n        </Card >\n    );\n}\n\n/**\n * \n */\ntype CommandPaneProps = Readonly<Partial<{\n    session: Session;\n    map: AreaMap;\n    onCommand: (cmd: CommandMessage) => void\n}>>;\n\n/**\n * \n */\nexport class CommandPane extends Component<CommandPaneProps, Readonly<{\n    type: SelectionStatus;\n    flight?: string;\n    node?: string;\n}>> {\n\n    /**\n     * \n     * @param props \n     */\n    constructor(props: CommandPaneProps) {\n        super(props);\n        this.state = { type: SelectionStatus.FlightId };\n        _.bindAll(this, [\n            'handleFlightSelection',\n            'handleAbort',\n            'handleChangeFlightLevel',\n            'handleFlightLevelSelect',\n            'handleTurnHeading',\n            'handleTurnHeadingSelect',\n            'handleTurnConditionSelect',\n            'handleClearToLand',\n            'handleRunwaySelect',\n            'handleHold',\n            'handleHoldConditionSelect'\n        ]);\n    }\n\n    /**\n     * \n     * @param flight \n     */\n    handleFlightSelection(flight: string) {\n        this.setState({ flight, type: SelectionStatus.Command });\n    }\n\n    /**\n     * \n     */\n    handleAbort() {\n        this.setState({ type: SelectionStatus.FlightId });\n    }\n\n    /**\n     * \n     */\n    handleChangeFlightLevel() {\n        this.setState({ type: SelectionStatus.FlightLevel });\n    }\n\n    /**\n     * \n     * @param fl \n     */\n    handleFlightLevelSelect(fl: string) {\n        const toAlt = parseInt(fl) * 100;\n        const { flight: flightId } = this.state;\n        const { session, onCommand } = this.props;\n        const mapId = this.mapId;\n        if (onCommand && flightId && session && mapId) {\n            const flight = session.flights[flightId];\n            if (!flight) {\n                onCommand(buildClimbCommand(flightId, mapId, fl));\n            } else if (flight.status === FlightStatus.WaitingForTakeoff) {\n                onCommand(buildTakeoffCommand(flightId, mapId, flight.from, fl));\n            } else if (toAlt > flight.alt) {\n                onCommand(buildClimbCommand(flightId, mapId, fl));\n            } else if (toAlt < flight.alt) {\n                onCommand(buildDescendCommand(flightId, mapId, fl));\n            } else {\n                onCommand(buildMaintainCommand(flightId, mapId, fl));\n            }\n        }\n        this.setState({ type: SelectionStatus.FlightId });\n    }\n\n    /** */\n    handleTurnHeading() {\n        this.setState({ type: SelectionStatus.Turn });\n    }\n\n    /**\n     * \n     * @param node \n     */\n    handleTurnHeadingSelect(node: string) {\n        this.setState({ node, type: SelectionStatus.TurnCondition });\n    }\n\n    get mapId() { return this.props.map ? this.props.map.id : undefined; }\n    /**\n     * \n     * @param when \n     */\n    handleTurnConditionSelect(when?: string) {\n        const { flight, node } = this.state;\n        const { onCommand } = this.props;\n        const mapId = this.mapId;\n        if (mapId && onCommand && node && flight) {\n            onCommand(\n                buildFlyToCommand(flight, mapId, node, when)\n            );\n        }\n        this.setState({ type: SelectionStatus.FlightId });\n    }\n\n    /** */\n    handleClearToLand() {\n        this.setState({ type: SelectionStatus.LandingRunway });\n    }\n\n    /**\n     * \n     * @param node \n     */\n    handleRunwaySelect(node: string) {\n        const { flight } = this.state;\n        const { onCommand } = this.props;\n        const mapId = this.mapId;\n        if (onCommand && mapId && flight) {\n            onCommand(\n                buildLandCommand(flight, mapId, node)\n            );\n        }\n        this.setState({ type: SelectionStatus.FlightId });\n    }\n\n    /** */\n    handleHold() {\n        this.setState({ type: SelectionStatus.HoldingCondition });\n    }\n\n    /**\n     * \n     * @param when \n     */\n    handleHoldConditionSelect(when?: string) {\n        const { flight } = this.state;\n        const { onCommand } = this.props;\n        const mapId = this.mapId;\n        if (onCommand && flight && mapId) {\n            onCommand(\n                buildHoldCommand(flight, mapId, when)\n            );\n        }\n        this.setState({ type: SelectionStatus.FlightId });\n    }\n\n    /**\n     * \n     */\n    render() {\n        const { session, map } = this.props;\n        const flights = session ? session.flights : undefined;\n        const { type, flight, node } = this.state;\n        switch (type) {\n            case SelectionStatus.Command:\n                return (<CommandSelection onAbort={this.handleAbort}\n                    onChangeFlightLevel={this.handleChangeFlightLevel}\n                    onTurnHeading={this.handleTurnHeading}\n                    onClearToLand={this.handleClearToLand}\n                    onHold={this.handleHold}\n                    flight={flight} />);\n            case SelectionStatus.FlightLevel:\n                return (<FlightLevelSelection\n                    flight={flight}\n                    onAbort={this.handleAbort}\n                    onSelect={this.handleFlightLevelSelect} />);\n            case SelectionStatus.TurnCondition:\n                return (<ConditionSelection map={map}\n                    flight={flight}\n                    node={node}\n                    onAbort={this.handleAbort}\n                    onSelect={this.handleTurnConditionSelect} />);\n            case SelectionStatus.Turn:\n                return (<DestinationSelection map={map}\n                    flight={flight}\n                    onAbort={this.handleAbort}\n                    onSelect={this.handleTurnHeadingSelect} />);\n            case SelectionStatus.LandingRunway:\n                return (<RunwaySelection map={map}\n                    flight={flight}\n                    onAbort={this.handleAbort}\n                    onSelect={this.handleRunwaySelect} />);\n            case SelectionStatus.HoldingCondition:\n                return (<HoldCondition map={map}\n                    flight={flight}\n                    onAbort={this.handleAbort}\n                    onSelect={this.handleHoldConditionSelect} />);\n            default:\n                return (<FlightSelection flights={flights} onSelect={this.handleFlightSelection} />);\n        }\n    }\n}\n","import _ from 'lodash';\nimport { AreaMap } from './Map';\nimport { anyTagMsgOp, Message, MessageTag, notMsgOp } from './Message';\nimport { Session } from './Session';\n\nexport enum Style {\n    ATC = 'atc',\n    Flight = 'flight',\n    Error = 'error'\n}\n\nexport type MessageText = Readonly<{\n    style: Style;\n    text: string;\n}>;\n\nconst isFromFlight = anyTagMsgOp(MessageTag.FlightReport, MessageTag.Negative, MessageTag.Readback);\nconst isFromAtc = notMsgOp(isFromFlight);\n\nconst TextBuilderPattern: Readonly<Record<string, Readonly<{\n    style: Style,\n    templ: string\n}>>> = {\n    'flight-report.ready-to-departure-to': {\n        style: Style.Flight,\n        templ: '$atc, $from, holding short runway $rwy ready for departure to runway $dest'\n    },\n    'flight-report.ready-to-departure-leave': {\n        style: Style.Flight,\n        templ: '$atc, $from, holding short runway $rwy ready for departure via $dest'\n    },\n    'flight-report.enter-to': {\n        style: Style.Flight,\n        templ: '$atc, $from, enter control zone via $via to runway $dest'\n    },\n    'flight-report.enter-leave': {\n        style: Style.Flight,\n        templ: '$atc, $from, enter control zone via $via leave $dest'\n    },\n    'flight-report.passing-flight-level': {\n        style: Style.Flight,\n        templ: '$atc, $from, passing FL$flightLevel'\n    },\n    'flight-report.flying-to': {\n        style: Style.Flight,\n        templ: '$atc, $from, flying to $dest'\n    },\n    'flight-report.runway-vacated': {\n        style: Style.Flight,\n        templ: '$atc, $from, runway $rwy vacated'\n    },\n    'flight-report.wrong-runway-vacated': {\n        style: Style.Flight,\n        templ: '$atc, $from, runway $rwy vacated, wrong arrival'\n    },\n    'flight-report.going-around-missing-approach': {\n        style: Style.Flight,\n        templ: '$atc, $from, going around missing approach'\n    },\n    'flight-report.going-around-missing-runway': {\n        style: Style.Flight,\n        templ: '$atc, $from, going around missing runway'\n    },\n    'flight-report.leaving': {\n        style: Style.Flight,\n        templ: '$atc, $from, leaving controlled zone via $dest'\n    },\n    'flight-report.leaving-missing-departure': {\n        style: Style.Flight,\n        templ: '$atc, $from, leaving controlled zone via $dest, missing departure'\n    },\n    'flight-report.leaving-out-of-area': {\n        style: Style.Flight,\n        templ: '$atc, $from, leaving controlled zone, missing departure'\n    },\n    'flight-report.collision': {\n        style: Style.Flight,\n        templ: '$atc, $from, mayday, mayday, mayday, collision'\n    },\n    'command.climb': {\n        style: Style.ATC,\n        templ: '$to, $atc, climb to FL$flightLevel'\n    },\n    'readback.climb': {\n        style: Style.Flight,\n        templ: 'climbing to FL$flightLevel, $from'\n    },\n    'command.descend': {\n        style: Style.ATC,\n        templ: '$to, $atc, descend to FL$flightLevel'\n    },\n    'readback.descend': {\n        style: Style.Flight,\n        templ: 'descending to FL$flightLevel, $from'\n    },\n    'command.maintain': {\n        style: Style.ATC,\n        templ: '$to, $atc, maintain FL$flightLevel'\n    },\n    'readback.maintain': {\n        style: Style.Flight,\n        templ: 'maintaining FL$flightLevel, $from'\n    },\n    'command.cleared-to-takeoff': {\n        style: Style.ATC,\n        templ: '$to, $atc, runway $rwy cleared to takeoff, climb to FL$flightLevel'\n    },\n    'readback.cleared-to-takeoff': {\n        style: Style.Flight,\n        templ: 'runway $rwy cleared to takeoff, climbing to FL$flightLevel, $from'\n    },\n    'command.fly-to': {\n        style: Style.ATC,\n        templ: '$to, $atc, fly to $turnTo'\n    },\n    'readback.fly-to': {\n        style: Style.Flight,\n        templ: 'flying to $turnTo, $from'\n    },\n    'command.fly-to-via': {\n        style: Style.ATC,\n        templ: '$to, $atc, fly to $turnTo via $via'\n    },\n    'readback.fly-to-via': {\n        style: Style.Flight,\n        templ: 'flying to $turnTo via $via, $from'\n    },\n    'command.cleared-to-land': {\n        style: Style.ATC,\n        templ: '$to, $atc, cleared to land runway $rwy'\n    },\n    'readback.cleared-to-land': {\n        style: Style.Flight,\n        templ: 'cleared to land runway $rwy, $from'\n    },\n    'command.hold-short': {\n        style: Style.ATC,\n        templ: '$to, $atc, hold short runway $at'\n    },\n    'readback.hold-short': {\n        style: Style.Flight,\n        templ: 'holding short runway $at, $from'\n    },\n    'command.hold-current-position': {\n        style: Style.ATC,\n        templ: '$to, $atc, hold at current position'\n    },\n    'readback.hold-current-position': {\n        style: Style.Flight,\n        templ: 'holding at current position, $from'\n    },\n    'command.hold-at': {\n        style: Style.ATC,\n        templ: '$to, $atc, hold at $at'\n    },\n    'readback.hold-at': {\n        style: Style.Flight,\n        templ: 'holding at $at, $from'\n    },\n    'negative.flight-at-ground': {\n        style: Style.Flight,\n        templ: '$atc, $from, negative, holding short runway $id'\n    },\n    'negative.runway-too-distant': {\n        style: Style.Flight,\n        templ: '$atc, $from, negative, wrong distance'\n    },\n    'negative.flight-too-high': {\n        style: Style.Flight,\n        templ: '$atc, $from, negative, wrong flight level'\n    },\n    'negative.atc-not-found': {\n        style: Style.Flight,\n        templ: '$atc, $from, negative, ATC not in area'\n    },\n    'negative.beacon-not-found': {\n        style: Style.Flight,\n        templ: '$atc, $from, negative, $id not in area'\n    },\n    'negative.flight-not-at-ground': {\n        style: Style.Flight,\n        templ: '$atc, $from, negative, not holding short runway $id'\n    },\n    'negative.invalid-flight-level': {\n        style: Style.Flight,\n        templ: '$atc, $from, negative, invalid FL$id'\n    },\n    'negative.invalid-runway': {\n        style: Style.Flight,\n        templ: '$atc, $from, negative, invalid runway $id'\n    },\n    'negative.runway-not-found': {\n        style: Style.Flight,\n        templ: '$atc, $from, negative, runway $id not in area'\n    },\n    'error.flight-not-found': {\n        style: Style.Error,\n        templ: 'operator, flight $to not in area'\n    },\n    'confirmation.cleared-to': {\n        style: Style.ATC,\n        templ: '$to, $atc, cleared to $dest'\n    },\n    'confirmation.cleared-to-leave': {\n        style: Style.ATC,\n        templ: '$to, $atc, cleared to leave via $dest'\n    },\n    'confirmation.good-day': {\n        style: Style.ATC,\n        templ: '$to, $atc, good day'\n    },\n    'confirmation.roger': {\n        style: Style.ATC,\n        templ: '$to, $atc, roger'\n    },\n    'error.unintelligible': {\n        style: Style.Error,\n        templ: 'unintelligeble $speech, $errCode'\n    }\n};\nconst AudioBuilderPattern: Record<string, string> = {\n    'flight-report.ready-to-departure-to': '$fromVoice $atc $from holding short runway $rwy ready for departure to runway $dest',\n    'flight-report.ready-to-departure-leave': '$fromVoice $atc $from holding short runway $rwy ready for departure via $dest',\n    'flight-report.enter-to': '$fromVoice $atc $from enter control zone via $via to runway $dest',\n    'flight-report.enter-leave': '$fromVoice $atc $from enter control zone via $via leave $dest',\n    'flight-report.passing-flight-level': '$fromVoice $atc $from passing flight level $flightLevel',\n    'flight-report.flying-to': '$fromVoice $atc $from flying to $dest',\n    'flight-report.runway-vacated': '$fromVoice $atc $from runway $rwy vacated',\n    'flight-report.wrong-runway-vacated': '$fromVoice $atc $from runway $rwy vacated wrong arrival',\n    'flight-report.going-around-missing-approach': '$fromVoice $atc $from going around missing approach',\n    'flight-report.going-around-missing-runway': '$fromVoice $atc $from going around missing runway',\n    'flight-report.leaving': '$fromVoice $atc $from leaving controlled zone via $dest',\n    'flight-report.leaving-missing-departure': '$fromVoice $atc $from leaving controlled zone via $dest missing departure',\n    'flight-report.leaving-out-of-area': '$fromVoice $atc $from leaving controlled zone missing departure',\n    'flight-report.collision': '$fromVoice $atc $from mayday mayday mayday collision',\n    'command.climb': '$fromVoice $to $atc climb to flight level $flightLevel',\n    'readback.climb': '$fromVoice climbing to flight level $flightLevel $from',\n    'command.descend': '$fromVoice $to $atc descend to flight level $flightLevel',\n    'readback.descend': '$fromVoice descending to flight level $flightLevel $from',\n    'command.maintain': '$fromVoice $to $atc maintain flight level $flightLevel',\n    'readback.maintain': '$fromVoice maintaining flight level $flightLevel $from',\n    'command.cleared-to-takeoff': '$fromVoice $to $atc runway $rwy cleared to takeoff climb to flight level $flightLevel',\n    'readback.cleared-to-takeoff': '$fromVoice runway $rwy cleared to takeoff climbing to flight level $flightLevel $from',\n    'command.fly-to': '$fromVoice $to $atc fly to $turnTo',\n    'readback.fly-to': '$fromVoice flying to $turnTo $from',\n    'command.fly-to-via': '$fromVoice $to $atc fly to $turnTo via $via',\n    'readback.fly-to-via': '$fromVoice flying to $turnTo via $via $from',\n    'command.cleared-to-land': '$fromVoice $to $atc cleared to land runway $rwy',\n    'readback.cleared-to-land': '$fromVoice cleared to land runway $rwy $from',\n    'command.hold-short': '$fromVoice $to $atc hold short runway $at',\n    'readback.hold-short': '$fromVoice holding short runway $at $from',\n    'command.hold-current-position': '$fromVoice $to $atc hold at current position',\n    'readback.hold-current-position': '$fromVoice holding at current position $from',\n    'command.hold-at': '$fromVoice $to $atc hold at $at',\n    'readback.hold-at': '$fromVoice holding at $at $from',\n    'negative.flight-at-ground': '$fromVoice $atc $from negative holding short runway $id',\n    'negative.runway-too-distant': '$fromVoice $atc $from negative wrong distance',\n    'negative.flight-too-high': '$fromVoice $atc $from negative wrong flight level',\n    'negative.atc-not-found': '$fromVoice $to $from negative ATC not in area',\n    'negative.beacon-not-found': '$fromVoice $atc $from negative $id not in area',\n    'negative.flight-not-at-ground': '$fromVoice $atc $from negative not holding short runway $id',\n    'negative.invalid-flight-level': '$fromVoice $atc $from negative invalid flight level $flId',\n    'negative.invalid-runway': '$fromVoice $atc $from negative invalid runway $id',\n    'negative.runway-not-found': '$fromVoice $atc $from negative runway $id not in area',\n    'error.flight-not-found': '$fromVoice operator flight $to not in area',\n    'confirmation.cleared-to': '$fromVoice $to $atc cleared to $dest',\n    'confirmation.cleared-to-leave': '$fromVoice $to $atc cleared to leave via $dest',\n    'confirmation.good-day': '$fromVoice $to $atc good day',\n    'confirmation.roger': '$fromVoice $to $atc roger',\n    'error.unintelligible': '$atcVoice unintelligeble $speech, $errCode'\n};\n\nconst TokenRegex = /^(\\w+)(.*)/;\n\nabstract class Builder<T> {\n    private _message: Message;\n    private _map: AreaMap;\n\n    /**\n     * \n     * @param message \n     * @param map \n     */\n    constructor(message: Message, map: AreaMap) {\n        this._message = message;\n        this._map = map;\n        _.bindAll(this);\n    }\n\n    /** */\n    get map(): AreaMap { return this._map; }\n\n    /** */\n    get message(): Message { return this._message; }\n\n    /** */\n    abstract build(): T\n\n    /**\n     * \n     * @param templ \n     */\n    applyTemplate(templ: string): string {\n        const sections = templ.split('$');\n        const prefixes = _(sections).drop(1);\n        const prefixSplits = prefixes.flatMap(prefix => {\n            const m = prefix.match(TokenRegex);\n            if (m) {\n                return ['$' + m[1], m[2]];\n            } else {\n                return ['$', prefix];\n            }\n        }).value();\n        const tokens = _.concat(sections[0], prefixSplits);\n        const values = _.map(tokens, tok => {\n            if (tok === '$' || !tok.startsWith('$')) {\n                return tok\n            } else {\n                const fnId = tok.substring(1);\n                const fn = (this as any)[fnId];\n                if (!fn) {\n                    return tok;\n                }\n                const value = (fn as () => string).apply(this);\n                return value ? value : tok;\n            }\n        });\n        return values.join('');\n    }\n\n    key(): string {\n        const type = this.message.tags[0];\n        const msg = this.message as any;\n        const subtype = msg.cmd || msg.report || msg.error || msg.confirmation;\n        return [type, subtype].join('.');\n    }\n\n    atc(): string {\n        const id = isFromAtc(this.message) ? this.message.from : this.message.to\n        return !id ? '?' : this.map.id === id ? this.map.name : id;\n    }\n\n    /** */\n    at(): string {\n        const at = (this.message as any).at;\n        return !at ? '?' : at;\n    }\n\n    /** */\n    to(): string {\n        const to = this.message.to;\n        return !to ? '?' : to;\n    }\n\n    /** */\n    from(): string {\n        const from = this.message.from;\n        return !from ? '?' : from;\n    }\n\n    dest(): string {\n        const msg = this.message as any;\n        return msg.dest !== undefined ? msg.dest : '?';\n    }\n\n    via(): string {\n        const msg = this.message as any;\n        return msg.via !== undefined ? msg.via : '?';\n    }\n\n    rwy(): string {\n        const msg = this.message as any;\n        return msg.rwy !== undefined ? msg.rwy : '?';\n    }\n\n    flightLevel(): string {\n        const msg = this.message as any;\n        return msg.flightLevel !== undefined ? msg.flightLevel : '?';\n    }\n\n    turnTo(): string {\n        const msg = this.message as any;\n        return msg.turnTo !== undefined ? msg.turnTo : '?';\n    }\n\n    id(): string {\n        const id = (this.message as any).id;\n        return id !== undefined ? id : '?';\n    }\n\n    speech() {\n        const speech = (this.message as any).speech;\n        return speech !== undefined ? speech : '?';\n    }\n\n    errCode() {\n        const errCode = (this.message as any).parserError;\n        return errCode !== undefined ? errCode : '?';\n    }\n}\n\nconst SpellingWords: Record<string, string> = Object.freeze({\n    a: 'alpha',\n    b: 'bravo',\n    c: 'charlie',\n    d: 'delta',\n    e: 'echo',\n    f: 'fox trot',\n    g: 'golf',\n    h: 'hotel',\n    i: 'india',\n    j: 'juliet',\n    k: 'kilo',\n    l: 'lima',\n    m: 'mike',\n    n: 'november',\n    o: 'oscar',\n    p: 'papa',\n    q: 'quebeck',\n    r: 'romeo',\n    s: 'sierra',\n    t: 'tango',\n    u: 'uniform',\n    v: 'victor',\n    x: 'x-ray',\n    w: 'whiskey',\n    y: 'yenkee',\n    z: 'zulu',\n    '0': 'zero',\n    '1': 'one',\n    '2': 'two',\n    '3': 'three',\n    '4': 'four',\n    '5': 'five',\n    '6': 'six',\n    '7': 'seven',\n    '8': 'eight',\n    '9': 'niner'\n});\n\nconst RunwaySuffix: Record<string, string> = Object.freeze({\n    r: 'right',\n    c: 'center',\n    l: 'left'\n});\n\n/**\n * \n * @param word \n */\nfunction spell(word: string): string {\n    const x = word.toLowerCase();\n    const z = _(x).map(a => {\n        const sp = SpellingWords[a];\n        return sp !== undefined ? sp : a;\n    }).join(' ');\n    return z;\n}\n\n\n/**\n * \n * @param {id} id \n */\nfunction spellId(id: string): string {\n    const m = /^(\\d.)(r|l|c)?/g.exec(id.toLowerCase());\n    if (m && m.length === 3) {\n        return !!m[2]\n            ? `${spell(m[1])} ${RunwaySuffix[m[2]]}`\n            : `${spell(m[1])}`\n\n    } else {\n        return spell(id);\n    }\n}\n\n\nexport class TextBuilder extends Builder<MessageText> {\n    constructor(message: Message, map: AreaMap) {\n        super(message, map);\n        _.bindAll(this);\n    }\n\n    build(): MessageText {\n        const pattern = TextBuilderPattern[this.key()];\n        if (pattern) {\n            const style = pattern.style;\n            const text = this.applyTemplate(pattern.templ);\n            return { style, text };\n        } else {\n            return { style: Style.Error, text: this.key() };\n        }\n    }\n}\n\n/** */\nexport class AudioBuilder extends Builder<string> {\n    private _session: Session;\n\n    constructor(message: Message, map: AreaMap, session: Session) {\n        super(message, map);\n        this._session = session;\n        _.bindAll(this);\n    }\n\n    get session() { return this._session; }\n\n\n    build(): string {\n        const pattern = AudioBuilderPattern[this.key()];\n        return pattern\n            ? this.applyTemplate(pattern)\n            : this.key();\n    }\n\n    atcVoice() {\n        return this.session.atcVoice;\n    }\n\n    fromVoice(): string {\n        const from = super.from();\n        if (this.map.id === from) {\n            return this.session.atcVoice || '?';\n        }\n        const flight = this.session.flights[from];\n        return (flight ? (flight.voice || this.session.atcVoice)\n            : this.session.atcVoice) || '?';\n    }\n\n    from(): string { return spellId(super.from()); }\n\n    to(): string { return spellId(super.to()); }\n\n    dest(): string { return spellId(super.dest()); }\n\n    rwy(): string { return spellId(super.rwy()); }\n\n    via(): string { return spellId(super.via()); }\n\n    turnTo(): string { return spellId(super.turnTo()); }\n\n    flightLevel(): string { return spell(super.flightLevel()); }\n\n    id(): string { return spellId(super.id()); }\n\n    at(): string { return spellId(super.at()); }\n\n    flId(): string { return spell(super.id()); }\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport '../App.css';\nimport { MessageText, Style } from './MessageConverters';\nimport { toast } from 'react-toastify';\n\n/**\n * \n */\nexport class CockpitLogger {\n    private _log: MessageText[];\n    readonly maxMessages: number;\n\n    constructor(maxMessages: number = 10) {\n        this._log = [];\n        this.maxMessages = maxMessages;\n        _.bindAll(this, ['putMessages']);\n    }\n\n    /**\n     * \n     */\n    get log(): MessageText[] { return this._log; }\n\n    /**\n     * \n     */\n    putMessages(messages: MessageText[]): CockpitLogger {\n        this._log = _(this.log).concat(messages).takeRight(this.maxMessages).value();\n        messages.forEach(msg => {\n            switch (msg.style) {\n                case Style.ATC:\n                    toast.dark(\n                        <div className=\"bg-light text-success border-success border rounded p-2\">\n                            {msg.text}\n                        </div>\n                    );\n                    break;\n                case Style.Error:\n                    toast.dark(\n                        <div className=\"bg-light text-danger border-danger border rounded p-2\">\n                            {msg.text}\n                        </div>\n                    );\n                    break;\n                default:\n                    toast.dark(\n                        <div className=\"bg-light text-dark border-light border rounded p-2\">\n                            {msg.text}\n                        </div>\n                    );\n                    break;\n            }\n        });\n        return this;\n    }\n}\n\n/**\n * \n */\nexport function cockpitLogger(): CockpitLogger {\n    return new CockpitLogger();\n}\n","import { fromJS, Map } from 'immutable';\nimport { mapDao } from './MapDao';\nimport _ from 'lodash';\nimport {\n    Message, Command,\n    CommandMessage, FlightLevelCommandMessage, HoldAtCommandMessage, FlyToCommandMessage, TakeoffCommandMessage, LandCommandMessage,\n    buildReadbackMessage, buildInvalidFlightLevelMessage, buildBeaconNotFoundMessage,\n    buildAtGroundMessage, buildNotAtGroundMessage, buildRunwayNotFoundMessage,\n    buildATCNotFoundMessage, buildInvalidRunwayMessage, buildMissingRunwayMessage, buildMissingApproachMessage,\n    buildPassingFlightLevelMessage, buildTooDistanthMessage, buildTooHighMessage,\n    buildFlyingToMessage,\n    buildRogerMessage,\n    buildClimbCommand,\n    buildClearedToMessage\n} from './Message';\nimport { AreaMap, GeoLocation, isRunway, isEntryNode } from './Map';\nimport { Flight, FlightStatus, FlightType } from './Flight';\nimport { Level } from './Level';\nimport { sprintf } from 'sprintf-js';\n\nconst MIN_ALTITUDE = 4000;\nconst MAX_ALTITUDE = 36000;\nconst ALTITUDE_SEPARATION = 4000;\nconst TURNING_SPEED = 3; // DEG / s\nconst SECS_PER_HOUR = 3600;\nconst MINS_PER_SEC = 1.0 / 60;\nconst FEET_PER_NM = 1852 / 0.3048;\nconst RADS_PER_DEG = Math.PI / 180;\nconst RADIUS_PER_KNOTS = 1 / 60 / Math.PI;\nconst VALIDATION_PROPS = ['hdg', 'speed', 'lat', 'lon', 'alt'];\n\nexport interface FlightTemplate {\n    readonly speed0: number;    // knot\n    readonly speed360: number;  // knot\n    readonly vspeed: number;    // ftpm\n}\n\nexport interface SimulationOptions {\n    readonly dt: number;                // sec\n    readonly jetProb: number;\n    readonly safeEntryDelay: number;    // sec\n    readonly entryAlt: number;          // feet\n    readonly exitAlt: number;           // feet\n    readonly collisionDistance: number; // nms\n    readonly collisionAlt: number;      // feet\n    readonly om: number;                // nms\n    readonly mm: number;                // nms (5469')\n    readonly clearToLandDistance: number;   // nms\n    readonly exitDistance: number;      // nms\n    readonly landingHdgRange: number;   // DEG\n    readonly landingAngle: number;      // DEG\n    readonly conditionDistance: number; // nms\n    readonly holdingDuration: number,   // sec\n    readonly goAroundAlt: number,       // feet\n    readonly flightTempl: Record<FlightType, FlightTemplate>;\n    readonly flightVoices: string[];\n}\n\nexport interface SimulationProps extends SimulationOptions {\n    readonly map: AreaMap;\n    readonly level: Level;\n}\n\n/**\n * \n * @param alt \n * @param template \n */\nfunction speedByAlt(alt: number, template: FlightTemplate): number {\n    return Math.round(alt / 36000 * (template.speed360 - template.speed0) + template.speed0);\n}\n\nexport type Modifier = (flight: Map<string, any>) => Map<string, any>;\n\n/**\n * \n * @param key \n * @param value \n */\nexport const setMod: <T>(key: string, value: T) => Modifier =\n    (key, value) => (flight: Map<string, any>) => flight.set(key, value);\n\n/**\n * \n * @param key \n */\nexport const deleteMod: (key: string) => Modifier =\n    (key) => (flight: Map<string, any>) => flight.delete(key);\n\n/**\n * \n * @param key \n * @param updater \n */\nexport const updateMod: <T>(key: string, updater: (value: T) => T) => Modifier =\n    (key, updater) => (flight: Map<string, any>) => flight.update(key, updater);\n\n/**\n * \n * @param loc \n */\nexport const setLocationMod: (loc: GeoLocation) => Modifier =\n    (loc) => (flight: Map<string, any>) => flight.set('lat', loc.lat).set('lon', loc.lon)\n\ninterface Junction {\n    /** Entry point */\n    readonly entry: GeoLocation;\n    /** Pivot */\n    readonly pivot: GeoLocation;\n    /** sigma */\n    readonly sigma: number;\n    /** true if right junction */\n    readonly right: boolean;\n}\n\n/**\n * \n */\nexport class FlightProcessor {\n    private _flight: Flight;\n    private _messages: Message[];\n    private _props: SimulationProps;\n\n    /**\n     * \n     * @param flight \n     * @param props \n     * @param messages \n     */\n    constructor(flight: Flight, props: SimulationProps, messages: Message[] = []) {\n        this._flight = flight;\n        this._messages = messages;\n        this._props = props;\n        _.bindAll(this);\n    }\n\n    /** */\n    get messages() { return this._messages; }\n\n    /** */\n    get props() { return this._props; }\n\n    /** Returns the JSON flight */\n    get flight() { return this._flight; }\n\n    /** */\n    get map() { return this.props.map; }\n\n    /** */\n    private addFlyingToDialog(): FlightProcessor {\n        const { at } = this.flight;\n        if (!at) {\n            throw new Error('missing at');\n        }\n        return this.addMessage([\n            buildFlyingToMessage(this.flight, this.map.id),\n            buildClearedToMessage(this.map.id, this.flight.id, at)\n        ]);\n    }\n\n    /** */\n    private addMissingApproachDialog(): FlightProcessor {\n        const fl = sprintf('%03d', Math.round(this.flight.toAlt / 100));\n        const climbMsg = buildClimbCommand(this.flight.id, this.map.id, fl);\n        return this.addMessage([\n            buildMissingApproachMessage(this.flight.id, this.map.id, fl),\n            climbMsg,\n            buildReadbackMessage(climbMsg)\n        ]);\n    }\n\n    /** */\n    private addMissingRunwayDialog(): FlightProcessor {\n        const fl = sprintf('%03d', Math.round(this.flight.toAlt / 100));\n        const climbMsg = buildClimbCommand(this.flight.id, this.map.id, fl);\n        return this.addMessage([\n            buildMissingRunwayMessage(this.flight.id, this.map.id, fl),\n            climbMsg,\n            buildReadbackMessage(climbMsg)\n        ]);\n    }\n\n    /** */\n    private addPassingFlightLevelDialog(): FlightProcessor {\n        return this.addMessage([\n            buildPassingFlightLevelMessage(this.flight.id, this.map.id, this.flight.alt),\n            buildRogerMessage(this.map.id, this.flight.id)\n        ]);\n    }\n\n    /**\n     * \n     */\n    vspeed(): number {\n        return this.props.flightTempl[this.flight.type].vspeed;\n    }\n\n    /**\n     * Returns the landing altitude in feet\n     * @param distance the distance nms or undefined if from flight location\n     */\n    landingAlt(distance?: number): number {\n        const { landingAngle, map } = this.props;\n        if (!distance) {\n            const { rwy } = this.flight;\n            if (!rwy) {\n                throw new Error('missing runway');\n            }\n            const d = mapDao.distance(map.nodes[rwy], this.flight);\n            return Math.round(d * Math.tan(landingAngle * RADS_PER_DEG) * FEET_PER_NM);\n        } else {\n            return Math.round(distance * Math.tan(landingAngle * RADS_PER_DEG) * FEET_PER_NM);\n        }\n    }\n\n    /**\n     * Returns the outermarker alt\n     */\n    outerMarkerAlt(): number {\n        return this.landingAlt(this.props.om);\n    }\n\n    /**\n     * \n     * @param rwyId \n     */\n    outerMarker(rwyId?: string): GeoLocation {\n        rwyId = rwyId || this.flight.rwy || '';\n        if (!rwyId) {\n            throw new Error('missing runway');\n        }\n        const { om, map } = this.props;\n        const rwy = map.nodes[rwyId];\n        if (!isRunway(rwy)) {\n            throw new Error('not a runway');\n        }\n        return mapDao.radial(rwy, rwy.hdg + 180, om);\n    }\n\n    /**\n     * \n     * @param rwyId \n     */\n    midleMarker(rwyId?: string): GeoLocation {\n        rwyId = rwyId || this.flight.rwy;\n        if (!rwyId) {\n            throw new Error('missing runway');\n        }\n        const { mm, map } = this.props;\n        const rwy = map.nodes[rwyId];\n        if (!isRunway(rwy)) {\n            throw new Error('not a runway');\n        }\n        return mapDao.radial(rwy, rwy.hdg + 180, mm);\n    }\n\n    /**\n     * Returns the distance to runway via om in nms\n     * @param rwyId \n     */\n    approachDistance(rwyId?: string) {\n        return mapDao.distance(this.flight, this.outerMarker(rwyId)) + this.props.om;\n    }\n\n    /**\n     * Returns the distance to runway via om in nms\n     * @param rwyId \n     */\n    approachAlt(rwyId?: string): number {\n        return this.landingAlt(this.approachDistance(rwyId));\n    }\n\n    /**\n     * Returns the maximum approach altitude in feet\n     * Computed as the altutude at outermarker plus the altutude of maximum rate od descent\n     * from the outermarker and the current position\n     */\n    maxApproachAlt(rwyId?: string): number {\n        const d = mapDao.distance(this.outerMarker(rwyId), this.flight);\n        const da = this.vspeed() * d * 60 / this.flight.speed;\n        return Math.round(da + this.outerMarkerAlt());\n    }\n\n    /**\n     * \n     * @param msg \n     */\n    addMessage(msg: Message | Message[]): FlightProcessor {\n        const messages = _.concat(this.messages, msg);\n        return this.withMessages(messages);\n    }\n\n    /**\n     * Returns the Flight with a flight data\n     * @param flight flight data\n     */\n    withFlight(flight: Flight): FlightProcessor {\n        const invalid = _(VALIDATION_PROPS).find(key => {\n            const value = (flight as any)[key];\n            return (!value && value !== 0);\n        });\n        if (!!invalid) {\n            console.trace('Flight with', invalid, 'invalid', flight);\n        }\n        const result = !invalid ? new FlightProcessor(flight, this.props, this.messages) : this;\n        return result;\n    }\n\n    /**\n     * \n     * @param messages \n     */\n    withMessages(messages: Message[]): FlightProcessor {\n        return new FlightProcessor(this.flight, this.props, messages);\n    }\n\n    /**\n     * Returns the flight with modifier applied\n     * @param modifiers \n     */\n    apply(...modifiers: Modifier[]): FlightProcessor {\n        const flightMap = fromJS(this.flight);\n        const flight1 = _.reduce(modifiers, (flight, modifier) => modifier(flight), flightMap).toJS();\n        return this.withFlight(flight1);\n    }\n\n    /** */\n    nextPos(): GeoLocation {\n        const { speed, hdg } = this.flight;\n        const { dt } = this.props;\n\n        // Compute new position\n        const ds = dt * speed / SECS_PER_HOUR;\n        return mapDao.radial(this.flight, hdg, ds);\n    }\n\n    /**\n     * \n     * @param to the node\n     */\n    turnedTo(to: GeoLocation): FlightProcessor {\n        const { dt } = this.props;\n        const maxAngle = dt * TURNING_SPEED;\n        const { angle } = mapDao.route(this.flight, to);\n        const da = Math.abs(angle) <= maxAngle ? angle : Math.sign(angle) * maxAngle;\n        const newHdg = mapDao.normHdg(this.flight.hdg + da);\n        return this.apply(setMod('hdg', newHdg));\n    }\n\n    /**\n     * Returns the flight moved to checkpoint\n     * @param cpt the checkpoint\n     * @param onPassing the transformation callback on checkpoint passing\n     */\n    flyTo(cpt: GeoLocation, onPassing: (arg: FlightProcessor) => FlightProcessor): FlightProcessor {\n        const { dt } = this.props;\n        const flight = this.flight;\n        const { speed } = flight;\n        // compute heading\n        const d = mapDao.distance(flight, cpt);\n        const ds = speed * dt / SECS_PER_HOUR;\n        const newFlight = this\n            .turnedTo(cpt)\n            .moveHoriz()\n            .moveVert();\n        return ds >= d ? onPassing(newFlight) : newFlight;\n    }\n\n    /** */\n    approachJunction(): Junction {\n        const { speed, rwy } = this.flight;\n        if (!rwy) {\n            throw new Error('missing runway');\n        }\n\n        const om = this.outerMarker();\n        const r = speed * RADIUS_PER_KNOTS;\n        const rwyNode = this.props.map.nodes[rwy];\n        if (!isRunway(rwyNode)) {\n            throw new Error('not a runway');\n        }\n        const rwyHdg = rwyNode.hdg;\n        const pLPnt = mapDao.radial(om, rwyHdg - 90, r);\n        const pRPnt = mapDao.radial(om, rwyHdg + 90, r);\n        const dL = mapDao.distance(pLPnt, this.flight);\n        const dR = mapDao.distance(pRPnt, this.flight);\n\n        if (dR <= dL) {\n            // right approach\n            const sigma1 = mapDao.hdg(pRPnt, this.flight);\n            const sigma = mapDao.normHdg(Math.round(sigma1 - Math.asin(r / dR) / RADS_PER_DEG));\n            const entry = mapDao.radial(pRPnt, sigma - 90, r);\n            return { entry, sigma, pivot: pRPnt, right: true };\n        } else {\n            // left approach\n            const sigma1 = mapDao.hdg(pLPnt, this.flight);\n            const sigma = mapDao.normHdg(Math.round(sigma1 + Math.asin(r / dL) / RADS_PER_DEG));\n            const entry = mapDao.radial(pLPnt, sigma + 90, r);\n            return { entry, sigma, pivot: pLPnt, right: false };\n        }\n    }\n\n    /**\n     * \n     * @param alt \n     */\n    speedByAlt(alt: number): number {\n        return speedByAlt(alt, this.props.flightTempl[this.flight.type]);\n    }\n\n    /**\n     * Returns the flight with hdg turn right to hdg\n     * @param toHdg the target heading\n     */\n    turnedRight(toHdg: number): FlightProcessor {\n        const { dt } = this.props;\n        const { hdg } = this.flight;\n        const angle = (toHdg >= hdg) ? toHdg - hdg : 360 + toHdg - hdg;\n        const maxAngle = dt * TURNING_SPEED;\n        const da = angle <= maxAngle ? angle : maxAngle;\n        const newHdg = mapDao.normHdg(this.flight.hdg + da);\n        return this.apply(setMod('hdg', newHdg));\n    }\n\n    /**\n     * Returns the flight with hdg turn left to checkpoint\n     * @param pivot the checkpoint\n     */\n    turnedRightTo(pivot: GeoLocation): FlightProcessor {\n        const { dt } = this.props;\n        const { hdg } = this.flight;\n        const toHdg = mapDao.hdg(pivot, this.flight);\n        const angle = (toHdg >= hdg) ? toHdg - hdg : 360 + toHdg - hdg;\n        const maxAngle = dt * TURNING_SPEED;\n        const da = angle <= maxAngle ? angle : maxAngle;\n        const newHdg = mapDao.normHdg(this.flight.hdg + da);\n        return this.apply(setMod('hdg', newHdg));\n    }\n\n    /**\n     * Returns the flight with hdg turn left to checkpoint\n     * @param pivot the checkpoint\n     */\n    turnedLeftTo(pivot: GeoLocation): FlightProcessor {\n        const { dt } = this.props;\n        const { hdg } = this.flight;\n        const toHdg = mapDao.hdg(pivot, this.flight);\n        const angle = (hdg >= toHdg) ? hdg - toHdg : 360 + hdg - toHdg;\n        const maxAngle = dt * TURNING_SPEED;\n        const da = angle <= maxAngle ? angle : maxAngle;\n        const newHdg = mapDao.normHdg(this.flight.hdg - da);\n        return this.apply(setMod('hdg', newHdg));\n    }\n\n    /**\n     * Returns the flight in the outbound track\n     * @param onPassing the transformaton on passing the outbound end\n     */\n    outboundTrack(onPassing: (arg: FlightProcessor) => FlightProcessor): FlightProcessor {\n        const { dt } = this.props;\n        const flight = this.flight;\n        const { holdHdg, loopTimer } = flight;\n        if (!holdHdg) {\n            throw new Error('missing hold heading');\n        }\n        const newFlight = this.apply(updateMod<number>('loopTimer', lp => lp - dt))\n            .turnedRight(holdHdg)\n            .moveHoriz()\n            .moveVert();\n        return (!loopTimer || loopTimer <= 0) ? onPassing(newFlight) : newFlight;\n    }\n\n    /** */\n    moveHoriz(): FlightProcessor {\n        // Compute new position\n        return this.apply(setLocationMod(this.nextPos()));\n    }\n\n    /** */\n    moveVert(): FlightProcessor {\n        const flight = this.flight;\n        const { alt, toAlt } = flight;\n        const { dt } = this.props;\n\n        // Compute new altitude\n        const vspeed = this.vspeed();\n        const newAlt = alt < toAlt\n            ? Math.min(toAlt, Math.round(alt + vspeed * dt * MINS_PER_SEC))\n            : alt > toAlt\n                ? Math.max(toAlt, Math.round(alt - vspeed * dt * MINS_PER_SEC))\n                : alt;\n        const newSpeed = this.speedByAlt(newAlt);\n        const result = this.apply(\n            setMod('alt', newAlt),\n            setMod('speed', newSpeed));\n\n        return (toAlt !== alt && newAlt === toAlt)\n            ? result.addPassingFlightLevelDialog()\n            : result;\n    }\n\n    /** */\n    approachVert(): FlightProcessor {\n        // Compute new altitude\n        const { alt } = this.flight;\n        const minAlt = Math.round(alt - this.vspeed() * this.props.dt * MINS_PER_SEC);\n        const newAlt = Math.min(alt, Math.max(minAlt, this.approachAlt()));\n        const newSpeed = this.speedByAlt(newAlt);\n        return this.apply(\n            setMod('alt', newAlt),\n            setMod('speed', newSpeed));\n    }\n\n    /** */\n    landVert(): FlightProcessor {\n        // Compute new altitude\n        const { alt } = this.flight;\n        const minAlt = Math.round(alt - this.vspeed() * this.props.dt * MINS_PER_SEC);\n        const newAlt = Math.min(alt, Math.max(minAlt, this.landingAlt()));\n        const newSpeed = this.speedByAlt(newAlt);\n        return this.apply(\n            setMod('alt', newAlt),\n            setMod('speed', newSpeed));\n    }\n\n    /**\n     * \n     * @param cmd \n     */\n    processCommand(cmd: CommandMessage): FlightProcessor {\n        switch (cmd.cmd) {\n            case Command.Climb:\n                return this.processClimbCommand(cmd as FlightLevelCommandMessage);\n            case Command.Descend:\n                return this.processDescendCommand(cmd as FlightLevelCommandMessage);\n            case Command.Maintain:\n                return this.processMaintainCommand(cmd as FlightLevelCommandMessage);\n            case Command.ClearedToTakeoff:\n                return this.processTakeoffCommand(cmd as TakeoffCommandMessage);\n            case Command.FlyTo:\n            case Command.FlyToVia:\n                return this.processFlyToCommand(cmd as FlyToCommandMessage);\n            case Command.ClearedToLand:\n                return this.processClearedToLandCommand(cmd as LandCommandMessage);\n            case Command.HoldCurrentPosition:\n            case Command.HoldAt:\n                return this.processHoldCommand(cmd as HoldAtCommandMessage);\n            default:\n                return this;\n        }\n    }\n\n    /**\n     * \n     * @param cmd \n     */\n    processHoldCommand(cmd: HoldAtCommandMessage): FlightProcessor {\n        const invalid = this.validateATC(cmd);\n        if (invalid) {\n            return invalid;\n        }\n        const { at } = cmd;\n        if (at && !this.props.map.nodes[at]) {\n            return this.addMessage(\n                buildBeaconNotFoundMessage(this.flight.id, this.props.map.id, at)\n            );\n        }\n        const { status, hdg, lat, lon } = this.flight;\n        const { map, holdingDuration } = this.props;\n        if (status === FlightStatus.WaitingForTakeoff) {\n            return this.addMessage(\n                buildAtGroundMessage(this.flight.id, this.props.map.id, this.flight.from)\n            );\n        }\n        if (!at) {\n            const fix: GeoLocation = { lat, lon };\n            return this.apply(\n                setMod('status', FlightStatus.HoldingFrom),\n                setMod('loopTimer', holdingDuration / 2),\n                setMod('holdHdg', mapDao.normHdg(hdg + 180)),\n                setMod('fix', fix))\n                .addMessage(buildReadbackMessage(cmd));\n        } else {\n            const atNode = map.nodes[at];\n            const hdg = mapDao.hdg(atNode, this.flight);\n            const result = this.apply(\n                setMod('status', FlightStatus.HoldingToAt),\n                setMod('holdHdg', mapDao.normHdg(hdg + 180)),\n                setMod('at', at))\n                .addMessage(buildReadbackMessage(cmd));\n            return result;\n        }\n    }\n\n    /**\n     * \n     * @param {*} cmd \n     */\n    processClearedToLandCommand(cmd: LandCommandMessage) {\n        const invalid = this.validateATC(cmd);\n        if (invalid) {\n            return invalid;\n        }\n        const { rwy } = cmd;\n        if (!this.props.map.nodes[rwy]) {\n            return this.addMessage(\n                buildRunwayNotFoundMessage(this.flight.id, this.props.map.id, rwy)\n            );\n        }\n        const { alt, status } = this.flight;\n        const { clearToLandDistance } = this.props;\n        if (status === FlightStatus.WaitingForTakeoff) {\n            return this.addMessage(\n                buildAtGroundMessage(this.flight.id, this.props.map.id, this.flight.from)\n            );\n        }\n        if (this.approachDistance(rwy) > clearToLandDistance) {\n            return this.addMessage(\n                buildTooDistanthMessage(this.flight.id, this.props.map.id)\n            );\n        }\n        if (alt > this.maxApproachAlt(rwy)) {\n            // Flight to high\n            return this.addMessage(\n                buildTooHighMessage(this.flight.id, this.props.map.id)\n            );\n        }\n        // Cleared to land\n        const result = this.apply(\n            setMod('rwy', rwy),\n            setMod('status', FlightStatus.Approaching),\n            deleteMod('turnTo'),\n            deleteMod('at'))\n            .addMessage(buildReadbackMessage(cmd));\n        return result;\n    }\n\n    /**\n     * \n     * @param cmd \n     */\n    processFlyToCommand(cmd: FlyToCommandMessage): FlightProcessor {\n        const invalid = this.validateATC(cmd);\n        if (invalid) {\n            return invalid;\n        }\n        const { via, turnTo } = cmd;\n        if (!this.props.map.nodes[turnTo]) {\n            return this.addMessage(\n                buildBeaconNotFoundMessage(this.flight.id, this.props.map.id, turnTo)\n            );\n        }\n        if (via && !this.props.map.nodes[via]) {\n            return this.addMessage(\n                buildBeaconNotFoundMessage(this.flight.id, this.props.map.id, via)\n            );\n        }\n        const { status } = this.flight;\n        if (status === FlightStatus.WaitingForTakeoff) {\n            return this.addMessage(\n                buildAtGroundMessage(this.flight.id, this.props.map.id, this.flight.from)\n            );\n        }\n        const f1 = !via\n            ? this.apply(\n                setMod('at', turnTo),\n                setMod('status', FlightStatus.FlyingTo),\n                deleteMod('turnTo'))\n            : this.apply(\n                setMod('at', via),\n                setMod('status', FlightStatus.Turning),\n                setMod('turnTo', turnTo));\n        const result = f1.apply(deleteMod('rwy'))\n            .addMessage(\n                buildReadbackMessage(cmd)\n            );\n        return result;\n    }\n\n    /**\n     * \n     * @param {*} cmd \n     */\n    validateATC(cmd: CommandMessage): FlightProcessor | undefined {\n        const { from } = cmd;\n        if (!from) {\n            throw new Error('missing atc id');\n        }\n        if (from !== this.props.map.id) {\n            // Invalid ATC\n            return this.addMessage(\n                buildATCNotFoundMessage(this.flight.id, from)\n            );\n        }\n    }\n\n    /**\n     * \n     * @param cmd \n     */\n    validateFlightLevelCommand(cmd: FlightLevelCommandMessage): FlightProcessor | undefined {\n        const { flightLevel } = cmd;\n        const toAlt = parseInt(flightLevel) * 100;\n        if (toAlt < MIN_ALTITUDE\n            || toAlt > MAX_ALTITUDE\n            || (toAlt % ALTITUDE_SEPARATION)) {\n            // Invalid flight level\n            return this.addMessage(\n                buildInvalidFlightLevelMessage(this.flight.id, this.props.map.id, flightLevel)\n            );\n        }\n    }\n\n    /**\n     * \n     * @param cmd \n     */\n    processClimbCommand(cmd: FlightLevelCommandMessage): FlightProcessor {\n        const invalid = this.validateATC(cmd) || this.validateFlightLevelCommand(cmd);\n        if (invalid) {\n            return invalid;\n        }\n        const { flightLevel } = cmd;\n        const cmdAlt = parseInt(flightLevel) * 100;\n        const { alt, status } = this.flight;\n        if (status === FlightStatus.WaitingForTakeoff) {\n            return this.addMessage(\n                buildAtGroundMessage(this.flight.id, this.props.map.id, this.flight.from)\n            );\n        }\n        if (alt >= cmdAlt) {\n            return this.addMessage(\n                buildInvalidFlightLevelMessage(this.flight.id, this.props.map.id, flightLevel)\n            );\n        }\n        const newFLight = (status === FlightStatus.Landing || status === FlightStatus.Approaching || status === FlightStatus.Aligning)\n            ? this.apply(\n                setMod('toAlt', cmdAlt),\n                setMod('status', FlightStatus.Flying),\n                deleteMod('rwy')\n            )\n            : this.apply(setMod('toAlt', cmdAlt));\n        return newFLight.addMessage(\n            buildReadbackMessage(cmd)\n        );\n    }\n\n    /**\n     * \n     * @param cmd \n     */\n    processDescendCommand(cmd: FlightLevelCommandMessage): FlightProcessor {\n        const invalid = this.validateATC(cmd) || this.validateFlightLevelCommand(cmd);\n        if (invalid) {\n            return invalid;\n        }\n        const { flightLevel } = cmd;\n        const cmdAlt = parseInt(flightLevel) * 100;\n        const { alt, status } = this.flight;\n        if (status === FlightStatus.WaitingForTakeoff) {\n            return this.addMessage(\n                buildAtGroundMessage(this.flight.id, this.props.map.id, this.flight.from)\n            );\n        }\n        if (alt <= cmdAlt) {\n            return this.addMessage(\n                buildInvalidFlightLevelMessage(this.flight.id, this.props.map.id,flightLevel)\n            );\n        }\n        const newFLight = (status === FlightStatus.Landing || status === FlightStatus.Approaching || status === FlightStatus.Aligning)\n            ? this.apply(\n                setMod('toAlt', cmdAlt),\n                setMod('status', FlightStatus.Flying),\n                deleteMod('rwy')\n            )\n            : this.apply(setMod('toAlt', cmdAlt));\n        return newFLight.addMessage(\n            buildReadbackMessage(cmd)\n        );\n    }\n\n    /**\n     * \n     * @param cmd \n     */\n    processMaintainCommand(cmd: FlightLevelCommandMessage): FlightProcessor {\n        const invalid = this.validateATC(cmd) || this.validateFlightLevelCommand(cmd);\n        if (invalid) {\n            return invalid;\n        }\n        const { flightLevel } = cmd;\n        const cmdAlt = parseInt(flightLevel) * 100;\n        const { alt, status } = this.flight;\n        if (status === FlightStatus.WaitingForTakeoff) {\n            return this.addMessage(\n                buildAtGroundMessage(this.flight.id, this.props.map.id, this.flight.from)\n            );\n        }\n        if (alt !== cmdAlt) {\n            return this.addMessage(\n                buildInvalidFlightLevelMessage(this.flight.id, this.props.map.id,flightLevel)\n            );\n        }\n        const newFLight = (status === FlightStatus.Landing || status === FlightStatus.Approaching || status === FlightStatus.Aligning)\n            ? this.apply(\n                setMod('toAlt', cmdAlt),\n                setMod('status', FlightStatus.Flying),\n                deleteMod('rwy')\n            )\n            : this.apply(setMod('toAlt', cmdAlt));\n        return newFLight.addMessage(\n            buildReadbackMessage(cmd)\n        );\n    }\n\n    /**\n     * \n     * @param {*} cmd \n     */\n    processTakeoffCommand(cmd: TakeoffCommandMessage): FlightProcessor {\n        const invalid = this.validateATC(cmd) || this.validateFlightLevelCommand(cmd);\n        if (invalid) {\n            return invalid;\n        }\n        const { flightLevel, rwy } = cmd;\n        const cmdAlt = parseInt(flightLevel) * 100;\n        const { status, from: flightRwy } = this.flight;\n        if (status !== FlightStatus.WaitingForTakeoff) {\n            return this.addMessage(\n                buildNotAtGroundMessage(this.flight.id, this.props.map.id, rwy)\n            );\n        }\n        if (rwy !== flightRwy) {\n            return this.addMessage(\n                buildInvalidRunwayMessage(this.flight.id, this.props.map.id, rwy)\n            );\n        }\n        return this.apply(\n            setMod('toAlt', cmdAlt),\n            setMod('status', FlightStatus.Flying),\n            deleteMod('rwy'))\n            .addMessage(\n                buildReadbackMessage(cmd)\n            );\n    }\n\n    /** Returns the flight status after time elapsed */\n    processTime(): FlightProcessor {\n        return this.processTimePhase1().processExit();\n    }\n\n    /** */\n    private processTimePhase1(): FlightProcessor {\n        switch (this.flight.status) {\n            case FlightStatus.FlyingTo:\n                return this.processTimeFlyingTo();\n            case FlightStatus.Flying:\n                return this.processTimeFlying();\n            case FlightStatus.Turning:\n                return this.processTimeTurning();\n            case FlightStatus.Approaching:\n                return this.processTimeApproaching();\n            case FlightStatus.Aligning:\n                return this.processTimeAligning();\n            case FlightStatus.Landing:\n                return this.processTimeLanding();\n            case FlightStatus.HoldingFrom:\n                return this.processTimeHoldingFrom();\n            case FlightStatus.HoldingTo:\n                return this.processTimeHoldingTo();\n            case FlightStatus.HoldingFromAt:\n                return this.processTimeHoldingFromNode();\n            case FlightStatus.HoldingToAt:\n                return this.processTimeHoldingToNode();\n            default:\n                return this;\n        }\n    }\n\n    /** */\n    processTimeHoldingFromNode(): FlightProcessor {\n        const flight = this.flight;\n        return this.outboundTrack(fl => {\n            const hdg1 = mapDao.normHdg(flight.hdg + fl.props.dt * TURNING_SPEED);\n            return fl.apply(\n                setMod('status', FlightStatus.HoldingToAt),\n                setMod('hdg', hdg1))\n                .moveHoriz()\n                .moveVert();\n        });\n    }\n\n    /** */\n    processTimeHoldingToNode(): FlightProcessor {\n        const { at } = this.flight;\n        if (!at) {\n            throw new Error('missing at');\n        }\n        return this.flyTo(this.props.map.nodes[at], fl =>\n            fl.apply(\n                setMod('status', FlightStatus.HoldingFromAt),\n                setMod('loopTimer', fl.props.holdingDuration / 2)\n            )\n        );\n    }\n\n    /** */\n    processTimeHoldingFrom(): FlightProcessor {\n        const flight = this.flight;\n        return this.outboundTrack(fl => {\n            const hdg1 = mapDao.normHdg(flight.hdg + fl.props.dt * TURNING_SPEED);\n            return this.apply(\n                setMod('status', FlightStatus.HoldingTo),\n                setMod('hdg', hdg1))\n                .moveHoriz()\n                .moveVert();\n        });\n    }\n\n    /** */\n    processTimeHoldingTo(): FlightProcessor {\n        const { fix } = this.flight;\n        if (!fix) {\n            throw new Error('missing fix');\n        }\n        return this.flyTo(fix, fl => {\n            return fl.apply(\n                setMod('status', FlightStatus.HoldingFrom),\n                setMod('loopTimer', fl.props.holdingDuration / 2)\n            );\n        });\n    }\n\n    /** */\n    processExit(): FlightProcessor {\n        const { map, dt } = this.props;\n        const flight = this.flight;\n        const ds = flight.speed * dt / SECS_PER_HOUR;\n        const exitNode = _.findKey(map.nodes, node => {\n            if (!isEntryNode(node)) {\n                return false;\n            }\n            const nodeHdg = node.hdg;\n            const diff = mapDao.normAngle(flight.hdg - nodeHdg);\n            if (Math.abs(diff) <= 90) {\n                return false;\n            }\n            const { from, d } = mapDao.route(flight, node);\n            return from && d <= ds && Math.abs(diff);\n        });\n        if (!!exitNode) {\n            return this.apply(\n                setMod('exit', exitNode),\n                setMod('status', FlightStatus.Exited)\n            );\n        } else {\n            return this;\n        }\n    }\n\n    /**\n     * \n     */\n    processTimeApproaching(): FlightProcessor {\n        const { dt, map } = this.props;\n        const { hdg, speed, rwy } = this.flight;\n        if (!rwy) {\n            throw new Error('missing runway');\n        }\n        const rwyNode = map.nodes[rwy];\n        if (!isRunway(rwyNode)) {\n            throw new Error('not a runway');\n        }\n        const rwyHdg = rwyNode.hdg;\n\n        const { entry: c, pivot: p, right } = this.approachJunction();\n        const r = speed * RADIUS_PER_KNOTS;\n        const maxTurn = dt * TURNING_SPEED;\n        const d = mapDao.distance(this.flight, p);\n        const { angle, d: dc } = mapDao.route(this.flight, c);\n        const angle1 = mapDao.normAngle(hdg - rwyHdg);\n        if (d <= r - 0.1) {\n            // Missing approach cause distance from pivot turn\n            console.error('Missing approach cause distance from pivot turn', this.flight);\n            console.error('d', d, 'r', r);\n            return this.apply(\n                setMod('toAlt', this.props.goAroundAlt),\n                setMod('status', FlightStatus.Flying),\n                deleteMod('rwy'))\n                .moveHoriz()\n                .moveVert()\n                .addMissingApproachDialog();\n        }\n        if (Math.abs(angle) > maxTurn && d <= 2 * r) {\n            // Missing approach cause turn angle and pivot distance\n            console.error('Missing approach turn angle and pivot distance', this.flight);\n            console.error('d', d,\n                'r', r,\n                'angle', angle,\n                'maxTurn', maxTurn,\n                'r', r);\n            return this.apply(\n                setMod('toAlt', this.props.goAroundAlt),\n                setMod('status', FlightStatus.Flying),\n                deleteMod('rwy'))\n                .moveHoriz()\n                .moveVert()\n                .addMissingApproachDialog();\n        }\n        const dd = speed * dt / SECS_PER_HOUR;\n        if (dd < dc) {\n            // flew length < junction checkpoint distance (not reached)\n            // Turn to C \n            return this.turnedTo(c).moveHoriz().approachVert();\n        } else if (Math.abs(angle1) > maxTurn) {\n            // Start turn to om\n            const f1 = this.apply(\n                setMod('status', FlightStatus.Aligning),\n                setMod('right', right));\n            const f2 = (right) ? f1.turnedRightTo(f1.outerMarker()) : f1.turnedLeftTo(f1.outerMarker());\n            return f2.moveHoriz().approachVert();\n        } else {\n            // Turn to runway and land\n            return this.apply(\n                setMod('status', FlightStatus.Landing))\n                .turnedTo(c)\n                .moveHoriz()\n                .approachVert();\n        }\n    }\n\n    /** */\n    processTimeAligning(): FlightProcessor {\n        const { right, rwy, hdg } = this.flight;\n        if (!rwy) {\n            throw new Error('missing runway');\n        }\n        const { map, dt } = this.props;\n        const rwyNode = map.nodes[rwy];\n        if (!isRunway(rwyNode)) {\n            throw new Error('not a runway');\n        }\n        const rwyHdg = rwyNode.hdg;\n        const da = mapDao.normAngle(rwyHdg - hdg);\n        const maxAngle = dt * TURNING_SPEED;\n        if (Math.abs(da) <= maxAngle) {\n            // turn completed\n            return this.apply(\n                deleteMod('right'),\n                setMod('status', FlightStatus.Landing),\n                setMod('hdg', rwyHdg))\n                .moveHoriz()\n                .landVert();\n        } else if (right) {\n            return this.turnedRightTo(this.outerMarker())\n                .moveHoriz()\n                .landVert();\n        } else {\n            return this.turnedLeftTo(this.outerMarker())\n                .moveHoriz()\n                .landVert();\n        }\n    }\n\n    /** */\n    processTimeLanding(): FlightProcessor {\n        const flight = this.flight;\n        const { speed, rwy, type, alt, hdg } = flight;\n        if (!rwy) {\n            throw new Error('missing runway');\n        }\n        const { dt, map, landingHdgRange, flightTempl, goAroundAlt, mm } = this.props;\n        const runwayNode = map.nodes[rwy];\n        if (!isRunway(runwayNode)) {\n            throw new Error('not a runway');\n        }\n        const rwyHdg = runwayNode.hdg;\n        const { from, d, angle } = mapDao.route(flight, runwayNode);\n        const ds = speed * dt / SECS_PER_HOUR;\n        if (from) {\n            // Go around due to missing runway cause flying away\n            console.error('Missing runway direction from', this.flight);\n            return this.apply(\n                setMod('status', FlightStatus.Flying),\n                setMod('toAlt', goAroundAlt),\n                deleteMod('rwy'))\n                .moveHoriz()\n                .moveVert()\n                .addMissingRunwayDialog();\n        }\n        if (ds > d) {\n            // flying distance > runway distance: touching\n            if (Math.abs(mapDao.normAngle(hdg - rwyHdg)) > landingHdgRange) {\n                // difference between flight heading and runway heading > landing range\n                // Go around due to missing runway cause land alignment\n                console.error('Missing runway land alignment', this.flight);\n                return this.apply(\n                    setMod('status', FlightStatus.Flying),\n                    setMod('toAlt', goAroundAlt),\n                    deleteMod('rwy'))\n                    .moveHoriz()\n                    .moveVert()\n                    .addMissingRunwayDialog();\n            }\n            // Landed\n            return this.apply(\n                setLocationMod(runwayNode),\n                setMod('speed', 0),\n                setMod('alt', 0),\n                setMod('status', FlightStatus.Landed))\n        }\n\n        // Compute shifting\n        const shifting = d * Math.sin(angle * RADS_PER_DEG);\n\n        if (Math.abs(shifting) >= ds) {\n            if (d < mm) {\n                // Missing runway too shifted\n                console.error('Missing runway too shifted', this.flight);\n                return this.apply(\n                    setMod('status', FlightStatus.Flying),\n                    setMod('toAlt', goAroundAlt),\n                    deleteMod('rwy'))\n                    .moveHoriz()\n                    .moveVert()\n                    .addMissingRunwayDialog();\n            }\n            // fly to midle marker\n            return this.turnedTo(this.midleMarker())\n                .moveHoriz()\n                .landVert();\n        }\n\n        // Compute forward point\n        const df = Math.sqrt(ds * ds - shifting * shifting);\n        const fPts = mapDao.radial(runwayNode, rwyHdg + 180, d - df);\n\n        // Compute altitude\n        const apprAlt = this.landingAlt(d - ds);\n        const { vspeed } = flightTempl[type];\n        const minAlt = Math.round(alt - vspeed * dt * MINS_PER_SEC);\n        if (apprAlt < minAlt) {\n            // Go around cause altitude\n            console.error('Missing runway alitude', this.flight);\n            return this.apply(\n                setMod('status', FlightStatus.Flying),\n                setMod('toAlt', goAroundAlt),\n                deleteMod('rwy'))\n                .addMissingRunwayDialog()\n                .moveHoriz()\n                .moveVert();\n        }\n\n        return this.turnedTo(fPts).moveHoriz()\n            .landVert();\n    }\n\n    /**\n     * \n     */\n    processTimeTurning(): FlightProcessor {\n        const { map } = this.props;\n        const { turnTo, at } = this.flight;\n        if (!at) {\n            throw new Error('missing at');\n        }\n        return this.flyTo(map.nodes[at], fl =>\n            fl.apply(\n                setMod('status', FlightStatus.FlyingTo),\n                setMod('at', turnTo),\n                deleteMod('turnTo'))\n                .addFlyingToDialog()\n        );\n    }\n\n    /**\n     * \n     */\n    processTimeFlying(): FlightProcessor {\n        return this.moveHoriz().moveVert();\n    }\n\n    /**\n     * \n     */\n    processTimeFlyingTo(): FlightProcessor {\n        const { at } = this.flight;\n        if (!at) {\n            throw new Error('missing at property');\n        }\n        const atNode = this.props.map.nodes[at];\n        return this.flyTo(atNode, fl =>\n            fl.apply(\n                deleteMod('at'),\n                setMod('status', FlightStatus.Flying)\n            )\n        );\n    }\n}\n","import { fromJS, Set } from 'immutable';\nimport _ from 'lodash';\nimport { Flight, FlightStatus, FlightType } from './Flight';\nimport { FlightProcessor, FlightTemplate, SimulationOptions, SimulationProps } from './FlightProcessor';\nimport { HeadingMapNode, isRunway, MapNode, MapNodeType } from './Map';\nimport { mapDao } from './MapDao';\nimport {\n    buildClearedToLeaveMessage,\n    buildCollisionMessage,\n    buildDepartureLeaveMessage,\n    buildDepartureToMessage, buildEnterLeaveMessage, buildEnterToMessage, buildFlightNotFoundMessage, buildGoodDayMessage, buildHoldShortCommand, buildLeavingMessage, buildLeavingMissingDepartureMessage, buildOutOfAreaMessage,\n    buildReadbackMessage,\n    buildRogerMessage, buildRunwayVacated, buildWrongRunwayVacated, CommandMessage,\n    Message\n} from './Message';\nimport { Session } from './Session';\n\nconst MAX_INITIAL_IDLE_INTERVAL = 20;\n\nexport const DefaultSimProps: SimulationOptions = Object.freeze({\n    dt: 1,                      // sec\n    jetProb: 0.5,\n    safeEntryDelay: 120,        // sec\n    entryAlt: 28000,            // feet\n    exitAlt: 36000,             // feet\n    collisionDistance: 4,       // nms\n    collisionAlt: 1000,         // feet\n    om: 7,                      // nms\n    mm: 0.9,                    // nms (5469')\n    clearToLandDistance: 30,    // nms\n    exitDistance: 2,            // nms\n    landingHdgRange: 2,         // DEG\n    landingAngle: 3,            // DEG\n    conditionDistance: 400 / 3600 * 10 * 1.5, // nms\n    holdingDuration: 240,       // sec\n    goAroundAlt: 4000,          // feet\n    flightTempl: {\n        J: {\n            speed0: 140,        // nmh\n            speed360: 440,      // nmh\n            vspeed: 1500        // fpm\n        },\n        A: {\n            speed0: 80,         // nmh\n            speed360: 280,      // nmh\n            vspeed: 700         // fpm\n        }\n    },\n    flightVoices: []\n});\n\n// Descend speed 1500 feet/min = 25 feet/s\n// Descend speed 700 feet/min = 12 feet/s\n// Descent speed for landing slope from FL040 at 173 Knots = 173/60/1852*0.3*tan(3DEG) = 932 feet/min = 15 feet/s\n// Descent speed for landing slope from FL040 at 102 Knots = 80/60/1852*0.3*tan(3DEG) = 431 feet/min = 7 feet/s\n\n/**\n * \n * @param tmpl \n */\nfunction rndFlightId(tmpl: string = 'X99X'): string {\n    const id = _.map(tmpl, mode =>\n        (mode === 'X')\n            ? String.fromCharCode(65 + Math.floor(Math.random() * 26))\n            : String.fromCharCode(48 + Math.floor(Math.random() * 10))\n    ).join('');\n    return id;\n}\n\n/**\n * \n * @param lambda \n */\nfunction rndPoisson(lambda: number): number {\n    var k = -1;\n    var p = 1;\n    var l = Math.exp(-lambda);\n    do {\n        ++k;\n        p *= Math.random();\n    } while (p > l);\n    return k;\n}\n\n/**\n * \n * @param alt \n * @param template \n */\nfunction flightSpeed(alt: number, template: FlightTemplate): number {\n    return Math.round(alt / 36000 * (template.speed360 - template.speed0) + template.speed0);\n}\n\n/**\n * \n * @param items \n */\nexport function choose<T>(items: T[]): T {\n    return items.length <= 1 ? items[0] : items[rndInt(items.length)];\n}\n\n/**\n * \n * @param prob \n */\nfunction rndByProb(prob: number): boolean {\n    return Math.random() < prob;\n}\n\n/**\n * \n * @param n \n */\nfunction rndInt(n: number): number {\n    return Math.floor(Math.random() * n);\n}\n\n/**\n * \n * @param session \n * @param props \n */\nexport function buildSimulator(session: Session, props: any): TrafficSimulator {\n    return new TrafficSimulator(session, _.assign({}, DefaultSimProps, props) as SimulationProps);\n}\n\n/** */\nclass TrafficSimulator {\n    private _props: SimulationProps;\n    private _session: Session;\n    private _messages: Message[];\n\n    /**\n     * \n     * @param session \n     * @param props \n     * @param messages \n     */\n    constructor(session: Session, props: SimulationProps, messages: Message[] = []) {\n        this._props = props;\n        this._session = session;\n        this._messages = messages;\n        _.bindAll(this);\n    }\n\n    get props() { return this._props; }\n\n    /** Returns the session */\n    get session() { return this._session; }\n\n    /** Returns the messages */\n    get messages() { return this._messages; }\n\n    /** */\n    get map() { return this.props.map; }\n\n    /**\n     * \n     * @param session \n     */\n    withSession(session: Session) {\n        return new TrafficSimulator(session, this.props, this.messages);\n    }\n\n    /**\n     * \n     * @param messages \n     */\n    withMessages(messages: Message[]) {\n        return new TrafficSimulator(this.session, this.props, messages);\n    }\n\n    /**\n     * \n     * @param messages \n     */\n    addMessages(messages: Message | Message[]) {\n        return this.withMessages(_.concat(this.messages, messages));\n    }\n\n    /**\n     * \n     * @param flight \n     */\n    addDepartureToDialog(flight: Flight): TrafficSimulator {\n        const holdShort = buildHoldShortCommand(flight.id, this.map.id, flight.from);\n        return this.addMessages([\n            buildDepartureToMessage(flight, this.map.id),\n            holdShort,\n            buildReadbackMessage(holdShort)\n        ]);\n    }\n\n    /**\n     * \n     * @param flight \n     */\n    addDepartureLeaveDialog(flight: Flight): TrafficSimulator {\n        const holdShort = buildHoldShortCommand(flight.id, this.map.id, flight.from);\n        return this.addMessages([\n            buildDepartureLeaveMessage(flight, this.map.id),\n            holdShort,\n            buildReadbackMessage(holdShort)\n        ]);\n    }\n\n    /**\n     * \n     * @param flight \n     */\n    addEnterToDialog(flight: Flight): TrafficSimulator {\n        return this.addMessages([\n            buildEnterToMessage(flight, this.map.id),\n            buildRogerMessage(this.map.id, flight.id)\n        ]);\n    }\n\n    /**\n     * \n     * @param flight \n     */\n    addEnterLeaveDialog(flight: Flight): TrafficSimulator {\n        return this.addMessages([\n            buildEnterLeaveMessage(flight, this.map.id),\n            buildRogerMessage(this.map.id, flight.id)\n        ]);\n    }\n\n    /**\n     * \n     * @param cmd \n     */\n    processCommand(cmd: CommandMessage): TrafficSimulator {\n        const { to: flightId } = cmd;\n        if (!flightId) {\n            throw new Error('missing flight id');\n        }\n        const flight = this.session.flights[flightId];\n        if (!flight) {\n            return this.addMessages([\n                buildFlightNotFoundMessage(this.props.map.id, flightId)\n            ]);\n        }\n        const fp = new FlightProcessor(flight, this.props).processCommand(cmd);\n        const newSession = fromJS(this.session).setIn(['flights', flightId], fp.flight).toJS();\n        return this.withSession(newSession).addMessages(fp.messages);\n    }\n\n    /**\n     * \n     */\n    transition(): TrafficSimulator {\n        return this.processFlights()\n            .filterForLanded()\n            .filterForOutOfArea()\n            .filterForExited()\n            .filterCollision()\n            .processForNewFlight()\n            .addTime();\n    }\n\n    /**\n     * \n     */\n    filterCollision(): TrafficSimulator {\n        const { collisionAlt, collisionDistance } = this.props;\n        const { flights } = this.session;\n        const flightsAry = _.values(flights);\n        var collision = Set.of();\n        for (var i = 0; i < flightsAry.length; i++) {\n            for (var j = i + 1; j < flightsAry.length; j++) {\n                const a = flightsAry[i];\n                const b = flightsAry[j];\n                const ds = mapDao.distance(a, b);\n                const da = Math.abs(a.alt - b.alt)\n                const collided = a.status !== FlightStatus.WaitingForTakeoff\n                    && b.status !== FlightStatus.WaitingForTakeoff\n                    && da <= collisionAlt\n                    && ds <= collisionDistance;\n                if (collided) {\n                    collision = collision.add(a.id).add(b.id)\n                }\n            }\n        }\n\n        const [collided, notCollided] = _.partition(flights, f => collision.has(f.id));\n        const noCollided = collided.length;\n        if (noCollided > 0) {\n            const notCollidedMap = _(notCollided)\n                .groupBy('id')\n                .mapValues(f => f[0])\n                .value();\n            const newSession = fromJS(this.session)\n                .set('flights', notCollidedMap)\n                .update('noCollision', (n: number) => n + noCollided)\n                .toJS();\n            // Sending message\n            const messages = collided.map(f => buildCollisionMessage(f.id, this.props.map.id));\n            return this.withSession(newSession).addMessages(messages);\n        }\n        return this;\n    }\n\n    /**\n     * \n     */\n    filterForExited(): TrafficSimulator {\n        const { exitAlt } = this.props;\n        const [exited, notExited] = _.partition(this.session.flights,\n            { status: FlightStatus.Exited });\n        const noExited = exited.length;\n        if (noExited > 0) {\n            const [exitedOk, exitedKo] = _.partition(exited, f => {\n                return f.alt === exitAlt\n                    && f.to === f.exit\n            });\n            const ok = exitedOk.length;\n            const ko = exitedKo.length;\n            const notExitedMap = _(notExited)\n                .groupBy('id')\n                .mapValues(f => f[0])\n                .value();\n            const newSession = fromJS(this.session)\n                .set('flights', notExitedMap)\n                .update('noExitOk', (n: number) => n + ok)\n                .update('noExitKo', (n: number) => n + ko)\n                .toJS();\n            // Sending message\n            const okMessages = _.flatMap(exitedOk, f => [\n                buildLeavingMessage(f, this.props.map.id),\n                buildClearedToLeaveMessage(this.props.map.id, f.id, f.exit as string)\n            ]);\n            const koMessages = _.flatMap(exitedKo, f => [\n                buildLeavingMissingDepartureMessage(f, this.props.map.id),\n                buildClearedToLeaveMessage(this.props.map.id, f.id, f.exit as string)\n            ]);\n            return this.withSession(newSession)\n                .addMessages(okMessages)\n                .addMessages(koMessages);\n        }\n        return this;\n    }\n\n    /**\n     * \n     */\n    filterForOutOfArea(): TrafficSimulator {\n        const { map, exitDistance } = this.props;\n        const { center } = map;\n        const coords = mapDao.coords(map.nodes, center);\n        const flights = this.session.flights;\n        const [exited, inArea] = _.partition(flights,\n            f => {\n                const pts = mapDao.xy(f, center);\n                return pts[0] < coords.xmin - exitDistance\n                    || pts[0] > coords.xmax + exitDistance\n                    || pts[1] < coords.ymin - exitDistance\n                    || pts[1] > coords.ymax + exitDistance;\n            });\n        if (exited.length > 0) {\n            const inAreaMap = _(inArea)\n                .groupBy('id')\n                .mapValues(f => f[0])\n                .value();\n            const newSession = fromJS(this.session)\n                .set('flights', fromJS(inAreaMap))\n                .update('noExitKo', (n: number) => n + exited.length)\n                .toJS() as Session;\n            const messages = _(exited).flatMap(flight => [\n                buildOutOfAreaMessage(flight.id, this.props.map.id),\n                buildRogerMessage(this.props.map.id, flight.id)\n            ]).value();\n            return this.withSession(newSession).addMessages(messages);\n        } else {\n            return this;\n        }\n    }\n\n    /** */\n    filterForLanded(): TrafficSimulator {\n        const [landed, notLanded] = _.partition(this.session.flights,\n            { status: FlightStatus.Landed });\n        const noLanded = landed.length;\n        if (noLanded > 0) {\n            const [landedOk, landedKo] = _.partition(landed, f => f.to === f.rwy);\n            const ok = landedOk.length;\n            const ko = landedKo.length;\n            const notLandedMap: Record<string, Flight> = _(notLanded)\n                .map(f => [f.id, f])\n                .fromPairs()\n                .value();\n            const newSession = fromJS(this.session)\n                .set('flights', notLandedMap)\n                .update('noLandedOk', (n: number) => n + ok)\n                .update('noLandedKo', (n: number) => n + ko)\n                .toJS();\n            // Sending message\n            const okMessages = _.flatMap(landedOk, f => [\n                buildRunwayVacated(f, this.props.map.id),\n                buildGoodDayMessage(this.props.map.id, f.id)\n            ]);\n            const koMessages = _.flatMap(landedKo, f => [\n                buildWrongRunwayVacated(f, this.props.map.id),\n                buildGoodDayMessage(this.props.map.id, f.id)\n            ]);\n            return this.withSession(newSession)\n                .addMessages(okMessages)\n                .addMessages(koMessages);\n        } else {\n            return this;\n        }\n    }\n\n    /**\n     * \n     */\n    addTime(): TrafficSimulator {\n        const { dt } = this.props;\n        const session = fromJS(this.session)\n            .update('t', (t: number) => {\n                return t + dt;\n            })\n            .toJS() as Session;\n        return this.withSession(session);\n    }\n\n    /**\n     * \n     */\n    processFlights(): TrafficSimulator {\n        const { flights } = this.session;\n        if (_.size(flights) > 0) {\n            const processed = _(flights)\n                .values()\n                .map(flight =>\n                    new FlightProcessor(flight, this.props).processTime()\n                );\n            const newFlights = processed.map(fp => [fp.flight.id, fp.flight]).fromPairs().value() as Record<string, Flight>;\n            const messages = processed.flatMap('messages').value();\n            const newSession = fromJS(this.session).set('flights', newFlights).toJS() as Session;\n            return this.withSession(newSession).withMessages(messages);\n        } else {\n            return this;\n        }\n    }\n\n    /**\n     * \n     * @param {*} sessionMap \n     */\n    processForNewFlight(): TrafficSimulator {\n        const { dt, level } = this.props;\n        const { maxPlane, flightFreq } = level;\n        const { flights, t, noFlights } = this.session;\n        // Check for new flight eligibility\n        const max = maxPlane - _.size(flights);\n        const n = Math.max(\n            Math.min(rndPoisson(dt * flightFreq / 3600), max),\n            (noFlights === 0 && t >= MAX_INITIAL_IDLE_INTERVAL) ? 1 : 0);\n        if (n > 0) {\n            var tmp: TrafficSimulator = this;\n            for (var i = 0; i < n; i++) {\n                tmp = tmp.createFlight();\n            }\n            return tmp;\n        } else {\n            return this;\n        }\n    }\n\n    /**\n     * \n     */\n    createEntryCandidates(): HeadingMapNode[] {\n        const { safeEntryDelay } = this.props;\n        const { entries, t } = this.session;\n        const entryTimeout = t - safeEntryDelay;\n        return _(this.props.map.nodes)\n            .filter(node =>\n                node.type === MapNodeType.Runway\n                || (node.type === MapNodeType.Entry\n                    && (!entries[node.id]\n                        || entries[node.id] < entryTimeout)\n                )\n            ).value() as HeadingMapNode[];\n    }\n\n    /**\n     * \n     */\n    createExitCandidates(): MapNode[] {\n        return _(this.props.map.nodes)\n            .filter(node => node.type === MapNodeType.Runway || node.type === MapNodeType.Entry)\n            .value();\n    }\n\n    /**\n     * \n     * @param {*} sessionMap \n     */\n    createFlight() {\n        const candidates = this.createEntryCandidates();\n        if (candidates.length > 0) {\n            const { jetProb, entryAlt, flightTempl, flightVoices } = this.props;\n            const { noFlights, t, flights } = this.session;\n            const entry = choose(candidates);\n            const to = choose(this.createExitCandidates());\n            const type = rndByProb(jetProb) ? FlightType.Jet : FlightType.Airplane;\n            var id = undefined;\n            do {\n                id = rndFlightId();\n            } while (flights[id] !== undefined);\n            const fromRwy = isRunway(entry);\n            const alt = fromRwy ? 0 : entryAlt;\n            const status = fromRwy ? FlightStatus.WaitingForTakeoff : FlightStatus.Flying;\n            const speed = fromRwy ? 0 : flightSpeed(alt, flightTempl[type]);\n            const voice = flightVoices.length > 0 ? choose(flightVoices) : undefined;\n            const flight: Flight = {\n                id,\n                type,\n                alt,\n                toAlt: alt,\n                hdg: entry.hdg,\n                to: to.id,\n                lat: entry.lat,\n                lon: entry.lon,\n                speed,\n                from: entry.id,\n                status,\n                voice\n            };\n            const sessionMap1 = fromJS(this.session)\n                .set('noFlights', noFlights + 1)\n                .setIn(['flights', flight.id], flight);\n            const sessionMap = fromRwy\n                ? sessionMap1\n                : sessionMap1.setIn(['entries', entry.id], t);\n            const next = this.withSession(sessionMap.toJS())\n\n            const toRwy = isRunway(to);\n            return fromRwy ?\n                (toRwy ?\n                    next.addDepartureToDialog(flight) :\n                    next.addDepartureLeaveDialog(flight)) :\n                (toRwy ?\n                    next.addEnterToDialog(flight) :\n                    next.addEnterLeaveDialog(flight));\n        } else {\n            return this;\n        }\n    }\n}\n","import _ from 'lodash';\nimport { AreaMap, FlightMap, GeoLocation, MapRoute, RadarNode } from './Map';\nimport { mapDao } from './MapDao';\n\nexport interface RadarMapProps {\n    readonly map: AreaMap;\n    readonly nodeMap: FlightMap;\n    readonly width: number;\n    readonly height: number;\n    readonly borders: number;\n    readonly offsetX: number;\n    readonly offsetY: number\n    readonly scale?: number;\n}\n\ninterface Rect {\n    readonly topLeft: number[];\n    readonly bottomRight: number[];\n}\n\n/**\n * RadarMap computes the pixel position of nodes or locations in the map\n */\nclass RadarMap {\n    private _props: RadarMapProps;\n\n    /**\n     * Creates the radar map\n     * @param {*} props the props\n     */\n    constructor(props: RadarMapProps) {\n        const { nodeMap, width, height, borders, offsetX = 0, offsetY = 0 } = props;\n        if (props.scale === undefined) {\n            const xRange = Math.max(nodeMap.xmax, -nodeMap.xmin);\n            const yRange = Math.max(nodeMap.ymax, -nodeMap.ymin);\n            const xscale = (width - borders * 2) / xRange / 2;\n            const yscale = (height - borders * 2) / yRange / 2;\n            const scale1 = Math.min(xscale, yscale);\n            this._props = _.assign({}, props, { scale: scale1, offsetX, offsetY });\n        } else {\n            this._props = _.assign({}, props, { offsetX, offsetY });\n        }\n    }\n\n    /** */\n    get props(): RadarMapProps { return this._props; }\n\n    /** */\n    get gridSize(): number {\n        const { width, height, borders } = this.props;\n        const mapSize = (Math.min(width, height) - borders * 2) / this.scale;\n        const gs10 = mapSize / 5;\n        const logGs = Math.round(Math.log10(gs10));\n        const gs = Math.pow(10, logGs);\n        return gs;\n    }\n\n    /** */\n    get rect(): Rect {\n        const { nodeMap } = this.props;\n        const xRange = Math.max(nodeMap.xmax, -nodeMap.xmin);\n        const yRange = Math.max(nodeMap.ymax, -nodeMap.ymin);\n        return {\n            topLeft: [-xRange, -yRange],\n            bottomRight: [xRange, yRange]\n        };\n    }\n\n    /**\n     * Returns the width of map in px\n     */\n    get witdh(): number { return this.props.width; }\n\n    /**\n     * Returns the height of map in px\n     */\n    get height(): number { return this.props.height; }\n\n    /**\n     * Returns the node map\n     */\n    get nodeMap(): FlightMap { return this.props.nodeMap; }\n\n    /**\n     * Returns the map\n     */\n    get map(): AreaMap { return this.props.map; }\n\n    /**\n     * Returns the nodes\n     */\n    get nodes(): Record<string, RadarNode> { return this.nodeMap.nodes; }\n\n    /** */\n    get scale(): number { return this.props.scale || 1; }\n\n    /** */\n    get offsetX(): number { return this.props.offsetX; }\n\n    /** */\n    get offsetY(): number { return this.props.offsetY; }\n\n    /**\n     * Return a node\n     * @param id the node id \n     */\n    node(id: string): RadarNode {\n        return this.nodes[id];\n    }\n\n    /**\n     * Returns the pix coordinates of node [x, y]\n     * @param coords the coordinates in nms\n     */\n    pointByNm(coords: number[]): number[] {\n        const { width, height } = this.props;\n        const x = (coords[0] - this.offsetX) * this.scale + width / 2;\n        const y = -(coords[1] - this.offsetY) * this.scale + height / 2;\n        return [x, y];\n    }\n\n    /**\n     * Returns the pix coordinate of node [x, y]\n     * @param node the node\n     */\n    pointByNode(node: RadarNode): number[] {\n        return this.pointByNm(node.coords);\n    }\n\n    /**\n     * Returns the pix coordinate of node [x, y]\n     * @param id the node id\n     */\n    pointByNodeId(id: string): number[] {\n        return this.pointByNode(this.node(id));\n    }\n\n    /**\n     * Returnds the route paths  [[fromx, toy], [tox, toy]]\n     * @param route the route\n     */\n    routePath(route: MapRoute): number[][] {\n        const from = this.pointByNodeId(route.edges[0]);\n        const to = this.pointByNodeId(route.edges[1]);\n        return [from, to];\n    }\n\n    /**\n     * return the pix coordinate [x, y]\n     * @param location the location {lat, lon}\n     */\n    pointByGeo(location: GeoLocation): number[] {\n        return this.pointByNm(mapDao.xy(location, this.map.center));\n    }\n\n    /**\n     * \n     * @param dx \n     * @param dy \n     */\n    moveByNm(dx: number, dy: number): RadarMap {\n        return new RadarMap(_.defaults({\n            offsetX: this.offsetX + dx,\n            offsetY: this.offsetY + dy\n        }, this.props));\n    }\n\n    /**\n     * \n     * @param dx \n     * @param dy \n     */\n    moveByPts(dx: number, dy: number): RadarMap {\n        const dxnms = -dx / this.scale;\n        const dynms = dy / this.scale;\n        return this.moveByNm(dxnms, dynms);\n    }\n}\n\nexport default RadarMap;\n","import React, { Component, FunctionComponent } from 'react';\n\nimport _ from 'lodash';\nimport RadarMap from './RadarMap';\nimport { sprintf } from 'sprintf-js';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faSearchMinus, faSearchPlus } from '@fortawesome/free-solid-svg-icons'\nimport { Flight, FlightStatus } from './Flight';\nimport { AreaMap, FlightMap, MapRoute, RadarNode } from './Map';\nimport { Session } from './Session';\nimport { homepage } from '../../package.json';\n\nconst ZOOM_TICK = 57;\nconst ZOOM_SCALE = Math.log(10) / 4 / ZOOM_TICK;\nconst GRID_MARKER_HEIGHT = 4;\n\nconst RadarConf = {\n    width: 850,\n    height: 850,\n    borders: 30\n};\n\nconst ImageConf = {\n    width: 15,\n    height: 14\n};\n\nconst PlaneConf = {\n    text1: { x: 2, y: -24 },\n    text2: { x: 2, y: -12 },\n    bar: { x1: 0, x2: 0, y1: -8, y2: -34 }\n};\n\nconst FlightLevels = ['040', '080', '120', '160', '200', '240', '280', '320', '360'];\n\n/**\n * \n * @param pt \n * @param props \n */\nfunction textPos(pt: number[], props: any): number[] {\n    const { alignment = 'E', width = 20, height = 8, radius = 6 } = props;\n    var x = pt[0];\n    var y = pt[1];\n    switch (alignment) {\n        case 'W':\n        case 'NW':\n        case 'SW':\n            x -= radius + width;\n            break;\n        case 'E':\n        case 'NE':\n        case 'SE':\n            x += radius;\n            break;\n        default:\n            x -= width / 2;\n    }\n    switch (alignment) {\n        case 'N':\n        case 'NE':\n        case 'NW':\n            y -= radius;\n            break;\n        case 'S':\n        case 'SE':\n        case 'SW':\n            y += radius + height;\n            break;\n        default:\n            y += height / 2;\n    }\n    return [x, y];\n}\n\n/**\n * \n * @param {*} altitude \n */\nfunction flightLevel(altitude: number): string {\n    return FlightLevels[Math.max(0, Math.floor((altitude - 2000) / 4000))];\n}\n\n/**\n * \n * @param {*} param0 \n */\nconst Node: FunctionComponent<{\n    readonly node: RadarNode;\n    readonly radarMap: RadarMap;\n}> = ({ node, radarMap }) => {\n    const pt = radarMap.pointByNode(node);\n    const textPt = textPos(pt, { alignment: node.node.alignment });\n    const nodeClass = node.node.type;\n    const textClass = node.node.type;\n    return (\n        <g>\n            <circle cx={pt[0]} cy={pt[1]} className={nodeClass} />\n            <text x={textPt[0]} y={textPt[1]} className={textClass}>{node.node.id}</text>\n        </g>\n    );\n}\n\n/**\n * \n * @param angle \n * @param x \n * @param y \n */\nfunction rotate(angle: number, x: number, y: number): string {\n    return sprintf('rotate(%f,%f,%f)', angle, x, y);\n}\n\n/**\n * \n * @param x \n * @param y \n */\nfunction translate(x: number, y: number): string {\n    return sprintf('translate(%g,%g)', x, y);\n}\n\n/**\n * \n * @param {*} param0 \n */\nconst FlightGraph: FunctionComponent<{\n    readonly flight: Flight;\n    readonly radarMap: RadarMap;\n    collisionDistance: number;\n}> = ({ flight, radarMap, collisionDistance }) => {\n    if (flight.status === FlightStatus.WaitingForTakeoff) {\n        return (<g />);\n    } else {\n        const pt = radarMap.pointByGeo(flight);\n        const collisionRadius = collisionDistance * radarMap.scale / 2;\n        const showColllision = collisionRadius > 5;\n        const collisionClassName = collisionRadius > 20 ? 'collision-dots' : 'collision-solid';\n        const fl = flightLevel(flight.alt);\n        const trans = translate(pt[0] - ImageConf.width / 2, pt[1] - ImageConf.height / 2)\n            + rotate(flight.hdg, ImageConf.width / 2, ImageConf.height / 2);\n        const url = `/${homepage}/images/${flight.type === 'J' ? 'jet' : 'plane'\n            }-${fl}.png`;\n        const txt1 = sprintf(\"%s-%s\", flight.id, flight.type);\n        const txt2 = sprintf('%03d', Math.round(flight.alt / 100));\n        const x1 = pt[0] + PlaneConf.text1.x;\n        const x2 = pt[0] + PlaneConf.text2.x;\n        const y1 = pt[1] + PlaneConf.text1.y;\n        const y2 = pt[1] + PlaneConf.text2.y;\n        const x3 = pt[0] + PlaneConf.bar.x1;\n        const x4 = pt[0] + PlaneConf.bar.x2;\n        const y3 = pt[1] + PlaneConf.bar.y1;\n        const y4 = pt[1] + PlaneConf.bar.y2;\n        const txtClassName = 'fl-' + fl;\n        return (\n            <g>\n                { showColllision\n                    ? (<circle cx={pt[0]} cy={pt[1]} className={`${collisionClassName} ${txtClassName}`} r={collisionRadius} />)\n                    : (<g />)}\n                <image href={url}\n                    x={0} y={0}\n                    width={ImageConf.width} height={ImageConf.height}\n                    transform={trans} />\n                <line x1={x3} y1={y3} x2={x4} y2={y4} className={txtClassName} />\n                <text x={x1} y={y1} className={txtClassName}>{txt1}</text>\n                <text x={x2} y={y2} className={txtClassName}>{txt2}</text>\n            </g>);\n    }\n}\n\n/**\n *    x0   x1   x2\n * y1  |   |\n * y0  |---|    legend\n * y2  |   |\n * \n * @param {*} param0 \n */\nconst GridMarker: FunctionComponent<{\n    radarMap: RadarMap;\n}> = ({ radarMap }) => {\n    const { borders } = radarMap.props;\n    const gridSize = radarMap.gridSize;\n    const x0 = borders / 2;\n    const x1 = x0 + gridSize * radarMap.scale;\n    const x2 = x1 + 10;\n    const y0 = borders / 2;\n    const y1 = borders / 2 - GRID_MARKER_HEIGHT;\n    const y2 = borders / 2 + GRID_MARKER_HEIGHT;\n    const gridMarkerText = sprintf(\"%g nms\", gridSize);\n    return (<g className=\"gridmarker\">\n        <line x1={x0} y1={y0} x2={x1} y2={y0} />\n        <line x1={x0} y1={y1} x2={x0} y2={y2} />\n        <line x1={x1} y1={y1} x2={x1} y2={y2} />\n        <text x={x2} y={y0}>{gridMarkerText}</text>\n    </g>\n    );\n}\n\n/**\n * \n * @param {*} param0 \n */\nconst Grid: FunctionComponent<{\n    radarMap: RadarMap;\n}> = ({ radarMap }) => {\n    const { topLeft, bottomRight } = radarMap.rect;\n    const gridSize = radarMap.gridSize;\n    const gxmin = Math.floor(topLeft[0] / gridSize);\n    const gxmax = Math.ceil(bottomRight[0] / gridSize);\n    const gymin = Math.floor(topLeft[1] / gridSize);\n    const gymax = Math.ceil(bottomRight[1] / gridSize);\n    const xidx = _.range(gxmin, gxmax + 1);\n    const yidx = _.range(gymin, gymax + 1);\n    const { borders, width, height } = radarMap.props;\n    const x0 = borders;\n    const x1 = width - borders;\n    const y0 = borders;\n    const y1 = height - borders;\n    return (\n        <g className=\"gridmap\">\n            {xidx.map(i => {\n                const upnms = [i * gridSize, gymin * gridSize];\n                const dwnnms = [i * gridSize, gymax * gridSize];\n                const pts = [\n                    radarMap.pointByNm(upnms),\n                    radarMap.pointByNm(dwnnms)\n                ];\n                return (\n                    <line key={`v${i}`}\n                        x1={pts[0][0]} y1={y0}\n                        x2={pts[1][0]} y2={y1} />\n                );\n            })}\n            {yidx.map(i => {\n                const lnms = [gxmin * gridSize, i * gridSize];\n                const rpnms = [gxmax * gridSize, i * gridSize];\n                const pts = [\n                    radarMap.pointByNm(lnms),\n                    radarMap.pointByNm(rpnms)\n                ];\n                return (\n                    <line key={`h${i}`}\n                        x1={x0} y1={pts[0][1]}\n                        x2={x1} y2={pts[1][1]} />\n                );\n            })}\n        </g>\n    );\n}\n\n/**\n * \n * @param {*} param0 \n */\nconst Route: FunctionComponent<{\n    readonly route: MapRoute;\n    readonly radarMap: RadarMap;\n}> = ({ route, radarMap }) => {\n    const pts = radarMap.routePath(route);\n    const cl = route.type;\n    return (<line x1={pts[0][0]} y1={pts[0][1]} x2={pts[1][0]} y2={pts[1][1]} className={cl} />);\n}\n\ntype RadarPaneProps = Partial<Readonly<{\n    session: Session;\n    map: AreaMap;\n    nodeMap: FlightMap;\n    collisionDistance: number;\n}>>;\n\nexport class RadarPane extends Component<RadarPaneProps, {\n    readonly dragging: boolean;\n    readonly offsetX: number;\n    readonly offsetY: number;\n    readonly scale: number;\n    readonly pivotX?: number;\n    readonly pivotY?: number;\n    readonly clientX?: number;\n    readonly clientY?: number;\n}> {\n    /**\n     * \n     * @param {*} props \n     */\n    constructor(props: RadarPaneProps) {\n        super(props);\n        const { map, nodeMap, session } = this.props;\n        const scale = (!!nodeMap && !!map && !!session)\n            ? new RadarMap(_.assign({}, RadarConf, {\n                map, nodeMap,\n                offsetX: 0, offsetY: 0\n            })).scale\n            : 1;\n\n        this.state = {\n            dragging: false,\n            offsetX: 0,\n            offsetY: 0,\n            scale\n        };\n        _.bindAll(this, [\n            'handleDown', 'handleMove', 'handleUp', 'handleWheel', 'render',\n            'handleFit', 'handleZoomIn', 'handleZoomOut'\n        ]);\n    }\n\n    /**\n     *\n     * @param {*} ev\n     */\n    handleDown(ev: React.MouseEvent) {\n        switch (ev.button) {\n            case 0:\n                // Drag map\n                ev.preventDefault();\n                this.setState({\n                    dragging: true,\n                    pivotX: ev.clientX,\n                    pivotY: ev.clientY,\n                    clientX: ev.clientX,\n                    clientY: ev.clientY\n                });\n                break;\n            case 1:\n                // fit the map to the viewport\n                ev.preventDefault();\n                this.fit();\n                break;\n            default:\n        }\n    }\n\n    fit() {\n        const { map, nodeMap, session } = this.props;\n        const { offsetX, offsetY } = this.state;\n        const scale = (!!nodeMap && !!map && !!session)\n            ? new RadarMap(_.assign({}, RadarConf, {\n                map, nodeMap, offsetX, offsetY\n            })).scale\n            : 1;\n        this.setState({\n            dragging: false,\n            offsetX: 0,\n            offsetY: 0,\n            scale\n        });\n    }\n    /**\n     *\n     * @param {*} ev\n     */\n    handleUp(ev: React.MouseEvent) {\n        ev.preventDefault();\n        const rm = this.radarMap();\n        if (rm) {\n            this.setState({\n                dragging: false,\n                offsetX: rm.offsetX,\n                offsetY: rm.offsetY\n            });\n        }\n    }\n\n    /**\n     *\n     * @param {*} ev\n     */\n    handleLeave(ev: React.MouseEvent) {\n        ev.preventDefault();\n        this.setState({\n            dragging: false\n        });\n    }\n\n    /**\n     * \n     * @param {*} ev \n     */\n    handleWheel(ev: React.WheelEvent) {\n        if (ev.shiftKey) {\n            // ev.preventDefault();\n            this.zoom(ev.deltaY);\n        }\n    }\n\n    zoom(deltaY: number) {\n        const factor = Math.exp(-deltaY * ZOOM_SCALE);\n        const rm = this.radarMap();\n        if (rm) {\n            const scale = rm.scale * factor;\n            this.setState({ scale });\n        }\n    }\n\n    handleZoomIn() {\n        this.zoom(-ZOOM_TICK);\n    }\n\n    handleZoomOut() {\n        this.zoom(ZOOM_TICK);\n    }\n\n    handleFit() {\n        this.fit();\n    }\n\n    /**\n     *\n     * @param {*} ev\n     */\n    handleMove(ev: React.MouseEvent) {\n        const { dragging } = this.state;\n        if (dragging) {\n            ev.preventDefault();\n            const { clientX, clientY } = ev;\n            this.setState({ clientX, clientY });\n        }\n    }\n\n    /**\n     * \n     */\n    radarMap() {\n        const { map, nodeMap } = this.props;\n        if (map && nodeMap) {\n            const { dragging, clientX = 0, clientY = 0, pivotX = 0, pivotY = 0, offsetX, offsetY, scale } = this.state;\n            if (dragging) {\n                return new RadarMap(_.assign({}, RadarConf, {\n                    map,\n                    nodeMap,\n                    width: RadarConf.width,\n                    height: RadarConf.height,\n                    offsetX,\n                    offsetY,\n                    scale\n                })\n                ).moveByPts(clientX - pivotX, clientY - pivotY);\n            } else {\n                return new RadarMap(_.assign({}, RadarConf, {\n                    map,\n                    nodeMap,\n                    width: RadarConf.width,\n                    height: RadarConf.height,\n                    offsetX,\n                    offsetY,\n                    scale\n                }));\n            }\n        }\n    }\n\n    /**\n     * \n     */\n    render() {\n        const { map, nodeMap, session, collisionDistance } = this.props;\n        const radarMap = this.radarMap();\n        if (!nodeMap || !map || !session || !radarMap) {\n            return (<svg width={RadarConf.width} height={RadarConf.height} className=\"radar\" />);\n        } else {\n            const flights = session.flights;\n            return (\n                <div>\n                    <svg width={RadarConf.width} height={RadarConf.height}\n                        onMouseMove={this.handleMove}\n                        onMouseDown={this.handleDown}\n                        onMouseUp={this.handleUp}\n                        onMouseLeave={this.handleUp}\n                        onWheel={this.handleWheel}\n                        className=\"radar\">\n                        <Grid radarMap={radarMap} />\n                        {_.map(map.routes, (route, i) => (\n                            <Route key={i} radarMap={radarMap} route={route} />\n                        ))}\n                        {_(nodeMap.nodes).values().map((node, i) => (\n                            <Node key={i} radarMap={radarMap} node={node} />\n                        )).value()}\n                        <GridMarker radarMap={radarMap} />\n                        {_(flights).values().orderBy('alt', 'asc').map(flight => (\n                            <FlightGraph key={flight.id} radarMap={radarMap} flight={flight}\n                                collisionDistance={collisionDistance || 4} />\n                        )).value()}\n                    </svg>\n                    <ButtonGroup vertical size=\"sm\">\n                        <Button variant=\"dark\" onClick={this.handleZoomIn}>\n                            <FontAwesomeIcon icon={faSearchPlus} />\n                        </Button>\n                        <Button variant=\"dark\" onClick={this.handleZoomOut}>\n                            <FontAwesomeIcon icon={faSearchMinus} />\n                        </Button>\n                        <Button variant=\"dark\" onClick={this.handleFit}>\n                            <FontAwesomeIcon icon={faSearch} />\n                        </Button>\n                    </ButtonGroup>\n                </div >\n            );\n        }\n    }\n}\n","import React, { FunctionComponent } from 'react';\nimport { Accordion, Card, Form } from 'react-bootstrap';\nimport '../App.css';\n\nconst DefaultSpeeds = [1, 3, 10];\n\n/**\n * \n * @param {*} param0 \n */\nexport const OptionsPane: FunctionComponent<{\n  readonly muted?: boolean;\n  readonly onMuted?: () => void;\n  readonly listeningEnabled?: boolean;\n  readonly onListeningEnabled?: () => void;\n  readonly speed?: number;\n  readonly speeds?: number[];\n  readonly onSpeed?: (speed: number) => void;\n}> = ({ muted, onMuted, listeningEnabled, onListeningEnabled, speed, speeds = DefaultSpeeds, onSpeed }) => {\n  return (\n    <Accordion defaultActiveKey=\"1\">\n      <Card bg=\"dark\" text=\"white\">\n        <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n          Options\n      </Accordion.Toggle>\n        <Accordion.Collapse eventKey=\"1\">\n          <Card.Body>\n            <Form>\n              <Form.Group controlId=\"muted\">\n                <Form.Label>Audio</Form.Label>\n                <Form.Check\n                  type=\"switch\"\n                  id=\"muted\"\n                  label=\"Muted\"\n                  onChange={onMuted}\n                  checked={muted} />\n                <Form.Check\n                  type=\"switch\"\n                  id=\"listening\"\n                  label=\"Listening\"\n                  onChange={onListeningEnabled}\n                  checked={listeningEnabled} />\n              </Form.Group>\n              <Form.Group controlId=\"speed\">\n                <Form.Label>Speed</Form.Label>\n                {speeds.map(sp => {\n                  return (\n                    <Form.Check\n                      type=\"radio\"\n                      name=\"speed\"\n                      checked={speed === sp}\n                      // id={sp}\n                      key={sp}\n                      value={sp}\n                      onChange={(ev: React.ChangeEvent<HTMLInputElement>) => { if (onSpeed) { onSpeed(parseFloat(ev.target.value)) } }}\n                      label={`x ${sp}`} />\n                  );\n                })}\n              </Form.Group>\n            </Form>\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    </Accordion>\n  );\n}\n","import React, { FunctionComponent } from 'react';\nimport _ from 'lodash';\nimport { sprintf } from 'sprintf-js';\nimport { Flight, FlightStatus } from './Flight';\nimport { Session } from './Session';\n\n/**\n * \n * @param {*} flight \n */\nfunction status(flight: Flight): string {\n    const { status, at, turnTo, rwy, from } = flight;\n\n    switch (status) {\n        case FlightStatus.Flying:\n            return '';\n        case FlightStatus.FlyingTo:\n            return `flying to ${at}`;\n        case FlightStatus.WaitingForTakeoff:\n            return sprintf('holding rwy %s', from);\n        case FlightStatus.Landing:\n            return sprintf('landing rwy %s', rwy);\n        case FlightStatus.Aligning:\n            return sprintf('aligning rwy %s', rwy);\n        case FlightStatus.Approaching:\n            return sprintf('approaching rwy %s', rwy);\n        case FlightStatus.HoldingFrom:\n        case FlightStatus.HoldingTo:\n            return 'holding';\n        case FlightStatus.HoldingFromAt:\n        case FlightStatus.HoldingToAt:\n            return `holding at ${at}`;\n        case FlightStatus.Turning:\n            return sprintf('turn to %s via %s', turnTo, at);\n        default:\n            return status;\n    }\n}\n\n/**\n * \n * @param {*} flight \n */\nfunction toLines(flight: Flight): string[] {\n    const fl = Math.round(flight.alt / 100);\n    const toFl = Math.round(flight.toAlt / 100);\n    const st = status(flight);\n    const line1 = sprintf('%3s to %s Class %s', flight.id, flight.to, flight.type);\n\n    const line2 = fl !== toFl\n        ? sprintf('    FL%03d to FL%03d Hdg %03d', fl, toFl, flight.hdg)\n        : sprintf('    FL%03d  Hdg %03d', fl, flight.hdg);\n\n    return st.length === 0\n        ? [line1, line2]\n        : [line1, line2, sprintf('    %s', status(flight))];\n}\n\n/**\n * \n * @param {*} param0 \n */\nexport const QueuePane: FunctionComponent<{\n    readonly session?: Session;\n}> = ({ session }) => {\n    if (!session) {\n        return (\n            <pre className=\"terminal\" />\n        );\n    } else {\n        const lines = _(session.flights)\n            .values()\n            .sortBy(['id'])\n            .flatMap(toLines)\n            .join('\\n');\n        return (\n            <pre className=\"terminal\">{lines}</pre>\n        );\n    }\n}\n","import React, { FunctionComponent } from 'react';\nimport { Accordion, Card } from 'react-bootstrap';\nimport '../App.css';\nimport { Session } from './Session';\nimport { CockpitLogger } from './CockpitLogger';\nimport { QueuePane } from './QueuePane';\n\n/**\n * \n * @param {*} param0 \n */\nexport const InfoPane: FunctionComponent<{\n  session?: Session,\n  logger?: CockpitLogger;\n}> = ({ session, logger }) => {\n  return (\n    <div>\n      <Accordion defaultActiveKey=\"0\">\n        <Card bg=\"dark\" text=\"white\">\n          <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n            Flights\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n              <QueuePane session={session} />\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n      <Accordion defaultActiveKey=\"0\">\n        <Card bg=\"dark\" text=\"white\">\n          <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n            Cockpit Log\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"2\">\n            <Card.Body>\n              {logger && logger.log.map((msg, i) => (\n                <div key={i} className={`term-${msg.style} text-monospace`}>{msg.text}</div>\n              ))}\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    </div>\n  );\n}\n","import { BehaviorSubject, combineLatest, Observable, Subject } from \"rxjs\";\nimport { map, tap, filter } from \"rxjs/operators\";\nimport { speakingPooling, synthSay } from \"./Audio\";\nimport _ from 'lodash';\n\nconst DefaultPolling = 500;\n/**\n * \n * @param param0\n */\nconst createRecogn: (arg: {\n    onresult?: (ev: SpeechRecognitionEvent) => void,\n    onnomatch?: (ev: SpeechRecognitionEvent) => void,\n    onend?: (ev: Event) => void\n    onerror?: (ev: Event) => void\n    ondefault?: (ev: Event) => void\n}) => SpeechRecognition | undefined\n    = ({ ondefault = null, onresult = null, onend = null, onnomatch = null, onerror = null }) => {\n        const SpeechRecognition: (new () => SpeechRecognition) | undefined = window.SpeechRecognition || (window as any).webkitSpeechRecognition;\n        if (!!SpeechRecognition) {\n            const recognition = new SpeechRecognition();\n            // const speechRecognitionList = new SpeechGrammarList();\n            // speechRecognitionList.addFromString(grammar, 1);\n            // recognition.grammars = speechRecognitionList;\n            recognition.continuous = false;\n            recognition.lang = 'en';\n            recognition.interimResults = false;\n            recognition.maxAlternatives = 1;\n\n            recognition.onresult = onresult || ondefault;\n            recognition.onspeechend = ondefault;\n            recognition.onnomatch = onnomatch || ondefault\n            recognition.onerror = onerror || ondefault;\n            recognition.onstart = ondefault;\n            recognition.onaudiostart = ondefault;\n            recognition.onsoundstart = ondefault;\n            recognition.onspeechstart = ondefault;\n            recognition.onspeechend = ondefault;\n            recognition.onsoundend = ondefault;\n            recognition.onaudioend = ondefault;\n            recognition.onend = onend || ondefault;\n            return recognition;\n            // return undefined;\n        } else {\n            return undefined;\n        }\n    };\n\nfunction cleared(listening: Observable<boolean>, speaking: Observable<boolean>): Observable<boolean> {\n    return combineLatest([speaking, listening]).pipe(\n        map(([speaking, listening]) => !speaking && !listening),\n        filter(cleared => cleared)\n    );\n}\n\ntype AudioDialogProps<T> = Readonly<{\n    polling?: number;\n    parseSpeech: (arg: string) => T;\n    isCompleted: (arg: T) => boolean;\n    onSpeech?: (arg: string) => void;\n    onRecognized?: (arg: T) => void;\n    onListening?: (arg: boolean) => void;\n}>;\n\n/**\n * \n */\nexport class AudioDialog<T> {\n    private _recogn: SpeechRecognition | undefined;\n    private _speeches: Subject<string>;\n    private _messages: Subject<T>;\n    private _listening: Subject<boolean>;\n    private _props: AudioDialogProps<T>;\n    private _buffer: string[];\n    private _speech: string;\n    private _listenEnabled: boolean;\n\n    constructor(props: AudioDialogProps<T>) {\n        this._props = props;\n        this._speeches = new Subject<string>();\n        this._messages = new Subject<T>();\n        this._listening = new BehaviorSubject<boolean>(false);\n        const self = this;\n        this._buffer = [];\n        this._speech = '';\n        this._listenEnabled = false;\n\n        this._recogn = createRecogn({\n            onend: ev => {\n                self._listening.next(false);\n            },\n            // onresult: ev => {\n            //     console.log('------------------');\n            //         _.forEach(ev.results, (element, i) => {\n            //         console.log(element.isFinal,\n            //             element[0].confidence,\n            //             element[0].transcript);\n            //     });\n            //     console.log('------------------');\n            // },\n            onresult: ev => {\n                const speech = ev.results[0][0].transcript\n                this.handleSpeech(speech);\n            }\n            // ondefault: ev => { console.log(ev.type); }\n        });\n\n        const { onSpeech, onListening, onRecognized } = props;\n        if (onSpeech) {\n            this.speeches().pipe(\n                tap(s => onSpeech(s))\n            ).subscribe();\n        }\n        if (onRecognized) {\n            this.messages().pipe(\n                tap(s => onRecognized(s))\n            ).subscribe();\n        }\n        if (onListening) {\n            this.listening().pipe(\n                tap(s => {\n                    onListening(s);\n                })\n            ).subscribe();\n        }\n\n        const notSpeaking = speakingPooling(props.polling || DefaultPolling).pipe(\n            filter(speaking => !speaking)\n        );\n        cleared(this.listening(), notSpeaking).pipe(\n            tap(cleared => self.handleCleared(cleared))\n        ).subscribe();\n    }\n\n    private get props() { return this._props; }\n\n    private get recogn() { return this._recogn; }\n\n    /**\n     * \n     * @param speech \n     */\n    private handleSpeech(speech: string) {\n        // console.log(speech);\n        const sp = (this._speech + ' ' + speech).trim();\n        const msg = this.props.parseSpeech(sp);\n        if (this.props.isCompleted(msg)) {\n            this._messages.next(msg);\n            this._speech = '';\n            this._speeches.next('');\n        } else {\n            this._speech = sp;\n            this._speeches.next(sp);\n        }\n    }\n\n    /**\n     * \n     */\n    private handleCleared(cleared: boolean) {\n        if (this._speech === '' && this._buffer.length > 0) {\n            const bfr = this._buffer;\n            this._buffer = [];\n            // console.log('speaking ...');\n            synthSay(bfr).subscribe();\n        } else if (this.listenEnabled) {\n            this.startListening();\n        }\n    }\n\n    /**\n     * \n     */\n    private startListening() {\n        const rec = this.recogn;\n        if (rec) {\n            this._listening.next(true);\n            // console.log('listening...')\n            rec.start();\n        }\n    }\n\n    speeches() { return this._speeches.asObservable(); }\n\n    /**\n     * \n     */\n    listening() { return this._listening.asObservable(); }\n\n    /**\n     * \n     */\n    messages() {\n        return this._messages.asObservable();\n    }\n\n    /**\n     * \n     * @param speeches \n     */\n    say(speeches: string[]) {\n        const bfr = this._buffer;\n        this._buffer = [];\n        this._buffer = _.concat(bfr, speeches);\n    }\n\n    get listenEnabled() { return this._listenEnabled; }\n\n    /**\n     * \n     */\n    set listenEnabled(value: boolean) {\n        this._listenEnabled = value;\n    }\n}\n","import React, { FunctionComponent } from 'react';\nimport { faMicrophone, faMicrophoneSlash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Card, Form, InputGroup } from 'react-bootstrap';\nimport '../App.css';\n\n/**\n * \n * @param {*} param0 \n */\nexport const SpeechPane: FunctionComponent<{\n  readonly listening?: boolean;\n  readonly speech?: string;\n}> = ({ listening, speech = '' }) => {\n  return (\n    <Card bg=\"dark\" text=\"white\">\n      <Card.Body>\n        <Form>\n          <Form.Group >\n            <Form.Label>Listening</Form.Label>\n            <InputGroup>\n              <InputGroup.Prepend>\n                {listening ?\n                  (<FontAwesomeIcon icon={faMicrophone} />) :\n                  (<FontAwesomeIcon icon={faMicrophoneSlash} />)}\n              </InputGroup.Prepend>\n            </InputGroup>\n            {speech.toLowerCase()}\n          </Form.Group>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n","import { buildClimbCommand, buildDescendCommand, buildFlyToCommand, buildHoldCommand, buildLandCommand, buildMaintainCommand, buildTakeoffCommand, buildUnitellegibleMessage, CommandMessage, MessageTag } from './Message';\nimport _ from 'lodash';\n\nconst Similitudes: Record<string, string[]> = {\n    at: ['it'],\n    cleared: ['clear', 'player', 'order'],\n    climb: ['time'],\n    descend: ['descent'],\n    fly: ['flight', 'play'],\n    flight: ['fly', 'play'],\n    maintain: ['19'],\n    runway: ['railway', 'runways', 'roundway'],\n    to: ['two', '2'],\n    via: ['fire', 'by']\n}\n\n/**\n * \n */\ntype ContextProps = Readonly<{\n    tokens: string[];\n    cursor: number;\n    stack: any[];\n}>\n\nconst NumberDict: Record<string, string> = {\n    zero: '0',\n    one: '1',\n    wine: '1',\n    two: '2',\n    to: '2',\n    three: '3',\n    four: '4',\n    for: '4',\n    five: '5',\n    six: '6',\n    seven: '7',\n    eight: '8',\n    nine: '9',\n    niner: '9',\n    naina: '9'\n};\n\nconst AlphaDict: Record<string, string> = {\n    alpha: 'a',\n    bravo: 'b',\n    charlie: 'c',\n    delta: 'd',\n    echo: 'e',\n    foxtrot: 'f',\n    'fox-trot': 'f',\n    'fox-tots': 'f',\n    golf: 'g',\n    hotel: 'h',\n    india: 'i',\n    indian: 'i',\n    juliet: 'j',\n    kilo: 'k',\n    lima: 'l',\n    mike: 'm',\n    november: 'n',\n    oscar: 'o',\n    papa: 'p',\n    quebec: 'q',\n    rebec: 'q',\n    prebec: 'q',\n    romeo: 'r',\n    sierra: 's',\n    tango: 't',\n    uniform: 'u',\n    uniforms: 'u',\n    uniformed: 'u',\n    victor: 'v',\n    viktor: 'v',\n    picture: 'v',\n    whiskey: 'w',\n    whisky: 'w',\n    'x-ray': 'x',\n    'x-rayed': 'x',\n    yankee: 'y',\n    zulu: 'z'\n};\n\nconst RunwaySuffixDict: Record<string, string> = {\n    right: 'r',\n    center: 'c',\n    left: 'l'\n};\n\ntype StackElement = string | CommandMessage | undefined;\n\n/**\n * \n * @param el \n */\nfunction isString(el: StackElement): el is string {\n    return typeof el === 'string';\n}\n\nfunction isMessage(el: StackElement): el is CommandMessage {\n    return el !== undefined && !isString(el);\n}\n\n/**\n * \n */\nclass Context implements Context {\n    private _props: ContextProps;\n\n    /**\n     * \n     * @param props \n     */\n    constructor(props: ContextProps) {\n        this._props = props;\n    }\n\n    /**\n     * \n     */\n    get props(): ContextProps { return this._props; }\n\n    /**\n     * \n     */\n    token(): string | undefined {\n        const { cursor, tokens } = this.props;\n        return cursor < tokens.length ? tokens[cursor] : undefined;\n    }\n\n    /**\n     * \n     */\n    next(): Context {\n        const { cursor, tokens } = this.props;\n        if (cursor >= tokens.length) {\n            return this;\n        } else {\n            return new Context(_.assign({}, this.props, { cursor: cursor + 1 }))\n        }\n    }\n\n    /**\n     * \n     * @param data \n     */\n    push(data: StackElement): Context {\n        const { stack } = this.props;\n        return new Context(_.assign({}, this.props, { stack: _.concat(stack, data) }));\n    }\n\n    /**\n     * \n     */\n    peek(): StackElement {\n        const { stack } = this.props;\n        return stack[stack.length - 1];\n    }\n\n    /**\n     * \n     * @param n \n     */\n    peekn(n: number): StackElement[] {\n        const { stack } = this.props;\n        return _.takeRight(stack, n);\n    }\n\n    /**\n     * \n     */\n    drop(n: number = 1): Context {\n        const { stack } = this.props;\n        return new Context(_.assign({}, this.props, { stack: _.dropRight(stack, n) }));\n    }\n}\n\n/**\n * \n * @param tokens \n */\nexport function buildParserContext(text: string): Context {\n    return new Context({\n        tokens: _.filter(text.toLowerCase().split(/[^-\\w]+/), t => t.length > 0),\n        cursor: 0,\n        stack: []\n    });\n}\n\nexport function speechToMessage(speech: string) {\n    const ctx = buildParserContext(speech);\n    try {\n        const cmd = command(ctx).peek();\n        if (isMessage(cmd)) {\n            return cmd;\n        } else {\n            return buildUnitellegibleMessage(speech, 'message-expected');\n        }\n    } catch (err: any) {\n        const error = err.message;\n        if (typeof error === 'string') {\n            const pe = error === 'word-expected' ? `${err.props.word}-exepected` : error;\n            return buildUnitellegibleMessage(speech, pe);\n        } else {\n            console.trace(err);\n            return buildUnitellegibleMessage(speech, 'unknown-error');\n        }\n    }\n}\n\n/**\n * \n */\ntype ErrorProps = {\n    word: string\n}\n\n/**\n * \n */\nclass ParserError extends Error {\n    private _ctx: Context;\n    private _props: ErrorProps | undefined;\n\n    /**\n     * \n     * @param msg \n     * @param ctx \n     * @param expr \n     */\n    constructor(msg: string, ctx: Context, props?: ErrorProps) {\n        super(msg);\n        this._ctx = ctx;\n        this._props = props;\n    }\n\n    /**\n     * \n     */\n    get context() { return this._ctx; }\n\n    /**\n     * \n     */\n    get props() { return this._props; }\n}\n\n/**\n * An experession returns the context after appliy a syntatic rules.\n * The effect of syntatic role is applyed to the cursor position and to the stack.\n * Types of Expression:\n * optional expression results the last element equal to undefined if not match otherwise a defined element poping eventualy elements\n * mandatory expression pushes elements on the stack poping eventualy elements\n */\ntype Expression = (ctx: Context) => Context;\n\n/**********************************/\n/* terminal syntactic expressions */\n/**********************************/\n\n/**\n * Mandatory expression to match end context.\n * result no changed\n * @param ctx \n */\nexport function errorIfNotEnd(ctx: Context): Context {\n    if (ctx.token()) {\n        throw new ParserError('end-expected', ctx);\n    }\n    return ctx;\n};\n\n/**\n * Mandatory expression to match end context.\n * result no changed\n * @param ctx \n */\nfunction errorIfEnd(ctx: Context): Context {\n    if (!ctx.token()) {\n        throw new ParserError('partial-command', ctx);\n    }\n    return ctx;\n};\n\n/******************+*************/\n/* terminal context expressions */\n/********************************/\n\n/**\n *  Concatenate last 2 results if any\n * @param ctx\n */\nexport function concat(ctx: Context): Context {\n    const [a, b] = ctx.peekn(2);\n    if (!isString(a)) {\n        return ctx.drop(2).push(b);\n    }\n    if (!isString(b)) {\n        return ctx.drop(2).push(a);\n    }\n    return ctx.drop(2).push(a + b);\n}\n\n/**\n *  Concatenate last 2 results if any\n * @param ctx\n */\n// function log(ctx: Context): Context {\n//     console.log(ctx);\n//     return ctx;\n// }\n\n/**\n * \n * @param ctx \n */\nfunction pushClimb(ctx: Context): Context {\n    const [flightId, atc, flightLevel] = ctx.peekn(3);\n    if (isString(flightId) && isString(atc) && isString(flightLevel)) {\n        const cmd = buildClimbCommand(flightId.toUpperCase(), atc.toUpperCase(), flightLevel, [MessageTag.VoiceMessage]);\n        return ctx.drop(3).push(cmd);\n    } else {\n        return ctx.drop(3).push(undefined);\n    }\n}\n\n/**\n * \n * @param ctx \n */\nfunction pushDescend(ctx: Context): Context {\n    const [flightId, atc, flightLevel] = ctx.peekn(3);\n    if (isString(flightId) && isString(atc) && isString(flightLevel)) {\n        const cmd = buildDescendCommand(flightId.toUpperCase(), atc.toUpperCase(), flightLevel, [MessageTag.VoiceMessage]);\n        return ctx.drop(3).push(cmd);\n    } else {\n        return ctx.drop(3).push(undefined);\n    }\n}\n\n/**\n * \n * @param ctx \n */\nfunction pushMaintain(ctx: Context): Context {\n    const [flightId, atc, flightLevel] = ctx.peekn(3);\n    if (isString(flightId) && isString(atc) && isString(flightLevel)) {\n        const cmd = buildMaintainCommand(flightId.toUpperCase(), atc.toUpperCase(), flightLevel, [MessageTag.VoiceMessage]);\n        return ctx.drop(3).push(cmd);\n    } else {\n        return ctx.drop(3).push(undefined);\n    }\n}\n\n/**\n * \n * @param ctx \n */\nfunction pushFlyTo(ctx: Context): Context {\n    const [flightId, atc, to, via] = ctx.peekn(4);\n    if (isString(flightId) && isString(atc) && isString(to)\n        && (via === undefined || isString(via))) {\n        const cmd = buildFlyToCommand(flightId.toUpperCase(), atc.toUpperCase(),\n            to.toUpperCase(), via?.toUpperCase(), [MessageTag.VoiceMessage]);\n        return ctx.drop(4).push(cmd);\n    } else {\n        return ctx.drop(4).push(undefined);\n    }\n}\n\n/**\n * \n * @param ctx \n */\nfunction pushHold(ctx: Context): Context {\n    const [flightId, atc, at] = ctx.peekn(3);\n    if (isString(flightId) && isString(atc) && (at === undefined || isString(at))) {\n        const cmd = buildHoldCommand(flightId.toUpperCase(), atc.toUpperCase(),\n            at ? at.toUpperCase() : at, [MessageTag.VoiceMessage]);\n        return ctx.drop(3).push(cmd);\n    } else {\n        return ctx.drop(3).push(undefined);\n    }\n}\n\n/**\n * \n * @param ctx \n */\nfunction pushLand(ctx: Context): Context {\n    const [flightId, atc, rwy] = ctx.peekn(3);\n    if (isString(flightId) && isString(atc) && isString(rwy)) {\n        const cmd = buildLandCommand(flightId.toUpperCase(), atc.toUpperCase(), rwy.toUpperCase(), [MessageTag.VoiceMessage]);\n        return ctx.drop(3).push(cmd);\n    } else {\n        return ctx.drop(3).push(undefined);\n    }\n}\n\n/**\n * @param ctx \n */\nfunction pushTakeoff(ctx: Context): Context {\n    const [flightId, atc, rwy, fl] = ctx.peekn(4);\n    if (isString(flightId) && isString(atc) && isString(rwy) && isString(fl)) {\n        const cmd = buildTakeoffCommand(flightId.toUpperCase(), atc.toUpperCase(),\n            rwy.toUpperCase(), fl, [MessageTag.VoiceMessage]);\n        return ctx.drop(4).push(cmd);\n    } else {\n        return ctx.drop(4).push(undefined);\n    }\n}\n\n/**\n * @param ctx \n */\nexport function nop(ctx: Context): Context {\n    return ctx;\n}\n\n/***********************************/\n/* Syntactical expression creation */\n/***********************************/\n\n/**\n * Returns the parser with word element meting regex or undefined if not match\n * Optional expression\n * @param word\n */\nexport function optRegex(regex: RegExp) {\n    return (ctx: Context) => {\n        const tok = ctx.token();\n        return tok && regex.test(tok) ?\n            ctx.next().push(tok) :\n            ctx.push(undefined);\n    }\n}\n\n/**\n * \n * @param word \n * @param expected \n */\nfunction isSimilar(word: string | undefined, expected: string) {\n    if (word) {\n        const sims = _.concat([expected], Similitudes[expected] || []);\n        return sims.indexOf(word) >= 0;\n    } else {\n        return false;\n    }\n}\n\n/**\n * Returns the parse with word in the stack and skiped if matches\n * or undefined in the stack\n * @param word \n */\nexport function optWord(word: string) {\n    return (ctx: Context) => {\n        const tok = ctx.token();\n        return isSimilar(tok, word) ?\n            ctx.next().push(word) :\n            ctx.push(undefined);\n    }\n}\n\n/**\n * Returns the parse with word in the stack and skiped if matches\n * or throws an error\n * @param word \n */\nexport function word(word: string): Expression {\n    return (ctx) => {\n        const ctx1 = errorIfEnd(ctx);\n        if (!isSimilar(ctx1.token(), word)) {\n            throw new ParserError('word-expected', ctx1, { word });\n        }\n        return ctx1.next();\n    }\n}\n\n/**\n * Skip a word \n * @param word \n */\nexport function skipWord(word: string) {\n    return (ctx: Context) => {\n        const tok = ctx.token();\n        return isSimilar(tok, word) ? ctx.next() : ctx;\n    }\n}\n/**\n * Returns the parse with mapped word in the stack and skiped if matches\n * or undefined\n * @param props \n */\nexport function optDict(props: Record<string, StackElement>) {\n    return (ctx: Context) => {\n        const tok = ctx.token();\n        if (tok) {\n            const value = props[tok];\n            if (value) {\n                return ctx.next().push(value)\n            }\n        }\n        return ctx.push(undefined);\n    };\n}\n\n/*******************************/\n/* Context expression creation */\n/*******************************/\n\n/**\n * Generate an error\n * @param msg error message\n */\nexport function error(msg: string): Expression {\n    return (ctx: Context): Context => {\n        throw new ParserError(msg, ctx);\n    }\n}\n\n/**\n * Drop elements from stack\n * @param n\n */\nexport function drop(n: number = 1): Expression {\n    return (ctx: Context): Context => ctx.drop(n);\n}\n\n/**\n * Drop elements from stack\n * @param n\n */\nfunction push(el: StackElement): Expression {\n    return (ctx: Context): Context => ctx.push(el);\n}\n\n/************************/\n/* Expression operators */\n/************************/\n\n/**\n * Applies all the list of expressions\n * Returns an expression the applies the single expressions sequentialy\n * the last expression may reduce all results of the single expressions\n * @param exprs \n */\nexport function all(...exprs: Expression[]): Expression {\n    return (ctx: Context): Context => _.reduce(exprs, (ctx1, expr) => expr(ctx1), ctx);\n}\n\n/**\n * Applies conditioning expressions by conditioning stack element\n * @param whenDef \n * @param whenUndef \n */\nexport function ifThenElse(whenDef?: Expression, whenUndef?: Expression) {\n    return (ctx: Context): Context => {\n        return ctx.peek() ?\n            (whenDef ? whenDef(ctx) : ctx) :\n            (whenUndef ? whenUndef(ctx) : ctx);\n    };\n}\n\n/**\n * Applies conditioning expressions by conditioning and consuming stack element\n * @param whenDef \n * @param whenUndef \n */\nexport function ifDropThenElse(whenDef?: Expression, whenUndef?: Expression) {\n    return (ctx: Context): Context => {\n        return ctx.peek() ?\n            (whenDef ? whenDef(ctx.drop()) : ctx) :\n            (whenUndef ? whenUndef(ctx.drop()) : ctx);\n    };\n}\n\n/**\n * Applies expression consuming until first defined result, return only the last defined result or undefined\n * @param exprs \n */\nexport function any(...exprs: Expression[]) {\n    return (ctx: Context): Context => _.reduce(exprs, (ctx1, expr) => {\n        if (ctx1.peek() !== undefined) {\n            return ctx1;\n        }\n        return expr(ctx1.drop());\n    }, ctx.push(undefined));\n}\n\n/**\n * Repeat the exp untill it returns undefined reducing the results with reducer expression\n * It processes a sequence of similar tokens accumulating the results\n * @param exp\n * @param reducer\n */\nexport function repeat(exp: Expression, reducer: Expression) {\n    return (ctx: Context): Context => {\n        var acc = ctx.push(undefined);\n        for (; ;) {\n            const ctx2 = exp(acc);\n            acc = reducer(ctx2);\n            if (ctx2.peek() === undefined) {\n                return acc;\n            }\n        }\n    };\n}\n\n/**\n * Transforms an optional expression in mandatory expression by generateing an error\n * \n * @param errorCode \n * @param expr \n */\nexport function must(errorCode: string) {\n    return all(\n        ifThenElse(\n            undefined,\n            any(\n                errorIfEnd,\n                error(errorCode)\n            )\n        )\n    );\n}\n\n/*************************************/\n/** Composed syntactical expressions */\n/*************************************/\n\n/**\n * Returns an optional sequence of numbers\n */\nexport const optNum =\n    repeat(\n        any(\n            optRegex(/^\\d*$/),\n            optDict(NumberDict)),\n        concat);\n\n/**\n * Returns an optional sequence of alphabet words\n */\nexport const optAlpha =\n    repeat(\n        optDict(AlphaDict),\n        concat);\n\n/**\n * Returns an optional sequence of alphanumeric words\n */\nexport const optAlphaNum =\n    repeat(\n        any(\n            optAlpha,\n            optNum),\n        concat);\n\n/**\n * Returns a mandatory flight id\n */\nexport const flightId = all(optAlphaNum, must('flight-id-expected'));\n\nconst beaconId = all(optAlphaNum, must('beacon-id-expected'));\n\n/**\n * Returns a mandatory atc\n */\nexport const atc =\n    all(\n        optDict({\n            london: 'lon',\n            paris: 'par',\n            munich: 'mun',\n            milan: 'mil',\n            frankfurt: 'ffm'\n        }),\n        ifThenElse(\n            word('atc')\n        ),\n        must('atc-expected')\n    );\n\nexport const flightLevel =\n    all(\n        optWord('flight'),\n        ifDropThenElse(\n            word('level'),\n            nop\n        ),\n        optNum,\n        must('flight-level-expected')\n    );\n\nconst optRunway =\n    all(\n        skipWord('runway'),\n        optNum,\n        ifThenElse(\n            all(\n                optDict(RunwaySuffixDict),\n                concat\n            )\n        )\n    );\n\nexport const runway = all(optRunway, must('runway-expected'));\n\nconst optClimb =\n    all(\n        optWord('climb'),\n        ifDropThenElse(\n            all(\n                word('to'),\n                flightLevel,\n                pushClimb\n            )\n        )\n    );\n\nconst optDescend =\n    all(\n        optWord('descend'),\n        ifDropThenElse(\n            all(\n                word('to'),\n                flightLevel,\n                pushDescend\n            )\n        )\n    );\n\nconst optMaintain =\n    all(\n        optWord('maintain'),\n        ifDropThenElse(\n            all(\n                flightLevel,\n                pushMaintain\n            )\n        )\n    );\n\nconst optFlyTo =\n    all(\n        optWord('fly'),\n        ifDropThenElse(\n            all(\n                word('to'),\n                beaconId,\n                optWord('via'),\n                ifDropThenElse(\n                    beaconId,\n                    push(undefined)\n                ),\n                pushFlyTo\n            )\n        )\n    );\n\nconst optHold =\n    all(\n        optWord('hold'),\n        ifDropThenElse(\n            all(\n                word('at'),\n                all(\n                    optWord('current'),\n                    ifDropThenElse(\n                        all(\n                            word('position'),\n                            push(undefined),\n                            pushHold\n                        ),\n                        all(\n                            beaconId,\n                            pushHold\n                        )\n                    ),\n                )\n            )\n        )\n    );\n\nconst optLand =\n    all(\n        optWord('cleared'),\n        ifDropThenElse(\n            all(\n                word('to'),\n                word('land'),\n                runway,\n                pushLand\n            )\n        )\n    );\n\nconst optTakeoff =\n    all(\n        optRunway,\n        ifThenElse(\n            all(\n                word('cleared'),\n                word('to'),\n                any(\n                    all(\n                        optWord('take'),\n                        ifThenElse(\n                            word('off')\n                        )\n                    ),\n                    all(\n                        word('takeoff'),\n                        push(undefined)\n                    )\n                ),\n                drop(),\n                word('climb'),\n                word('to'),\n                flightLevel,\n                pushTakeoff\n            )\n        )\n    );\n/**\n * Returns the command\n */\nexport const command =\n    all(\n        flightId,\n        atc,\n        any(\n            optClimb,\n            optDescend,\n            optMaintain,\n            optFlyTo,\n            optHold,\n            optLand,\n            optTakeoff\n        ),\n        must('command-expected'),\n        errorIfNotEnd\n    );\n","import React, { Component } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { sessionDao } from './SessionDao';\nimport { CommandPane } from './CommandPane';\nimport { mapDao } from './MapDao';\nimport { flatMap, map, tap } from 'rxjs/operators';\nimport '../App.css';\nimport { interval, Observable, of } from 'rxjs';\nimport { levelDao } from './LevelDao';\nimport { cockpitLogger, CockpitLogger } from './CockpitLogger';\nimport _ from 'lodash';\nimport { buildSimulator, DefaultSimProps } from './TrafficSimulator';\nimport { RadarPane } from './RadarPane';\nimport { ATCNavBar } from './ATCNavbar';\nimport { Session } from './Session';\nimport { Level } from './Level';\nimport { AreaMap, FlightMap } from './Map';\nimport { andMsgOp, CommandMessage, isCommand, isSpeechError, isVoice, Message, MessageTag, tagMsgOp } from './Message';\nimport { OptionsPane } from './OptionPane';\nimport { InfoPane } from './InfoPane';\nimport { AudioBuilder, TextBuilder } from './MessageConverters';\nimport { synthVoices } from './Audio';\nimport { AudioDialog } from './AudioDialog';\nimport { SpeechPane } from './SpeechPane';\nimport { speechToMessage } from './CommandInterpreter';\n\nconst ClockInterval = 400;\nconst RadarInterval = 4;\nconst SIM_INTERVAL = 1;\n\nconst muteMessage = andMsgOp([isVoice, tagMsgOp(MessageTag.Command)]);\n/**\n * \n */\nclass SessionPane1 extends Component<{\n  readonly sessionId: string;\n}, Readonly<{\n  session?: Session;\n  level?: Level;\n  map?: AreaMap;\n  nodeMap?: FlightMap;\n  logger: CockpitLogger;\n  listenEnabled: boolean;\n  muted: boolean;\n  speed: number;\n  ts: number;\n  flightVoices: string[];\n  audioDialog?: AudioDialog<Message>;\n  listening: boolean;\n  speech: string;\n}>> {\n  private clock: Observable<number>;\n\n  /**\n   * \n   * @param {*} props \n   */\n  constructor(props: {\n    readonly sessionId: string;\n  }) {\n    super(props);\n    const logger = cockpitLogger();\n    this.state = {\n      logger,\n      muted: false,\n      listenEnabled: true,\n      speed: 10,\n      ts: 0,\n      flightVoices: [],\n      listening: false,\n      speech: ''\n    };\n    this.clock = interval(ClockInterval);\n    _.bindAll(this, [\n      'handleClock', 'handleCommand', 'handleListenEnabled',\n      'handleMuted', 'handleSpeed', 'handleMessages'\n    ]);\n  }\n\n  /**\n   *\n   */\n  componentDidMount() {\n    const self = this;\n\n    const audioDialog = new AudioDialog<Message>({\n      polling: 100,\n      parseSpeech: speechToMessage,\n      isCompleted: m => !(isSpeechError(m) && m.parserError === 'partial-command'),\n      onRecognized: speech => self.handleSpeechMessage(speech),\n      onSpeech: speech => self.setState({ speech }),\n      onListening: listening => self.handleListening(listening)\n    });\n    audioDialog.listenEnabled = this.state.listenEnabled;\n    this.setState({ audioDialog });\n\n    sessionDao.getSession(this.props.sessionId).pipe(\n      flatMap(session => {\n        if (!session) {\n          return of({});\n        }\n        return levelDao.level(session.level).pipe(\n          flatMap(level =>\n            mapDao.getMap((session).map).pipe(\n              flatMap(map1 =>\n                synthVoices().pipe(\n                  map(voices => {\n                    const indices = _.range(0, voices.length).map(i => i.toString());\n                    const atcVoice = session.atcVoice;\n                    const nodeMap = mapDao.coords(map1.nodes, map1.center);\n                    const flightVoices1 = _.reject(indices, i => i === atcVoice);\n                    const flightVoices = flightVoices1.length > 0 ? flightVoices1\n                      : atcVoice ? [atcVoice]\n                        : [];\n                    return { session, map: map1, nodeMap, level, flightVoices };\n                  })\n                )\n              )\n            )\n          )\n        );\n      }),\n      tap(data => { self.setState(data) })\n    ).subscribe();\n\n    this.clock.pipe(\n      tap(this.handleClock)\n    ).subscribe()\n\n  }\n\n  /**\n   * \n   * @param listening \n   */\n  private handleListening(listening: boolean) {\n    this.setState({ listening });\n  }\n\n  /**\n   *\n   * @param {*} cmd\n   */\n  private handleCommand(cmd: CommandMessage) {\n    const { session, map, level, flightVoices } = this.state;\n    if (session && map && level) {\n      const sim = buildSimulator(session, {\n        map, level, flightVoices\n      });\n      const next = sim.processCommand(cmd);\n      const newSession = sessionDao.putSession(next.session);\n      this.handleMessages([cmd]);\n      this.handleMessages(next.messages);\n      this.setState({ session: newSession });\n    }\n  }\n\n  /**\n   *\n   * @param t\n   */\n  private handleClock(t: number) {\n    const { session, map, level, speed, ts, flightVoices } = this.state;\n    if (session && map && level) {\n      const ts1 = ts + ClockInterval * speed / 1000;\n      if (ts1 >= RadarInterval) {\n        var sess = session;\n        for (var ts2 = ts1; ts2 >= SIM_INTERVAL; ts2 -= SIM_INTERVAL) {\n          const sim = buildSimulator(sess, {\n            map, level, dt: SIM_INTERVAL, flightVoices\n          }).transition();\n          this.handleMessages(sim.messages);\n          sess = sim.session;\n        }\n        this.setState({ session: sessionDao.putSession(sess), ts: ts2 });\n      } else {\n        this.setState({ ts: ts1 });\n      }\n    }\n  }\n\n  /**\n   * \n   * @param messages \n   */\n  private handleMessages(messages: Message[]) {\n    const { map, logger, session, muted, audioDialog } = this.state;\n    if (map && messages.length > 0 && session) {\n      const texts = messages.map(m => new TextBuilder(m, map).build());\n      logger.putMessages(texts);\n      texts.forEach(txt => console.log(txt.text));\n      if (!muted) {\n        const clips = _(messages)\n          .reject(muteMessage)\n          .map(m => new AudioBuilder(m, map, session).build())\n          .value();\n        if (audioDialog) {\n          audioDialog.say(clips);\n        }\n      }\n    }\n  }\n\n  /**\n   *\n   */\n  private handleMuted() {\n    const muted = !this.state.muted;\n    if (muted && window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n    }\n    this.setState({ muted });\n  }\n\n  /**\n   *\n   */\n  private handleListenEnabled() {\n    const { audioDialog } = this.state;\n    const listenEnabled = !this.state.listenEnabled;\n    if (audioDialog) {\n      audioDialog.listenEnabled = listenEnabled;\n    }\n    this.setState({ listenEnabled });\n  }\n\n  /**\n   *\n   * @param {*} ev\n   */\n  private handleSpeed(speed: number) {\n    this.setState({ speed });\n  }\n\n  private handleSpeechMessage(msg: Message) {\n    console.log(msg);\n    if (isCommand(msg)) {\n      this.handleCommand(msg)\n    } else {\n      this.handleMessages([msg]);\n    }\n  }\n\n  /**\n   *\n   */\n  render() {\n    const { session, map, nodeMap, level, logger, muted, listenEnabled,\n      speed, listening, speech } = this.state;\n    if (!nodeMap || !session || !map || !level) {\n      return (<div></div>);\n    } else {\n      return (\n        <Container fluid>\n          <ATCNavBar session={session} />\n          <Container fluid className=\"ATC\">\n            <Row>\n              <Col xs={2}>\n                <InfoPane session={session} logger={logger} />\n              </Col>\n              <Col><RadarPane\n                session={session}\n                nodeMap={nodeMap}\n                map={map}\n                collisionDistance={DefaultSimProps.collisionDistance} />\n                <SpeechPane listening={listening} speech={speech} />\n              </Col>\n              <Col xs={2}>\n                <CommandPane session={session} map={map}\n                  onCommand={this.handleCommand} />\n                <OptionsPane\n                  speed={speed}\n                  onSpeed={this.handleSpeed}\n                  muted={muted}\n                  onMuted={this.handleMuted}\n                  listeningEnabled={listenEnabled}\n                  onListeningEnabled={this.handleListenEnabled} />\n              </Col>\n            </Row>\n          </Container>\n        </Container >\n      );\n    }\n  }\n}\n\n/**\n * \n */\nexport function SessionPane(): JSX.Element {\n  const { id } = useParams<{ id: string }>();\n  return (\n    <SessionPane1 sessionId={id} />\n  );\n}\n","import React, { Component } from 'react';\nimport { Card, Col, Container, Form, Row } from 'react-bootstrap';\nimport _ from 'lodash';\nimport { synthSay } from './Audio';\n// import grammar from './SpeachGrammar.jsx';\n// const SpeechGrammarList = window.SpeechGrammarList || window.webkitSpeechGrammarList\n// const SpeechRecognitionEvent = window.SpeechRecognitionEvent || window.webkitSpeechRecognitionEvent\n\nconst createRecogn: (arg: {\n    onresult?: (ev: SpeechRecognitionEvent) => void,\n    onnomatch?: (ev: SpeechRecognitionEvent) => void,\n    onend?: (ev: Event) => void\n    onerror?: (ev: Event) => void\n    ondefault?: (ev: Event) => void\n}) => SpeechRecognition | undefined\n    // = ({  }) => {\n    = ({ ondefault = null, onresult = null, onend = null, onnomatch = null, onerror = null }) => {\n        const SpeechRecognition: (new () => SpeechRecognition) | undefined = window.SpeechRecognition || (window as any).webkitSpeechRecognition;\n        console.log('create recogn', SpeechRecognition);\n        if (!!SpeechRecognition) {\n            const recognition = new SpeechRecognition();\n            // const speechRecognitionList = new SpeechGrammarList();\n            // speechRecognitionList.addFromString(grammar, 1);\n            // recognition.grammars = speechRecognitionList;\n            recognition.continuous = false;\n            recognition.lang = 'en';\n            recognition.interimResults = false;\n            recognition.maxAlternatives = 1;\n\n            recognition.onresult = onresult || ondefault;\n            recognition.onspeechend = ondefault;\n            recognition.onnomatch = onnomatch || ondefault\n            recognition.onerror = onerror || ondefault;\n            recognition.onstart = ondefault;\n            recognition.onaudiostart = ondefault;\n            recognition.onsoundstart = ondefault;\n            recognition.onspeechstart = ondefault;\n            recognition.onspeechend = ondefault;\n            recognition.onsoundend = ondefault;\n            recognition.onaudioend = ondefault;\n            recognition.onend = onend || ondefault;\n            console.log('create recogn', recognition);\n            return recognition;\n        } else {\n            return undefined;\n        }\n    }\n\n/**\n * \n */\nclass SpeechRecogn extends Component<{}, Readonly<{\n    cmd?: string;\n    error?: string;\n    event?: Event;\n}>> {\n    private _recognition?: SpeechRecognition;\n\n    /**\n     * \n     * @param props \n     */\n    constructor(props = {}) {\n        super(props);\n        this.state = {};\n        _.bindAll(this, [\n            'handleResult', 'listen'\n        ]);\n\n        const self = this;\n        const errorHandler = (event: any) => {\n            console.log(event);\n            const error = event.error;\n            self.setState({ error })\n        }\n        this._recognition = createRecogn({\n            onresult: self.handleResult,\n            onend: (event: Event) => {\n                console.log(event);\n                const r = self.recognition;\n                if (r) {\n                    r.start();\n                }\n            },\n            onnomatch: (event: SpeechRecognitionEvent) => {\n                console.log(event);\n                const error = 'No match';\n                self.setState({ error })\n            },\n            onerror: errorHandler,\n            ondefault: (event: any) => {\n                console.log(event);\n                self.setState({ event });\n            },\n        });\n    }\n\n    get recognition() { return this._recognition; }\n\n    componentDidMount() {\n        this.listen();\n    }\n\n    listen() {\n        const rec = this._recognition;\n        if (rec) {\n            rec.start();\n        }\n        this.setState({ error: undefined });\n    }\n\n    /**\n     * \n     * @param event \n     */\n    handleResult(event: SpeechRecognitionEvent) {\n        console.log(event);\n        const cmd = event.results[0][0].transcript;\n        synthSay(['3 ' + cmd]).subscribe();\n        this.setState({ cmd });\n    }\n\n    render() {\n        const { cmd, error, event = {} } = this.state;\n        return (\n            <Container>\n                <Card>\n                    <Card.Header>\n                        Speach Recognition Test\n                    </Card.Header>\n                    <Card.Body>\n                        <Form>\n                            <Form.Group as={Row} controlId=\"status\" >\n                                <Form.Label column sm=\"2\">\n                                    Status\n                                </Form.Label>\n                                <Col sm=\"10\">\n                                    <Form.Control plaintext readOnly defaultValue=\"\" value={(event as any).type} />\n                                </Col>\n                            </Form.Group>\n\n                            <Form.Group as={Row} controlId=\"Error\">\n                                <Form.Label column sm=\"2\">\n                                    Errors\n                                </Form.Label>\n                                <Col sm=\"10\">\n                                    <Form.Control plaintext readOnly defaultValue=\"\" value={error} />\n                                </Col>\n                            </Form.Group>\n\n                            <Form.Group as={Row} controlId=\"Text\">\n                                <Form.Label column sm=\"2\">\n                                    Text\n                                </Form.Label>\n                                <Col sm=\"10\">\n                                    <Form.Control plaintext readOnly defaultValue=\"\" value={cmd} />\n                                </Col>\n                            </Form.Group>\n                        </Form>\n                    </Card.Body>\n                </Card>\n            </Container>\n        );\n    }\n}\n\nexport default SpeechRecogn;\n","import React, { Component } from 'react';\nimport { Alert, Card, Col, Container, Form, FormGroup, Row } from 'react-bootstrap';\nimport _ from 'lodash';\nimport { synthVoices } from './Audio';\nimport { tap } from 'rxjs/operators';\nimport { AudioDialog } from './AudioDialog';\n\nexport class DialogTest extends Component<{}, Readonly<{\n    voice: string;\n    voices: SpeechSynthesisVoice[];\n    errors: string[];\n    speech?: string;\n    listening: boolean;\n    audioDialog?: AudioDialog<string>;\n}>> {\n    constructor(props: {}) {\n        super(props);\n        this.state = {\n            voice: '0',\n            voices: [],\n            errors: [],\n            listening: false\n        };\n        _.bindAll(this, [\n            'handleCloseAlert', 'handleVoice'\n        ]);\n    }\n\n    componentDidMount() {\n        const self = this;\n        synthVoices().pipe(\n            tap(voices => self.setState({ voices }))\n        ).subscribe();\n        const audioDialog = new AudioDialog<string>({\n            polling: 100,\n            parseSpeech: s => s,\n            isCompleted: s => s !== '',\n            onSpeech: speech => self.handleSpeech(speech),\n            onListening: listening => {\n                console.log(listening);\n                self.setState({ listening });\n            }\n        });\n        this.setState({ audioDialog });\n    }\n\n    handleSpeech(speech: string) {\n        const { audioDialog, voice } = this.state;\n        if (audioDialog) {\n            console.log(speech);\n            audioDialog.say([voice + ' ' + speech]);\n        }\n        this.setState({ speech })\n    }\n\n    handleVoice(voice: string) {\n        this.setState({ voice });\n    }\n\n    handleCloseAlert(i: number) {\n        const { errors } = this.state;\n        errors.splice(i, 1);\n        this.setState({ errors });\n    }\n\n    render() {\n        const { voice, errors, voices, speech, listening } = this.state;\n        console.log(listening);\n        return (\n            <Container>\n                <Card>\n                    <Card.Header>\n                        Audio test\n                    </Card.Header>\n                    <Card.Body>\n                        {\n                            errors.map((error, i) => (\n                                <Alert\n                                    key={i}\n                                    variant=\"danger\" dismissible\n                                    show={!!error}\n                                    onClose={() => this.handleCloseAlert(i)}>\n                                    {error}\n                                </Alert>\n                            ))\n                        }\n                        <Form>\n                            <FormGroup controlId=\"voiceInput\">\n                                <Form.Label>Voice</Form.Label>\n                                <Form.Control as=\"select\" value={voice}\n                                    onChange={ev => this.handleVoice(ev.target.value)} >\n                                    {voices.map((voice, i) => (\n                                        <option key={i} value={i}>{voice.name}</option>\n                                    ))}\n                                </Form.Control>\n                            </FormGroup>\n                            <Form.Group as={Row} controlId=\"Text\">\n                                <Form.Label column sm=\"2\">\n                                    Text\n                                </Form.Label>\n                                <Col sm=\"10\">\n                                    <Form.Control plaintext readOnly defaultValue={speech} />\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row} controlId=\"Text\">\n                                <Form.Label column sm=\"2\">\n                                    Text\n                                </Form.Label>\n                                <Col sm=\"10\">\n                                    <Form.Control plaintext readOnly defaultValue={\n                                        listening ?\n                                            'Listening ...' :\n                                            ''} />\n                                </Col>\n                            </Form.Group>\n                        </Form>\n                    </Card.Body>\n                </Card>\n            </Container>\n        );\n    }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from './modules/Home';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { SessionPane } from './modules/SessionPane';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport SpeechRecogn from './modules/SpeechRecogn';\nimport { DialogTest } from './modules/DialogTest';\n\nfunction App() {\n  return (\n    <Router basename=\".\">\n      <div>\n        <ToastContainer\n          position=\"bottom-left\"\n          autoClose={5000}\n          hideProgressBar\n          pauseOnFocusLoss\n          pauseOnHover />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/dialog\">\n            <DialogTest />\n          </Route>\n          <Route exact path=\"/speach\">\n            <SpeechRecogn />\n          </Route>\n          <Route path=\"/sessions/:id\" >\n            <SessionPane />\n          </Route>\n          <Route path=\"*\">\n            <NoMatch />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction NoMatch() {\n  return (\n    <div>\n      No Match\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}